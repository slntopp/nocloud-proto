//
//Copyright Â© 2021-2023 Nikita Ivanovski info@slnt-opp.xyz
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// @generated by protoc-gen-es v1.7.2 with parameter "target=js+dts"
// @generated from file registry/namespaces/namespaces.proto (package nocloud.registry.namespaces, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Value } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { Access } from "../../access/access_pb.js";

/**
 * @generated from message nocloud.registry.namespaces.CreateRequest
 */
export declare class CreateRequest extends Message<CreateRequest> {
  /**
   * @generated from field: string title = 1;
   */
  title: string;

  constructor(data?: PartialMessage<CreateRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.registry.namespaces.CreateRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateRequest;

  static equals(a: CreateRequest | PlainMessage<CreateRequest> | undefined, b: CreateRequest | PlainMessage<CreateRequest> | undefined): boolean;
}

/**
 * @generated from message nocloud.registry.namespaces.CreateResponse
 */
export declare class CreateResponse extends Message<CreateResponse> {
  /**
   * @generated from field: string uuid = 1;
   */
  uuid: string;

  constructor(data?: PartialMessage<CreateResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.registry.namespaces.CreateResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateResponse;

  static equals(a: CreateResponse | PlainMessage<CreateResponse> | undefined, b: CreateResponse | PlainMessage<CreateResponse> | undefined): boolean;
}

/**
 * @generated from message nocloud.registry.namespaces.Namespace
 */
export declare class Namespace extends Message<Namespace> {
  /**
   * @generated from field: string uuid = 1;
   */
  uuid: string;

  /**
   * @generated from field: string title = 2;
   */
  title: string;

  /**
   * @generated from field: optional nocloud.access.Access access = 3;
   */
  access?: Access;

  /**
   * @generated from field: map<string, google.protobuf.Value> meta = 4;
   */
  meta: { [key: string]: Value };

  constructor(data?: PartialMessage<Namespace>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.registry.namespaces.Namespace";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Namespace;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Namespace;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Namespace;

  static equals(a: Namespace | PlainMessage<Namespace> | undefined, b: Namespace | PlainMessage<Namespace> | undefined): boolean;
}

/**
 * @generated from message nocloud.registry.namespaces.JoinRequest
 */
export declare class JoinRequest extends Message<JoinRequest> {
  /**
   * @generated from field: string namespace = 1;
   */
  namespace: string;

  /**
   * @generated from field: string account = 2;
   */
  account: string;

  /**
   * Account access level to namespace
   *
   * @generated from field: optional int32 access = 3;
   */
  access?: number;

  constructor(data?: PartialMessage<JoinRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.registry.namespaces.JoinRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): JoinRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): JoinRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): JoinRequest;

  static equals(a: JoinRequest | PlainMessage<JoinRequest> | undefined, b: JoinRequest | PlainMessage<JoinRequest> | undefined): boolean;
}

/**
 * @generated from message nocloud.registry.namespaces.JoinResponse
 */
export declare class JoinResponse extends Message<JoinResponse> {
  /**
   * @generated from field: bool result = 1;
   */
  result: boolean;

  constructor(data?: PartialMessage<JoinResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.registry.namespaces.JoinResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): JoinResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): JoinResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): JoinResponse;

  static equals(a: JoinResponse | PlainMessage<JoinResponse> | undefined, b: JoinResponse | PlainMessage<JoinResponse> | undefined): boolean;
}

/**
 * @generated from message nocloud.registry.namespaces.LinkRequest
 */
export declare class LinkRequest extends Message<LinkRequest> {
  /**
   * @generated from field: string namespace = 1;
   */
  namespace: string;

  /**
   * @generated from field: string account = 2;
   */
  account: string;

  /**
   * Account access level to namespace
   *
   * @generated from field: optional int32 access = 3;
   */
  access?: number;

  /**
   * @generated from field: optional string role = 4;
   */
  role?: string;

  constructor(data?: PartialMessage<LinkRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.registry.namespaces.LinkRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LinkRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LinkRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LinkRequest;

  static equals(a: LinkRequest | PlainMessage<LinkRequest> | undefined, b: LinkRequest | PlainMessage<LinkRequest> | undefined): boolean;
}

/**
 * @generated from message nocloud.registry.namespaces.LinkResponse
 */
export declare class LinkResponse extends Message<LinkResponse> {
  /**
   * @generated from field: bool result = 1;
   */
  result: boolean;

  constructor(data?: PartialMessage<LinkResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.registry.namespaces.LinkResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LinkResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LinkResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LinkResponse;

  static equals(a: LinkResponse | PlainMessage<LinkResponse> | undefined, b: LinkResponse | PlainMessage<LinkResponse> | undefined): boolean;
}

/**
 * @generated from message nocloud.registry.namespaces.ListRequest
 */
export declare class ListRequest extends Message<ListRequest> {
  /**
   * Depth
   *
   * @generated from field: optional int32 depth = 1;
   */
  depth?: number;

  constructor(data?: PartialMessage<ListRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.registry.namespaces.ListRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListRequest;

  static equals(a: ListRequest | PlainMessage<ListRequest> | undefined, b: ListRequest | PlainMessage<ListRequest> | undefined): boolean;
}

/**
 * @generated from message nocloud.registry.namespaces.ListResponse
 */
export declare class ListResponse extends Message<ListResponse> {
  /**
   * @generated from field: repeated nocloud.registry.namespaces.Namespace pool = 1;
   */
  pool: Namespace[];

  constructor(data?: PartialMessage<ListResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.registry.namespaces.ListResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListResponse;

  static equals(a: ListResponse | PlainMessage<ListResponse> | undefined, b: ListResponse | PlainMessage<ListResponse> | undefined): boolean;
}

/**
 * @generated from message nocloud.registry.namespaces.DeleteRequest
 */
export declare class DeleteRequest extends Message<DeleteRequest> {
  /**
   * @generated from field: string uuid = 1;
   */
  uuid: string;

  constructor(data?: PartialMessage<DeleteRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.registry.namespaces.DeleteRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteRequest;

  static equals(a: DeleteRequest | PlainMessage<DeleteRequest> | undefined, b: DeleteRequest | PlainMessage<DeleteRequest> | undefined): boolean;
}

/**
 * @generated from message nocloud.registry.namespaces.DeleteResponse
 */
export declare class DeleteResponse extends Message<DeleteResponse> {
  /**
   * @generated from field: bool result = 1;
   */
  result: boolean;

  constructor(data?: PartialMessage<DeleteResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.registry.namespaces.DeleteResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteResponse;

  static equals(a: DeleteResponse | PlainMessage<DeleteResponse> | undefined, b: DeleteResponse | PlainMessage<DeleteResponse> | undefined): boolean;
}

/**
 * @generated from message nocloud.registry.namespaces.PatchRequest
 */
export declare class PatchRequest extends Message<PatchRequest> {
  /**
   * @generated from field: string uuid = 1;
   */
  uuid: string;

  /**
   * @generated from field: string title = 2;
   */
  title: string;

  constructor(data?: PartialMessage<PatchRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.registry.namespaces.PatchRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PatchRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PatchRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PatchRequest;

  static equals(a: PatchRequest | PlainMessage<PatchRequest> | undefined, b: PatchRequest | PlainMessage<PatchRequest> | undefined): boolean;
}

/**
 * @generated from message nocloud.registry.namespaces.PatchResponse
 */
export declare class PatchResponse extends Message<PatchResponse> {
  /**
   * @generated from field: bool result = 1;
   */
  result: boolean;

  constructor(data?: PartialMessage<PatchResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.registry.namespaces.PatchResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PatchResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PatchResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PatchResponse;

  static equals(a: PatchResponse | PlainMessage<PatchResponse> | undefined, b: PatchResponse | PlainMessage<PatchResponse> | undefined): boolean;
}

