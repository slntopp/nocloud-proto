//
//Copyright Â© 2021-2023 Nikita Ivanovski info@slnt-opp.xyz
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// @generated by protoc-gen-es v2.0.0 with parameter "target=js+dts"
// @generated from file registry/accounts/accounts.proto (package nocloud.registry.accounts, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import type { JsonObject, Message } from "@bufbuild/protobuf";
import type { Currency } from "../../billing/billing_pb";
import type { Access } from "../../access/access_pb";
import type { AdminNote } from "../../notes/notes_pb";
import type { Value } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file registry/accounts/accounts.proto.
 */
export declare const file_registry_accounts_accounts: GenFile;

/**
 * @generated from message nocloud.registry.accounts.Credentials
 */
export declare type Credentials = Message<"nocloud.registry.accounts.Credentials"> & {
  /**
   * @generated from field: string type = 1;
   */
  type: string;

  /**
   * @generated from field: repeated string data = 2;
   */
  data: string[];
};

/**
 * Describes the message nocloud.registry.accounts.Credentials.
 * Use `create(CredentialsSchema)` to create a new message.
 */
export declare const CredentialsSchema: GenMessage<Credentials>;

/**
 * @generated from message nocloud.registry.accounts.CreateRequest
 */
export declare type CreateRequest = Message<"nocloud.registry.accounts.CreateRequest"> & {
  /**
   * New Account title
   *
   * @generated from field: string title = 1;
   */
  title: string;

  /**
   * Credentials for New Account
   *
   * @generated from field: nocloud.registry.accounts.Credentials auth = 2;
   */
  auth?: Credentials;

  /**
   * Namespace to put Account under
   *
   * @generated from field: string namespace = 3;
   */
  namespace: string;

  /**
   * Account access level to parent namespace
   *
   * @generated from field: optional int32 access = 4;
   */
  access?: number;

  /**
   * Account Balance Currency
   *
   * @generated from field: nocloud.billing.Currency currency = 5;
   */
  currency?: Currency;

  /**
   * @generated from field: google.protobuf.Struct data = 6;
   */
  data?: JsonObject;
};

/**
 * Describes the message nocloud.registry.accounts.CreateRequest.
 * Use `create(CreateRequestSchema)` to create a new message.
 */
export declare const CreateRequestSchema: GenMessage<CreateRequest>;

/**
 * @generated from message nocloud.registry.accounts.CreateResponse
 */
export declare type CreateResponse = Message<"nocloud.registry.accounts.CreateResponse"> & {
  /**
   * @generated from field: string uuid = 1;
   */
  uuid: string;

  /**
   * @generated from field: string namespace = 2;
   */
  namespace: string;
};

/**
 * Describes the message nocloud.registry.accounts.CreateResponse.
 * Use `create(CreateResponseSchema)` to create a new message.
 */
export declare const CreateResponseSchema: GenMessage<CreateResponse>;

/**
 * @generated from message nocloud.registry.accounts.GetRequest
 */
export declare type GetRequest = Message<"nocloud.registry.accounts.GetRequest"> & {
  /**
   * @generated from field: string uuid = 1;
   */
  uuid: string;

  /**
   * @generated from field: bool public = 2;
   */
  public: boolean;
};

/**
 * Describes the message nocloud.registry.accounts.GetRequest.
 * Use `create(GetRequestSchema)` to create a new message.
 */
export declare const GetRequestSchema: GenMessage<GetRequest>;

/**
 * @generated from message nocloud.registry.accounts.SuspendConf
 */
export declare type SuspendConf = Message<"nocloud.registry.accounts.SuspendConf"> & {
  /**
   * @generated from field: optional bool immune = 1;
   */
  immune?: boolean;

  /**
   * @generated from field: optional float limit = 2;
   */
  limit?: number;
};

/**
 * Describes the message nocloud.registry.accounts.SuspendConf.
 * Use `create(SuspendConfSchema)` to create a new message.
 */
export declare const SuspendConfSchema: GenMessage<SuspendConf>;

/**
 * @generated from message nocloud.registry.accounts.Account
 */
export declare type Account = Message<"nocloud.registry.accounts.Account"> & {
  /**
   * @generated from field: string uuid = 1;
   */
  uuid: string;

  /**
   * @generated from field: string title = 2;
   */
  title: string;

  /**
   * @generated from field: google.protobuf.Struct data = 3;
   */
  data?: JsonObject;

  /**
   * @generated from field: optional double balance = 4;
   */
  balance?: number;

  /**
   * @generated from field: optional nocloud.access.Access access = 5;
   */
  access?: Access;

  /**
   * @generated from field: optional nocloud.registry.accounts.SuspendConf suspend_conf = 6;
   */
  suspendConf?: SuspendConf;

  /**
   * @generated from field: optional bool suspended = 7;
   */
  suspended?: boolean;

  /**
   * Account Balance Currency
   *
   * @generated from field: optional nocloud.billing.Currency currency = 8;
   */
  currency?: Currency;

  /**
   * @generated from field: nocloud.registry.accounts.AccountStatus status = 9;
   */
  status: AccountStatus;

  /**
   * @generated from field: repeated nocloud.notes.AdminNote admin_notes = 10;
   */
  adminNotes: AdminNote[];

  /**
   * @generated from field: bool active = 11;
   */
  active: boolean;
};

/**
 * Describes the message nocloud.registry.accounts.Account.
 * Use `create(AccountSchema)` to create a new message.
 */
export declare const AccountSchema: GenMessage<Account>;

/**
 * @generated from message nocloud.registry.accounts.UpdateResponse
 */
export declare type UpdateResponse = Message<"nocloud.registry.accounts.UpdateResponse"> & {
  /**
   * @generated from field: bool result = 1;
   */
  result: boolean;
};

/**
 * Describes the message nocloud.registry.accounts.UpdateResponse.
 * Use `create(UpdateResponseSchema)` to create a new message.
 */
export declare const UpdateResponseSchema: GenMessage<UpdateResponse>;

/**
 * @generated from message nocloud.registry.accounts.ListRequest
 */
export declare type ListRequest = Message<"nocloud.registry.accounts.ListRequest"> & {
  /**
   * Namespace ID to seek account in
   *
   * @generated from field: optional string namespace = 1;
   */
  namespace?: string;

  /**
   * Depth
   *
   * @generated from field: optional int32 depth = 2;
   */
  depth?: number;

  /**
   * @generated from field: optional uint64 page = 3;
   */
  page?: bigint;

  /**
   * @generated from field: optional uint64 limit = 4;
   */
  limit?: bigint;

  /**
   * @generated from field: optional string field = 5;
   */
  field?: string;

  /**
   * @generated from field: optional string sort = 6;
   */
  sort?: string;

  /**
   * @generated from field: map<string, google.protobuf.Value> filters = 7;
   */
  filters: { [key: string]: Value };
};

/**
 * Describes the message nocloud.registry.accounts.ListRequest.
 * Use `create(ListRequestSchema)` to create a new message.
 */
export declare const ListRequestSchema: GenMessage<ListRequest>;

/**
 * @generated from message nocloud.registry.accounts.ListResponse
 */
export declare type ListResponse = Message<"nocloud.registry.accounts.ListResponse"> & {
  /**
   * @generated from field: repeated nocloud.registry.accounts.Account pool = 1;
   */
  pool: Account[];

  /**
   * @generated from field: int64 count = 2;
   */
  count: bigint;

  /**
   * @generated from field: int64 active = 3;
   */
  active: bigint;
};

/**
 * Describes the message nocloud.registry.accounts.ListResponse.
 * Use `create(ListResponseSchema)` to create a new message.
 */
export declare const ListResponseSchema: GenMessage<ListResponse>;

/**
 * @generated from message nocloud.registry.accounts.SetCredentialsRequest
 */
export declare type SetCredentialsRequest = Message<"nocloud.registry.accounts.SetCredentialsRequest"> & {
  /**
   * @generated from field: string account = 1;
   */
  account: string;

  /**
   * @generated from field: nocloud.registry.accounts.Credentials auth = 2;
   */
  auth?: Credentials;
};

/**
 * Describes the message nocloud.registry.accounts.SetCredentialsRequest.
 * Use `create(SetCredentialsRequestSchema)` to create a new message.
 */
export declare const SetCredentialsRequestSchema: GenMessage<SetCredentialsRequest>;

/**
 * @generated from message nocloud.registry.accounts.SetCredentialsResponse
 */
export declare type SetCredentialsResponse = Message<"nocloud.registry.accounts.SetCredentialsResponse"> & {
  /**
   * @generated from field: bool result = 1;
   */
  result: boolean;
};

/**
 * Describes the message nocloud.registry.accounts.SetCredentialsResponse.
 * Use `create(SetCredentialsResponseSchema)` to create a new message.
 */
export declare const SetCredentialsResponseSchema: GenMessage<SetCredentialsResponse>;

/**
 * @generated from message nocloud.registry.accounts.TokenRequest
 */
export declare type TokenRequest = Message<"nocloud.registry.accounts.TokenRequest"> & {
  /**
   * @generated from field: nocloud.registry.accounts.Credentials auth = 1;
   */
  auth?: Credentials;

  /**
   * @generated from field: int32 exp = 2;
   */
  exp: number;

  /**
   * @generated from field: bool root_claim = 3;
   */
  rootClaim: boolean;

  /**
   * @generated from field: string sp_claim = 4;
   */
  spClaim: string;

  /**
   * @generated from field: string instance_claim = 5;
   */
  instanceClaim: string;

  /**
   * @generated from field: optional string uuid = 6;
   */
  uuid?: string;
};

/**
 * Describes the message nocloud.registry.accounts.TokenRequest.
 * Use `create(TokenRequestSchema)` to create a new message.
 */
export declare const TokenRequestSchema: GenMessage<TokenRequest>;

/**
 * @generated from message nocloud.registry.accounts.TokenResponse
 */
export declare type TokenResponse = Message<"nocloud.registry.accounts.TokenResponse"> & {
  /**
   * @generated from field: string token = 1;
   */
  token: string;
};

/**
 * Describes the message nocloud.registry.accounts.TokenResponse.
 * Use `create(TokenResponseSchema)` to create a new message.
 */
export declare const TokenResponseSchema: GenMessage<TokenResponse>;

/**
 * @generated from message nocloud.registry.accounts.DeleteRequest
 */
export declare type DeleteRequest = Message<"nocloud.registry.accounts.DeleteRequest"> & {
  /**
   * @generated from field: string uuid = 1;
   */
  uuid: string;
};

/**
 * Describes the message nocloud.registry.accounts.DeleteRequest.
 * Use `create(DeleteRequestSchema)` to create a new message.
 */
export declare const DeleteRequestSchema: GenMessage<DeleteRequest>;

/**
 * @generated from message nocloud.registry.accounts.DeleteResponse
 */
export declare type DeleteResponse = Message<"nocloud.registry.accounts.DeleteResponse"> & {
  /**
   * @generated from field: bool result = 1;
   */
  result: boolean;
};

/**
 * Describes the message nocloud.registry.accounts.DeleteResponse.
 * Use `create(DeleteResponseSchema)` to create a new message.
 */
export declare const DeleteResponseSchema: GenMessage<DeleteResponse>;

/**
 * @generated from message nocloud.registry.accounts.SuspendRequest
 */
export declare type SuspendRequest = Message<"nocloud.registry.accounts.SuspendRequest"> & {
  /**
   * @generated from field: string uuid = 1;
   */
  uuid: string;
};

/**
 * Describes the message nocloud.registry.accounts.SuspendRequest.
 * Use `create(SuspendRequestSchema)` to create a new message.
 */
export declare const SuspendRequestSchema: GenMessage<SuspendRequest>;

/**
 * @generated from message nocloud.registry.accounts.SuspendResponse
 */
export declare type SuspendResponse = Message<"nocloud.registry.accounts.SuspendResponse"> & {
  /**
   * @generated from field: bool result = 1;
   */
  result: boolean;
};

/**
 * Describes the message nocloud.registry.accounts.SuspendResponse.
 * Use `create(SuspendResponseSchema)` to create a new message.
 */
export declare const SuspendResponseSchema: GenMessage<SuspendResponse>;

/**
 * @generated from message nocloud.registry.accounts.UnsuspendRequest
 */
export declare type UnsuspendRequest = Message<"nocloud.registry.accounts.UnsuspendRequest"> & {
  /**
   * @generated from field: string uuid = 1;
   */
  uuid: string;
};

/**
 * Describes the message nocloud.registry.accounts.UnsuspendRequest.
 * Use `create(UnsuspendRequestSchema)` to create a new message.
 */
export declare const UnsuspendRequestSchema: GenMessage<UnsuspendRequest>;

/**
 * @generated from message nocloud.registry.accounts.UnsuspendResponse
 */
export declare type UnsuspendResponse = Message<"nocloud.registry.accounts.UnsuspendResponse"> & {
  /**
   * @generated from field: bool result = 1;
   */
  result: boolean;
};

/**
 * Describes the message nocloud.registry.accounts.UnsuspendResponse.
 * Use `create(UnsuspendResponseSchema)` to create a new message.
 */
export declare const UnsuspendResponseSchema: GenMessage<UnsuspendResponse>;

/**
 * @generated from enum nocloud.registry.accounts.AccountStatus
 */
export enum AccountStatus {
  /**
   * @generated from enum value: ACTIVE = 0;
   */
  ACTIVE = 0,

  /**
   * @generated from enum value: LOCK = 1;
   */
  LOCK = 1,

  /**
   * @generated from enum value: PERMANENT_LOCK = 2;
   */
  PERMANENT_LOCK = 2,
}

/**
 * Describes the enum nocloud.registry.accounts.AccountStatus.
 */
export declare const AccountStatusSchema: GenEnum<AccountStatus>;

