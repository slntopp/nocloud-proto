//
//Copyright Â© 2021-2023 Nikita Ivanovski info@slnt-opp.xyz
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//http://www.apache.org/licenses/LICENSE-2.0
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// @generated by protoc-gen-es v2.0.0 with parameter "target=js+dts"
// @generated from file access/access.proto (package nocloud.access, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file access/access.proto.
 */
export declare const file_access_access: GenFile;

/**
 * @generated from message nocloud.access.Access
 */
export declare type Access = Message<"nocloud.access.Access"> & {
  /**
   * @generated from field: nocloud.access.Level level = 1;
   */
  level: Level;

  /**
   * @generated from field: string role = 2;
   */
  role: string;

  /**
   * @generated from field: optional string namespace = 3;
   */
  namespace?: string;
};

/**
 * Describes the message nocloud.access.Access.
 * Use `create(AccessSchema)` to create a new message.
 */
export declare const AccessSchema: GenMessage<Access>;

/**
 * @generated from message nocloud.access.Node
 */
export declare type Node = Message<"nocloud.access.Node"> & {
  /**
   * @generated from field: string node = 1;
   */
  node: string;

  /**
   * @generated from field: string parent = 2;
   */
  parent: string;

  /**
   * @private
   *
   * @generated from field: string edge = 3;
   */
  edge: string;
};

/**
 * Describes the message nocloud.access.Node.
 * Use `create(NodeSchema)` to create a new message.
 */
export declare const NodeSchema: GenMessage<Node>;

/**
 * @generated from message nocloud.access.Nodes
 */
export declare type Nodes = Message<"nocloud.access.Nodes"> & {
  /**
   * @generated from field: repeated nocloud.access.Node nodes = 1;
   */
  nodes: Node[];
};

/**
 * Describes the message nocloud.access.Nodes.
 * Use `create(NodesSchema)` to create a new message.
 */
export declare const NodesSchema: GenMessage<Nodes>;

/**
 * @generated from enum nocloud.access.Level
 */
export enum Level {
  /**
   * @generated from enum value: NONE = 0;
   */
  NONE = 0,

  /**
   * @generated from enum value: READ = 1;
   */
  READ = 1,

  /**
   * @generated from enum value: MGMT = 2;
   */
  MGMT = 2,

  /**
   * @generated from enum value: ADMIN = 3;
   */
  ADMIN = 3,

  /**
   * @generated from enum value: ROOT = 4;
   */
  ROOT = 4,
}

/**
 * Describes the enum nocloud.access.Level.
 */
export declare const LevelSchema: GenEnum<Level>;

