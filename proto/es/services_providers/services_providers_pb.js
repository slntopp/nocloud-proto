//
//Copyright Â© 2021-2023 Nikita Ivanovski info@slnt-opp.xyz
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// @generated by protoc-gen-es v2.0.0 with parameter "target=js+dts"
// @generated from file services_providers/services_providers.proto (package nocloud.services_providers, syntax proto3)
/* eslint-disable */

import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_protobuf_struct } from "@bufbuild/protobuf/wkt";
import { file_google_api_annotations } from "../google/api/annotations_pb";
import { file_states_states } from "../states/states_pb";
import { file_access_access } from "../access/access_pb";
import { file_statuses_statuses } from "../statuses/statuses_pb";

/**
 * Describes the file services_providers/services_providers.proto.
 */
export const file_services_providers_services_providers = /*@__PURE__*/
  fileDesc("", [file_google_protobuf_struct, file_google_api_annotations, file_states_states, file_access_access, file_statuses_statuses]);

/**
 * Describes the message nocloud.services_providers.Var.
 * Use `create(VarSchema)` to create a new message.
 */
export const VarSchema = /*@__PURE__*/
  messageDesc(file_services_providers_services_providers, 0);

/**
 * Describes the message nocloud.services_providers.ProxyConf.
 * Use `create(ProxyConfSchema)` to create a new message.
 */
export const ProxyConfSchema = /*@__PURE__*/
  messageDesc(file_services_providers_services_providers, 1);

/**
 * Describes the message nocloud.services_providers.LocationConf.
 * Use `create(LocationConfSchema)` to create a new message.
 */
export const LocationConfSchema = /*@__PURE__*/
  messageDesc(file_services_providers_services_providers, 2);

/**
 * Describes the message nocloud.services_providers.Hook.
 * Use `create(HookSchema)` to create a new message.
 */
export const HookSchema = /*@__PURE__*/
  messageDesc(file_services_providers_services_providers, 3);

/**
 * Describes the message nocloud.services_providers.ServicesProvider.
 * Use `create(ServicesProviderSchema)` to create a new message.
 */
export const ServicesProviderSchema = /*@__PURE__*/
  messageDesc(file_services_providers_services_providers, 4);

/**
 * Describes the message nocloud.services_providers.TestResponse.
 * Use `create(TestResponseSchema)` to create a new message.
 */
export const TestResponseSchema = /*@__PURE__*/
  messageDesc(file_services_providers_services_providers, 5);

/**
 * Describes the message nocloud.services_providers.GetRequest.
 * Use `create(GetRequestSchema)` to create a new message.
 */
export const GetRequestSchema = /*@__PURE__*/
  messageDesc(file_services_providers_services_providers, 6);

/**
 * Describes the message nocloud.services_providers.ListRequest.
 * Use `create(ListRequestSchema)` to create a new message.
 */
export const ListRequestSchema = /*@__PURE__*/
  messageDesc(file_services_providers_services_providers, 7);

/**
 * Describes the message nocloud.services_providers.ListResponse.
 * Use `create(ListResponseSchema)` to create a new message.
 */
export const ListResponseSchema = /*@__PURE__*/
  messageDesc(file_services_providers_services_providers, 8);

/**
 * Describes the message nocloud.services_providers.DeleteRequest.
 * Use `create(DeleteRequestSchema)` to create a new message.
 */
export const DeleteRequestSchema = /*@__PURE__*/
  messageDesc(file_services_providers_services_providers, 9);

/**
 * Describes the message nocloud.services_providers.DeleteResponse.
 * Use `create(DeleteResponseSchema)` to create a new message.
 */
export const DeleteResponseSchema = /*@__PURE__*/
  messageDesc(file_services_providers_services_providers, 10);

/**
 * Describes the message nocloud.services_providers.ListExtentionsResponse.
 * Use `create(ListExtentionsResponseSchema)` to create a new message.
 */
export const ListExtentionsResponseSchema = /*@__PURE__*/
  messageDesc(file_services_providers_services_providers, 11);

/**
 * Describes the message nocloud.services_providers.BindPlanRequest.
 * Use `create(BindPlanRequestSchema)` to create a new message.
 */
export const BindPlanRequestSchema = /*@__PURE__*/
  messageDesc(file_services_providers_services_providers, 12);

/**
 * Describes the message nocloud.services_providers.BindPlanResponse.
 * Use `create(BindPlanResponseSchema)` to create a new message.
 */
export const BindPlanResponseSchema = /*@__PURE__*/
  messageDesc(file_services_providers_services_providers, 13);

/**
 * Describes the message nocloud.services_providers.UnbindPlanRequest.
 * Use `create(UnbindPlanRequestSchema)` to create a new message.
 */
export const UnbindPlanRequestSchema = /*@__PURE__*/
  messageDesc(file_services_providers_services_providers, 14);

/**
 * Describes the message nocloud.services_providers.UnbindPlanResponse.
 * Use `create(UnbindPlanResponseSchema)` to create a new message.
 */
export const UnbindPlanResponseSchema = /*@__PURE__*/
  messageDesc(file_services_providers_services_providers, 15);

/**
 * Describes the message nocloud.services_providers.InvokeRequest.
 * Use `create(InvokeRequestSchema)` to create a new message.
 */
export const InvokeRequestSchema = /*@__PURE__*/
  messageDesc(file_services_providers_services_providers, 16);

/**
 * Describes the message nocloud.services_providers.InvokeResponse.
 * Use `create(InvokeResponseSchema)` to create a new message.
 */
export const InvokeResponseSchema = /*@__PURE__*/
  messageDesc(file_services_providers_services_providers, 17);

/**
 * Describes the message nocloud.services_providers.PrepSP.
 * Use `create(PrepSPSchema)` to create a new message.
 */
export const PrepSPSchema = /*@__PURE__*/
  messageDesc(file_services_providers_services_providers, 18);

/**
 * Describes the message nocloud.services_providers.GetTypeRequest.
 * Use `create(GetTypeRequestSchema)` to create a new message.
 */
export const GetTypeRequestSchema = /*@__PURE__*/
  messageDesc(file_services_providers_services_providers, 19);

/**
 * Describes the message nocloud.services_providers.GetTypeResponse.
 * Use `create(GetTypeResponseSchema)` to create a new message.
 */
export const GetTypeResponseSchema = /*@__PURE__*/
  messageDesc(file_services_providers_services_providers, 20);

/**
 * Describes the message nocloud.services_providers.ServicesProvidersExtentionData.
 * Use `create(ServicesProvidersExtentionDataSchema)` to create a new message.
 */
export const ServicesProvidersExtentionDataSchema = /*@__PURE__*/
  messageDesc(file_services_providers_services_providers, 21);

/**
 * Describes the message nocloud.services_providers.GenericResponse.
 * Use `create(GenericResponseSchema)` to create a new message.
 */
export const GenericResponseSchema = /*@__PURE__*/
  messageDesc(file_services_providers_services_providers, 22);

/**
 * Describes the message nocloud.services_providers.ShowcaseItem.
 * Use `create(ShowcaseItemSchema)` to create a new message.
 */
export const ShowcaseItemSchema = /*@__PURE__*/
  messageDesc(file_services_providers_services_providers, 23);

/**
 * Describes the message nocloud.services_providers.Showcase.
 * Use `create(ShowcaseSchema)` to create a new message.
 */
export const ShowcaseSchema = /*@__PURE__*/
  messageDesc(file_services_providers_services_providers, 24);

/**
 * Describes the message nocloud.services_providers.Showcases.
 * Use `create(ShowcasesSchema)` to create a new message.
 */
export const ShowcasesSchema = /*@__PURE__*/
  messageDesc(file_services_providers_services_providers, 25);

/**
 * Describes the message nocloud.services_providers.ObjectPublicData.
 * Use `create(ObjectPublicDataSchema)` to create a new message.
 */
export const ObjectPublicDataSchema = /*@__PURE__*/
  messageDesc(file_services_providers_services_providers, 26);

/**
 * @generated from service nocloud.services_providers.ServicesProvidersService
 */
export const ServicesProvidersService = /*@__PURE__*/
  serviceDesc(file_services_providers_services_providers, 0);

/**
 * @generated from service nocloud.services_providers.ServicesProvidersExtentionsService
 */
export const ServicesProvidersExtentionsService = /*@__PURE__*/
  serviceDesc(file_services_providers_services_providers, 1);

/**
 * @generated from service nocloud.services_providers.ShowcasesService
 */
export const ShowcasesService = /*@__PURE__*/
  serviceDesc(file_services_providers_services_providers, 2);

