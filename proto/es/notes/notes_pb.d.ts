//
//Copyright Â© 2021-2023 Nikita Ivanovski info@slnt-opp.xyz
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// @generated by protoc-gen-es v1.10.0 with parameter "target=js+dts"
// @generated from file notes/notes.proto (package nocloud.notes, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message nocloud.notes.AdminNote
 */
export declare class AdminNote extends Message<AdminNote> {
  /**
   * @generated from field: string admin = 1;
   */
  admin: string;

  /**
   * @generated from field: string msg = 2;
   */
  msg: string;

  /**
   * @generated from field: int64 created = 3;
   */
  created: bigint;

  /**
   * @generated from field: int64 updated = 4;
   */
  updated: bigint;

  constructor(data?: PartialMessage<AdminNote>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.notes.AdminNote";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AdminNote;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AdminNote;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AdminNote;

  static equals(a: AdminNote | PlainMessage<AdminNote> | undefined, b: AdminNote | PlainMessage<AdminNote> | undefined): boolean;
}

/**
 * @generated from message nocloud.notes.AddNoteRequest
 */
export declare class AddNoteRequest extends Message<AddNoteRequest> {
  /**
   * @generated from field: string uuid = 1;
   */
  uuid: string;

  /**
   * @generated from field: string msg = 2;
   */
  msg: string;

  constructor(data?: PartialMessage<AddNoteRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.notes.AddNoteRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddNoteRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddNoteRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddNoteRequest;

  static equals(a: AddNoteRequest | PlainMessage<AddNoteRequest> | undefined, b: AddNoteRequest | PlainMessage<AddNoteRequest> | undefined): boolean;
}

/**
 * @generated from message nocloud.notes.PatchNoteRequest
 */
export declare class PatchNoteRequest extends Message<PatchNoteRequest> {
  /**
   * @generated from field: string uuid = 1;
   */
  uuid: string;

  /**
   * @generated from field: uint64 index = 2;
   */
  index: bigint;

  /**
   * @generated from field: string msg = 3;
   */
  msg: string;

  constructor(data?: PartialMessage<PatchNoteRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.notes.PatchNoteRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PatchNoteRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PatchNoteRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PatchNoteRequest;

  static equals(a: PatchNoteRequest | PlainMessage<PatchNoteRequest> | undefined, b: PatchNoteRequest | PlainMessage<PatchNoteRequest> | undefined): boolean;
}

/**
 * @generated from message nocloud.notes.RemoveNoteRequest
 */
export declare class RemoveNoteRequest extends Message<RemoveNoteRequest> {
  /**
   * @generated from field: string uuid = 1;
   */
  uuid: string;

  /**
   * @generated from field: uint64 index = 2;
   */
  index: bigint;

  constructor(data?: PartialMessage<RemoveNoteRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.notes.RemoveNoteRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveNoteRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveNoteRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveNoteRequest;

  static equals(a: RemoveNoteRequest | PlainMessage<RemoveNoteRequest> | undefined, b: RemoveNoteRequest | PlainMessage<RemoveNoteRequest> | undefined): boolean;
}

/**
 * @generated from message nocloud.notes.NoteResponse
 */
export declare class NoteResponse extends Message<NoteResponse> {
  /**
   * @generated from field: bool result = 1;
   */
  result: boolean;

  /**
   * @generated from field: repeated nocloud.notes.AdminNote admin_notes = 2;
   */
  adminNotes: AdminNote[];

  constructor(data?: PartialMessage<NoteResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.notes.NoteResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NoteResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NoteResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NoteResponse;

  static equals(a: NoteResponse | PlainMessage<NoteResponse> | undefined, b: NoteResponse | PlainMessage<NoteResponse> | undefined): boolean;
}

