//
//Copyright Â© 2021-2023 Nikita Ivanovski info@slnt-opp.xyz
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// @generated by protoc-gen-es v2.0.0 with parameter "target=js+dts"
// @generated from file drivers/instance/vanilla/driver.proto (package nocloud.instance.driver.vanilla, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";
import type { InvokeResponseSchema as InvokeResponseSchema$1, PrepSPSchema, ServicesProvider, TestResponseSchema } from "../../../services_providers/services_providers_pb";
import type { Instance, InstancesGroup, InvokeResponseSchema, TestInstancesGroupConfigRequestSchema, TestInstancesGroupConfigResponseSchema } from "../../../instances/instances_pb";
import type { Addon } from "../../../billing/addons/addons_pb";
import type { Value } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file drivers/instance/vanilla/driver.proto.
 */
export declare const file_drivers_instance_vanilla_driver: GenFile;

/**
 * @generated from message nocloud.instance.driver.vanilla.TestServiceProviderConfigRequest
 */
export declare type TestServiceProviderConfigRequest = Message<"nocloud.instance.driver.vanilla.TestServiceProviderConfigRequest"> & {
  /**
   * @generated from field: nocloud.services_providers.ServicesProvider services_provider = 1;
   */
  servicesProvider?: ServicesProvider;

  /**
   * @generated from field: bool syntax_only = 2;
   */
  syntaxOnly: boolean;
};

/**
 * Describes the message nocloud.instance.driver.vanilla.TestServiceProviderConfigRequest.
 * Use `create(TestServiceProviderConfigRequestSchema)` to create a new message.
 */
export declare const TestServiceProviderConfigRequestSchema: GenMessage<TestServiceProviderConfigRequest>;

/**
 * @generated from message nocloud.instance.driver.vanilla.GetTypeRequest
 */
export declare type GetTypeRequest = Message<"nocloud.instance.driver.vanilla.GetTypeRequest"> & {
};

/**
 * Describes the message nocloud.instance.driver.vanilla.GetTypeRequest.
 * Use `create(GetTypeRequestSchema)` to create a new message.
 */
export declare const GetTypeRequestSchema: GenMessage<GetTypeRequest>;

/**
 * @generated from message nocloud.instance.driver.vanilla.GetTypeResponse
 */
export declare type GetTypeResponse = Message<"nocloud.instance.driver.vanilla.GetTypeResponse"> & {
  /**
   * @generated from field: string type = 1;
   */
  type: string;
};

/**
 * Describes the message nocloud.instance.driver.vanilla.GetTypeResponse.
 * Use `create(GetTypeResponseSchema)` to create a new message.
 */
export declare const GetTypeResponseSchema: GenMessage<GetTypeResponse>;

/**
 * @generated from message nocloud.instance.driver.vanilla.UpRequest
 */
export declare type UpRequest = Message<"nocloud.instance.driver.vanilla.UpRequest"> & {
  /**
   * @generated from field: nocloud.instances.InstancesGroup group = 1;
   */
  group?: InstancesGroup;

  /**
   * @generated from field: nocloud.services_providers.ServicesProvider services_provider = 2;
   */
  servicesProvider?: ServicesProvider;
};

/**
 * Describes the message nocloud.instance.driver.vanilla.UpRequest.
 * Use `create(UpRequestSchema)` to create a new message.
 */
export declare const UpRequestSchema: GenMessage<UpRequest>;

/**
 * @generated from message nocloud.instance.driver.vanilla.UpResponse
 */
export declare type UpResponse = Message<"nocloud.instance.driver.vanilla.UpResponse"> & {
  /**
   * @generated from field: nocloud.instances.InstancesGroup group = 1;
   */
  group?: InstancesGroup;
};

/**
 * Describes the message nocloud.instance.driver.vanilla.UpResponse.
 * Use `create(UpResponseSchema)` to create a new message.
 */
export declare const UpResponseSchema: GenMessage<UpResponse>;

/**
 * @generated from message nocloud.instance.driver.vanilla.DownRequest
 */
export declare type DownRequest = Message<"nocloud.instance.driver.vanilla.DownRequest"> & {
  /**
   * @generated from field: nocloud.instances.InstancesGroup group = 1;
   */
  group?: InstancesGroup;

  /**
   * @generated from field: nocloud.services_providers.ServicesProvider services_provider = 2;
   */
  servicesProvider?: ServicesProvider;
};

/**
 * Describes the message nocloud.instance.driver.vanilla.DownRequest.
 * Use `create(DownRequestSchema)` to create a new message.
 */
export declare const DownRequestSchema: GenMessage<DownRequest>;

/**
 * @generated from message nocloud.instance.driver.vanilla.DownResponse
 */
export declare type DownResponse = Message<"nocloud.instance.driver.vanilla.DownResponse"> & {
  /**
   * @generated from field: nocloud.instances.InstancesGroup group = 1;
   */
  group?: InstancesGroup;
};

/**
 * Describes the message nocloud.instance.driver.vanilla.DownResponse.
 * Use `create(DownResponseSchema)` to create a new message.
 */
export declare const DownResponseSchema: GenMessage<DownResponse>;

/**
 * @generated from message nocloud.instance.driver.vanilla.MonitoringRequest
 */
export declare type MonitoringRequest = Message<"nocloud.instance.driver.vanilla.MonitoringRequest"> & {
  /**
   * @generated from field: repeated nocloud.instances.InstancesGroup groups = 1;
   */
  groups: InstancesGroup[];

  /**
   * @generated from field: nocloud.services_providers.ServicesProvider services_provider = 2;
   */
  servicesProvider?: ServicesProvider;

  /**
   * @generated from field: bool scheduled = 3;
   */
  scheduled: boolean;

  /**
   * @generated from field: map<string, double> balance = 4;
   */
  balance: { [key: string]: number };

  /**
   * @generated from field: map<string, nocloud.billing.addons.Addon> addons = 5;
   */
  addons: { [key: string]: Addon };
};

/**
 * Describes the message nocloud.instance.driver.vanilla.MonitoringRequest.
 * Use `create(MonitoringRequestSchema)` to create a new message.
 */
export declare const MonitoringRequestSchema: GenMessage<MonitoringRequest>;

/**
 * @generated from message nocloud.instance.driver.vanilla.MonitoringResponse
 */
export declare type MonitoringResponse = Message<"nocloud.instance.driver.vanilla.MonitoringResponse"> & {
};

/**
 * Describes the message nocloud.instance.driver.vanilla.MonitoringResponse.
 * Use `create(MonitoringResponseSchema)` to create a new message.
 */
export declare const MonitoringResponseSchema: GenMessage<MonitoringResponse>;

/**
 * @generated from message nocloud.instance.driver.vanilla.InvokeRequest
 */
export declare type InvokeRequest = Message<"nocloud.instance.driver.vanilla.InvokeRequest"> & {
  /**
   * @generated from field: nocloud.instances.Instance instance = 1;
   */
  instance?: Instance;

  /**
   * @generated from field: nocloud.services_providers.ServicesProvider services_provider = 2;
   */
  servicesProvider?: ServicesProvider;

  /**
   * @generated from field: string method = 3;
   */
  method: string;

  /**
   * @generated from field: map<string, google.protobuf.Value> params = 4;
   */
  params: { [key: string]: Value };
};

/**
 * Describes the message nocloud.instance.driver.vanilla.InvokeRequest.
 * Use `create(InvokeRequestSchema)` to create a new message.
 */
export declare const InvokeRequestSchema: GenMessage<InvokeRequest>;

/**
 * @generated from message nocloud.instance.driver.vanilla.SpInvokeRequest
 */
export declare type SpInvokeRequest = Message<"nocloud.instance.driver.vanilla.SpInvokeRequest"> & {
  /**
   * @generated from field: nocloud.services_providers.ServicesProvider services_provider = 1;
   */
  servicesProvider?: ServicesProvider;

  /**
   * @generated from field: string method = 2;
   */
  method: string;

  /**
   * @generated from field: map<string, google.protobuf.Value> params = 3;
   */
  params: { [key: string]: Value };
};

/**
 * Describes the message nocloud.instance.driver.vanilla.SpInvokeRequest.
 * Use `create(SpInvokeRequestSchema)` to create a new message.
 */
export declare const SpInvokeRequestSchema: GenMessage<SpInvokeRequest>;

/**
 * @generated from message nocloud.instance.driver.vanilla.ExpirationRecord
 */
export declare type ExpirationRecord = Message<"nocloud.instance.driver.vanilla.ExpirationRecord"> & {
  /**
   * @generated from field: int64 expires = 1;
   */
  expires: bigint;

  /**
   * @generated from field: string product = 2;
   */
  product: string;

  /**
   * @generated from field: string resource = 3;
   */
  resource: string;

  /**
   * @generated from field: string addon = 4;
   */
  addon: string;

  /**
   * @generated from field: int64 period = 5;
   */
  period: bigint;
};

/**
 * Describes the message nocloud.instance.driver.vanilla.ExpirationRecord.
 * Use `create(ExpirationRecordSchema)` to create a new message.
 */
export declare const ExpirationRecordSchema: GenMessage<ExpirationRecord>;

/**
 * @generated from message nocloud.instance.driver.vanilla.GetExpirationRequest
 */
export declare type GetExpirationRequest = Message<"nocloud.instance.driver.vanilla.GetExpirationRequest"> & {
  /**
   * @generated from field: nocloud.instances.Instance instance = 1;
   */
  instance?: Instance;

  /**
   * @generated from field: nocloud.services_providers.ServicesProvider services_provider = 2;
   */
  servicesProvider?: ServicesProvider;
};

/**
 * Describes the message nocloud.instance.driver.vanilla.GetExpirationRequest.
 * Use `create(GetExpirationRequestSchema)` to create a new message.
 */
export declare const GetExpirationRequestSchema: GenMessage<GetExpirationRequest>;

/**
 * @generated from message nocloud.instance.driver.vanilla.GetExpirationResponse
 */
export declare type GetExpirationResponse = Message<"nocloud.instance.driver.vanilla.GetExpirationResponse"> & {
  /**
   * @generated from field: repeated nocloud.instance.driver.vanilla.ExpirationRecord records = 1;
   */
  records: ExpirationRecord[];
};

/**
 * Describes the message nocloud.instance.driver.vanilla.GetExpirationResponse.
 * Use `create(GetExpirationResponseSchema)` to create a new message.
 */
export declare const GetExpirationResponseSchema: GenMessage<GetExpirationResponse>;

/**
 * @generated from service nocloud.instance.driver.vanilla.DriverService
 */
export declare const DriverService: GenService<{
  /**
   * @generated from rpc nocloud.instance.driver.vanilla.DriverService.TestServiceProviderConfig
   */
  testServiceProviderConfig: {
    methodKind: "unary";
    input: typeof TestServiceProviderConfigRequestSchema;
    output: typeof TestResponseSchema;
  },
  /**
   * @generated from rpc nocloud.instance.driver.vanilla.DriverService.TestInstancesGroupConfig
   */
  testInstancesGroupConfig: {
    methodKind: "unary";
    input: typeof TestInstancesGroupConfigRequestSchema;
    output: typeof TestInstancesGroupConfigResponseSchema;
  },
  /**
   * @generated from rpc nocloud.instance.driver.vanilla.DriverService.GetType
   */
  getType: {
    methodKind: "unary";
    input: typeof GetTypeRequestSchema;
    output: typeof GetTypeResponseSchema;
  },
  /**
   * @generated from rpc nocloud.instance.driver.vanilla.DriverService.Up
   */
  up: {
    methodKind: "unary";
    input: typeof UpRequestSchema;
    output: typeof UpResponseSchema;
  },
  /**
   * @generated from rpc nocloud.instance.driver.vanilla.DriverService.Down
   */
  down: {
    methodKind: "unary";
    input: typeof DownRequestSchema;
    output: typeof DownResponseSchema;
  },
  /**
   * @generated from rpc nocloud.instance.driver.vanilla.DriverService.Monitoring
   */
  monitoring: {
    methodKind: "unary";
    input: typeof MonitoringRequestSchema;
    output: typeof MonitoringResponseSchema;
  },
  /**
   * @generated from rpc nocloud.instance.driver.vanilla.DriverService.SuspendMonitoring
   */
  suspendMonitoring: {
    methodKind: "unary";
    input: typeof MonitoringRequestSchema;
    output: typeof MonitoringResponseSchema;
  },
  /**
   * @generated from rpc nocloud.instance.driver.vanilla.DriverService.Invoke
   */
  invoke: {
    methodKind: "unary";
    input: typeof InvokeRequestSchema;
    output: typeof InvokeResponseSchema;
  },
  /**
   * @generated from rpc nocloud.instance.driver.vanilla.DriverService.SpInvoke
   */
  spInvoke: {
    methodKind: "unary";
    input: typeof SpInvokeRequestSchema;
    output: typeof InvokeResponseSchema$1;
  },
  /**
   * @generated from rpc nocloud.instance.driver.vanilla.DriverService.SpPrep
   */
  spPrep: {
    methodKind: "unary";
    input: typeof PrepSPSchema;
    output: typeof PrepSPSchema;
  },
  /**
   * @generated from rpc nocloud.instance.driver.vanilla.DriverService.GetExpiration
   */
  getExpiration: {
    methodKind: "unary";
    input: typeof GetExpirationRequestSchema;
    output: typeof GetExpirationResponseSchema;
  },
}>;

