//
//Copyright Â© 2021-2023 Nikita Ivanovski info@slnt-opp.xyz
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// @generated by protoc-gen-es v1.10.0 with parameter "target=js+dts"
// @generated from file events_logging/events_logging.proto (package nocloud.events_logging, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Value } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message nocloud.events_logging.Snapshot
 */
export declare class Snapshot extends Message<Snapshot> {
  /**
   * @generated from field: int32 id = 1;
   */
  id: number;

  /**
   * @generated from field: string diff = 2;
   */
  diff: string;

  constructor(data?: PartialMessage<Snapshot>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.events_logging.Snapshot";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Snapshot;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Snapshot;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Snapshot;

  static equals(a: Snapshot | PlainMessage<Snapshot> | undefined, b: Snapshot | PlainMessage<Snapshot> | undefined): boolean;
}

/**
 * @generated from message nocloud.events_logging.Event
 */
export declare class Event extends Message<Event> {
  /**
   * @generated from field: int32 id = 1;
   */
  id: number;

  /**
   * @generated from field: string entity = 2;
   */
  entity: string;

  /**
   * @generated from field: string uuid = 3;
   */
  uuid: string;

  /**
   * @generated from field: string scope = 4;
   */
  scope: string;

  /**
   * @generated from field: string action = 5;
   */
  action: string;

  /**
   * @generated from field: int32 rc = 6;
   */
  rc: number;

  /**
   * @generated from field: string requestor = 7;
   */
  requestor: string;

  /**
   * @generated from field: int64 ts = 8;
   */
  ts: bigint;

  /**
   * @generated from field: optional nocloud.events_logging.Snapshot snapshot = 9;
   */
  snapshot?: Snapshot;

  /**
   * 0 - unspecified, 1 - highest
   *
   * @generated from field: int32 priority = 10;
   */
  priority: number;

  constructor(data?: PartialMessage<Event>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.events_logging.Event";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Event;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Event;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Event;

  static equals(a: Event | PlainMessage<Event> | undefined, b: Event | PlainMessage<Event> | undefined): boolean;
}

/**
 * @generated from message nocloud.events_logging.Events
 */
export declare class Events extends Message<Events> {
  /**
   * @generated from field: repeated nocloud.events_logging.Event events = 1;
   */
  events: Event[];

  /**
   * @generated from field: int64 count = 2;
   */
  count: bigint;

  constructor(data?: PartialMessage<Events>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.events_logging.Events";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Events;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Events;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Events;

  static equals(a: Events | PlainMessage<Events> | undefined, b: Events | PlainMessage<Events> | undefined): boolean;
}

/**
 * @generated from message nocloud.events_logging.GetEventsRequest
 */
export declare class GetEventsRequest extends Message<GetEventsRequest> {
  /**
   * @generated from field: optional string requestor = 1;
   */
  requestor?: string;

  /**
   * @generated from field: optional string uuid = 2;
   */
  uuid?: string;

  /**
   * @generated from field: optional int64 page = 3;
   */
  page?: bigint;

  /**
   * @generated from field: optional int64 limit = 4;
   */
  limit?: bigint;

  /**
   * @generated from field: optional string field = 5;
   */
  field?: string;

  /**
   * @generated from field: optional string sort = 6;
   */
  sort?: string;

  /**
   * @generated from field: map<string, google.protobuf.Value> filters = 7;
   */
  filters: { [key: string]: Value };

  constructor(data?: PartialMessage<GetEventsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.events_logging.GetEventsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetEventsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetEventsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetEventsRequest;

  static equals(a: GetEventsRequest | PlainMessage<GetEventsRequest> | undefined, b: GetEventsRequest | PlainMessage<GetEventsRequest> | undefined): boolean;
}

/**
 * @generated from message nocloud.events_logging.GetEventsCountRequest
 */
export declare class GetEventsCountRequest extends Message<GetEventsCountRequest> {
  /**
   * @generated from field: optional string requestor = 1;
   */
  requestor?: string;

  /**
   * @generated from field: optional string uuid = 2;
   */
  uuid?: string;

  /**
   * @generated from field: map<string, google.protobuf.Value> filters = 7;
   */
  filters: { [key: string]: Value };

  constructor(data?: PartialMessage<GetEventsCountRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.events_logging.GetEventsCountRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetEventsCountRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetEventsCountRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetEventsCountRequest;

  static equals(a: GetEventsCountRequest | PlainMessage<GetEventsCountRequest> | undefined, b: GetEventsCountRequest | PlainMessage<GetEventsCountRequest> | undefined): boolean;
}

/**
 * @generated from message nocloud.events_logging.GetEventsCountResponse
 */
export declare class GetEventsCountResponse extends Message<GetEventsCountResponse> {
  /**
   * @generated from field: uint64 total = 1;
   */
  total: bigint;

  /**
   * @generated from field: google.protobuf.Value unique = 2;
   */
  unique?: Value;

  constructor(data?: PartialMessage<GetEventsCountResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.events_logging.GetEventsCountResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetEventsCountResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetEventsCountResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetEventsCountResponse;

  static equals(a: GetEventsCountResponse | PlainMessage<GetEventsCountResponse> | undefined, b: GetEventsCountResponse | PlainMessage<GetEventsCountResponse> | undefined): boolean;
}

