//
//Copyright Â© 2021-2023 Nikita Ivanovski info@slnt-opp.xyz
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// @generated by protoc-gen-es v1.7.2 with parameter "target=js+dts"
// @generated from file events_logging/events_logging.proto (package nocloud.events_logging, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3, Value } from "@bufbuild/protobuf";

/**
 * @generated from message nocloud.events_logging.Snapshot
 */
export const Snapshot = proto3.makeMessageType(
  "nocloud.events_logging.Snapshot",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "diff", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message nocloud.events_logging.Event
 */
export const Event = proto3.makeMessageType(
  "nocloud.events_logging.Event",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "entity", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "scope", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "action", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "rc", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 7, name: "requestor", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "ts", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 9, name: "snapshot", kind: "message", T: Snapshot, opt: true },
  ],
);

/**
 * @generated from message nocloud.events_logging.Events
 */
export const Events = proto3.makeMessageType(
  "nocloud.events_logging.Events",
  () => [
    { no: 1, name: "events", kind: "message", T: Event, repeated: true },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ],
);

/**
 * @generated from message nocloud.events_logging.GetEventsRequest
 */
export const GetEventsRequest = proto3.makeMessageType(
  "nocloud.events_logging.GetEventsRequest",
  () => [
    { no: 1, name: "requestor", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "uuid", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "page", kind: "scalar", T: 3 /* ScalarType.INT64 */, opt: true },
    { no: 4, name: "limit", kind: "scalar", T: 3 /* ScalarType.INT64 */, opt: true },
    { no: 5, name: "field", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 6, name: "sort", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 7, name: "filters", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "message", T: Value} },
  ],
);

/**
 * @generated from message nocloud.events_logging.GetEventsCountRequest
 */
export const GetEventsCountRequest = proto3.makeMessageType(
  "nocloud.events_logging.GetEventsCountRequest",
  () => [
    { no: 1, name: "requestor", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "uuid", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 7, name: "filters", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "message", T: Value} },
  ],
);

/**
 * @generated from message nocloud.events_logging.GetEventsCountResponse
 */
export const GetEventsCountResponse = proto3.makeMessageType(
  "nocloud.events_logging.GetEventsCountResponse",
  () => [
    { no: 1, name: "total", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "unique", kind: "message", T: Value },
  ],
);

