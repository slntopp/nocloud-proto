//
//Copyright Â© 2021-2023 Nikita Ivanovski info@slnt-opp.xyz
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// @generated by protoc-gen-es v1.7.2 with parameter "target=js+dts"
// @generated from file health/health.proto (package nocloud.health, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from enum nocloud.health.Status
 */
export declare enum Status {
  /**
   * @generated from enum value: UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * Service is up and running
   *
   * @generated from enum value: SERVING = 1;
   */
  SERVING = 1,

  /**
   * Service is offline(down)
   *
   * @generated from enum value: OFFLINE = 2;
   */
  OFFLINE = 2,

  /**
   * Routine is running
   *
   * @generated from enum value: RUNNING = 3;
   */
  RUNNING = 3,

  /**
   * Routine is stopped
   *
   * @generated from enum value: STOPPED = 4;
   */
  STOPPED = 4,

  /**
   * Internal error while making status
   *
   * @generated from enum value: INTERNAL = 5;
   */
  INTERNAL = 5,

  /**
   * Check has errors
   *
   * @generated from enum value: HASERRS = 6;
   */
  HASERRS = 6,

  /**
   * Service has no Routines
   *
   * @generated from enum value: NOEXIST = 7;
   */
  NOEXIST = 7,
}

/**
 * @generated from message nocloud.health.ProbeRequest
 */
export declare class ProbeRequest extends Message<ProbeRequest> {
  /**
   * @generated from field: string probe_type = 1;
   */
  probeType: string;

  /**
   * @generated from field: string payload = 2;
   */
  payload: string;

  constructor(data?: PartialMessage<ProbeRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.health.ProbeRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProbeRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProbeRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProbeRequest;

  static equals(a: ProbeRequest | PlainMessage<ProbeRequest> | undefined, b: ProbeRequest | PlainMessage<ProbeRequest> | undefined): boolean;
}

/**
 * @generated from message nocloud.health.ProbeResponse
 */
export declare class ProbeResponse extends Message<ProbeResponse> {
  /**
   * @generated from field: string response = 1;
   */
  response: string;

  /**
   * @generated from field: nocloud.health.Status status = 2;
   */
  status: Status;

  /**
   * @generated from field: repeated nocloud.health.ServingStatus serving = 3;
   */
  serving: ServingStatus[];

  /**
   * @generated from field: repeated nocloud.health.RoutineStatus routines = 4;
   */
  routines: RoutineStatus[];

  constructor(data?: PartialMessage<ProbeResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.health.ProbeResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProbeResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProbeResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProbeResponse;

  static equals(a: ProbeResponse | PlainMessage<ProbeResponse> | undefined, b: ProbeResponse | PlainMessage<ProbeResponse> | undefined): boolean;
}

/**
 * @generated from message nocloud.health.ServingStatus
 */
export declare class ServingStatus extends Message<ServingStatus> {
  /**
   * @generated from field: string service = 1;
   */
  service: string;

  /**
   * @generated from field: nocloud.health.Status status = 2;
   */
  status: Status;

  /**
   * @generated from field: optional string error = 3;
   */
  error?: string;

  constructor(data?: PartialMessage<ServingStatus>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.health.ServingStatus";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ServingStatus;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ServingStatus;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ServingStatus;

  static equals(a: ServingStatus | PlainMessage<ServingStatus> | undefined, b: ServingStatus | PlainMessage<ServingStatus> | undefined): boolean;
}

/**
 * @generated from message nocloud.health.RoutineStatus
 */
export declare class RoutineStatus extends Message<RoutineStatus> {
  /**
   * @generated from field: string routine = 1;
   */
  routine: string;

  /**
   * @generated from field: nocloud.health.ServingStatus status = 2;
   */
  status?: ServingStatus;

  /**
   * @generated from field: string last_execution = 3;
   */
  lastExecution: string;

  constructor(data?: PartialMessage<RoutineStatus>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.health.RoutineStatus";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RoutineStatus;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RoutineStatus;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RoutineStatus;

  static equals(a: RoutineStatus | PlainMessage<RoutineStatus> | undefined, b: RoutineStatus | PlainMessage<RoutineStatus> | undefined): boolean;
}

/**
 * @generated from message nocloud.health.RoutinesStatus
 */
export declare class RoutinesStatus extends Message<RoutinesStatus> {
  /**
   * @generated from field: repeated nocloud.health.RoutineStatus routines = 1;
   */
  routines: RoutineStatus[];

  constructor(data?: PartialMessage<RoutinesStatus>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.health.RoutinesStatus";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RoutinesStatus;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RoutinesStatus;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RoutinesStatus;

  static equals(a: RoutinesStatus | PlainMessage<RoutinesStatus> | undefined, b: RoutinesStatus | PlainMessage<RoutinesStatus> | undefined): boolean;
}

