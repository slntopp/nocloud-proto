//
//Copyright Â© 2021-2023 Nikita Ivanovski info@slnt-opp.xyz
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// @generated by protoc-gen-es v1.7.2 with parameter "target=js+dts"
// @generated from file health/health.proto (package nocloud.health, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";

/**
 * @generated from enum nocloud.health.Status
 */
export const Status = proto3.makeEnum(
  "nocloud.health.Status",
  [
    {no: 0, name: "UNKNOWN"},
    {no: 1, name: "SERVING"},
    {no: 2, name: "OFFLINE"},
    {no: 3, name: "RUNNING"},
    {no: 4, name: "STOPPED"},
    {no: 5, name: "INTERNAL"},
    {no: 6, name: "HASERRS"},
    {no: 7, name: "NOEXIST"},
  ],
);

/**
 * @generated from message nocloud.health.ProbeRequest
 */
export const ProbeRequest = proto3.makeMessageType(
  "nocloud.health.ProbeRequest",
  () => [
    { no: 1, name: "probe_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "payload", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message nocloud.health.ProbeResponse
 */
export const ProbeResponse = proto3.makeMessageType(
  "nocloud.health.ProbeResponse",
  () => [
    { no: 1, name: "response", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "status", kind: "enum", T: proto3.getEnumType(Status) },
    { no: 3, name: "serving", kind: "message", T: ServingStatus, repeated: true },
    { no: 4, name: "routines", kind: "message", T: RoutineStatus, repeated: true },
  ],
);

/**
 * @generated from message nocloud.health.ServingStatus
 */
export const ServingStatus = proto3.makeMessageType(
  "nocloud.health.ServingStatus",
  () => [
    { no: 1, name: "service", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "status", kind: "enum", T: proto3.getEnumType(Status) },
    { no: 3, name: "error", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ],
);

/**
 * @generated from message nocloud.health.RoutineStatus
 */
export const RoutineStatus = proto3.makeMessageType(
  "nocloud.health.RoutineStatus",
  () => [
    { no: 1, name: "routine", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "status", kind: "message", T: ServingStatus },
    { no: 3, name: "last_execution", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message nocloud.health.RoutinesStatus
 */
export const RoutinesStatus = proto3.makeMessageType(
  "nocloud.health.RoutinesStatus",
  () => [
    { no: 1, name: "routines", kind: "message", T: RoutineStatus, repeated: true },
  ],
);

