//
//Copyright Â© 2023 Nikita Ivanovski info@slnt-opp.xyz
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//http://www.apache.org/licenses/LICENSE-2.0
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// @generated by protoc-gen-es v2.0.0 with parameter "target=js+dts"
// @generated from file ansible/ansible.proto (package nocloud.ansible, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";
import type { Access } from "../access/access_pb";

/**
 * Describes the file ansible/ansible.proto.
 */
export declare const file_ansible_ansible: GenFile;

/**
 * Required for Billing Plans and Instances first run
 *
 * @generated from message nocloud.ansible.Software
 */
export declare type Software = Message<"nocloud.ansible.Software"> & {
  /**
   * Playbook UUID
   *
   * @generated from field: string playbook = 1;
   */
  playbook: string;

  /**
   * Playbook Vars
   *
   * @generated from field: map<string, string> vars = 2;
   */
  vars: { [key: string]: string };

  /**
   * Automatically run Playbooks once Instance is RUNNING
   *
   * @generated from field: bool autorun = 3;
   */
  autorun: boolean;

  /**
   * Run UUID when created
   *
   * @generated from field: string run = 4;
   */
  run: string;

  /**
   * Is Playbook finished
   *
   * @generated from field: bool done = 5;
   */
  done: boolean;
};

/**
 * Describes the message nocloud.ansible.Software.
 * Use `create(SoftwareSchema)` to create a new message.
 */
export declare const SoftwareSchema: GenMessage<Software>;

/**
 * @generated from message nocloud.ansible.Playbook
 */
export declare type Playbook = Message<"nocloud.ansible.Playbook"> & {
  /**
   * @generated from field: string uuid = 1;
   */
  uuid: string;

  /**
   * @generated from field: string logo = 2;
   */
  logo: string;

  /**
   * Url to or Base64 encoded Image to be used as Playbook logo in the
   * Marketplace
   *
   * @generated from field: string title = 3;
   */
  title: string;

  /**
   * Filename for playbook yaml
   *
   * @generated from field: string description = 4;
   */
  description: string;

  /**
   * (optionally Markdown) long description Marketplace like
   *
   * Ansible Playbook written in YAML
   *
   * @generated from field: string content = 5;
   */
  content: string;

  /**
   * List of supported platforms(OS) by this Playbook
   *
   * @generated from field: repeated string supported_os = 6;
   */
  supportedOs: string[];
};

/**
 * Describes the message nocloud.ansible.Playbook.
 * Use `create(PlaybookSchema)` to create a new message.
 */
export declare const PlaybookSchema: GenMessage<Playbook>;

/**
 * @generated from message nocloud.ansible.Run
 */
export declare type Run = Message<"nocloud.ansible.Run"> & {
  /**
   * Run UUID generated by Ansible Runner
   *
   * @generated from field: string uuid = 1;
   */
  uuid: string;

  /**
   * Instances to run Playbook at
   *
   * @generated from field: repeated nocloud.ansible.Instance instances = 2;
   */
  instances: Instance[];

  /**
   * Playbook to run
   *
   * @generated from field: string playbook_uuid = 3;
   */
  playbookUuid: string;

  /**
   * @generated from field: map<string, string> jobs = 4;
   */
  jobs: { [key: string]: string };

  /**
   * @generated from field: string status = 5;
   */
  status: string;

  /**
   * @generated from field: int64 rc = 6;
   */
  rc: bigint;

  /**
   * Use custom Private Key for SSH (applied to all Instances, can be
   * overriden only with login/pass)
   *
   * @generated from field: optional string ssh_key = 7;
   */
  sshKey?: string;

  /**
   * @generated from field: optional nocloud.access.Access access = 8;
   */
  access?: Access;

  /**
   * @generated from field: int64 create_time = 9;
   */
  createTime: bigint;

  /**
   * @generated from field: int64 exec_time = 10;
   */
  execTime: bigint;

  /**
   * @generated from field: map<string, string> vars = 11;
   */
  vars: { [key: string]: string };

  /**
   * @generated from field: optional nocloud.ansible.Instance hop = 12;
   */
  hop?: Instance;
};

/**
 * Describes the message nocloud.ansible.Run.
 * Use `create(RunSchema)` to create a new message.
 */
export declare const RunSchema: GenMessage<Run>;

/**
 * @generated from message nocloud.ansible.Runs
 */
export declare type Runs = Message<"nocloud.ansible.Runs"> & {
  /**
   * @generated from field: repeated nocloud.ansible.Run pool = 1;
   */
  pool: Run[];
};

/**
 * Describes the message nocloud.ansible.Runs.
 * Use `create(RunsSchema)` to create a new message.
 */
export declare const RunsSchema: GenMessage<Runs>;

/**
 * @generated from message nocloud.ansible.Job
 */
export declare type Job = Message<"nocloud.ansible.Job"> & {
  /**
   * @generated from field: string run_uuid = 1;
   */
  runUuid: string;

  /**
   * @generated from field: string job_uuid = 2;
   */
  jobUuid: string;

  /**
   * @generated from field: string job = 3;
   */
  job: string;

  /**
   * @generated from field: string status = 4;
   */
  status: string;

  /**
   * @generated from field: optional int64 rc = 5;
   */
  rc?: bigint;
};

/**
 * Describes the message nocloud.ansible.Job.
 * Use `create(JobSchema)` to create a new message.
 */
export declare const JobSchema: GenMessage<Job>;

/**
 * @generated from message nocloud.ansible.Instance
 */
export declare type Instance = Message<"nocloud.ansible.Instance"> & {
  /**
   * NoCloud Instance UUID
   *
   * @generated from field: string uuid = 1;
   */
  uuid: string;

  /**
   * SSH Setup
   *
   * SSH accessible hostname(hostname, IP addr, domain name)
   *
   * @generated from field: string host = 2;
   */
  host: string;

  /**
   * SSH port
   *
   * @generated from field: optional string port = 3;
   */
  port?: string;

  /**
   * SSH User
   *
   * @generated from field: optional string user = 4;
   */
  user?: string;

  /**
   * SSH Password
   *
   * @generated from field: optional string pass = 5;
   */
  pass?: string;

  /**
   * @generated from field: optional string ansible_host = 6;
   */
  ansibleHost?: string;

  /**
   * @generated from field: optional string python = 7;
   */
  python?: string;
};

/**
 * Describes the message nocloud.ansible.Instance.
 * Use `create(InstanceSchema)` to create a new message.
 */
export declare const InstanceSchema: GenMessage<Instance>;

/**
 * @generated from message nocloud.ansible.CreateRunRequest
 */
export declare type CreateRunRequest = Message<"nocloud.ansible.CreateRunRequest"> & {
  /**
   * @generated from field: nocloud.ansible.Run run = 1;
   */
  run?: Run;

  /**
   * @generated from field: optional string namespace = 2;
   */
  namespace?: string;
};

/**
 * Describes the message nocloud.ansible.CreateRunRequest.
 * Use `create(CreateRunRequestSchema)` to create a new message.
 */
export declare const CreateRunRequestSchema: GenMessage<CreateRunRequest>;

/**
 * @generated from message nocloud.ansible.GetRunRequest
 */
export declare type GetRunRequest = Message<"nocloud.ansible.GetRunRequest"> & {
  /**
   * @generated from field: string uuid = 1;
   */
  uuid: string;
};

/**
 * Describes the message nocloud.ansible.GetRunRequest.
 * Use `create(GetRunRequestSchema)` to create a new message.
 */
export declare const GetRunRequestSchema: GenMessage<GetRunRequest>;

/**
 * @generated from message nocloud.ansible.ListRunsRequest
 */
export declare type ListRunsRequest = Message<"nocloud.ansible.ListRunsRequest"> & {
};

/**
 * Describes the message nocloud.ansible.ListRunsRequest.
 * Use `create(ListRunsRequestSchema)` to create a new message.
 */
export declare const ListRunsRequestSchema: GenMessage<ListRunsRequest>;

/**
 * @generated from message nocloud.ansible.ExecRunRequest
 */
export declare type ExecRunRequest = Message<"nocloud.ansible.ExecRunRequest"> & {
  /**
   * @generated from field: string uuid = 1;
   */
  uuid: string;
};

/**
 * Describes the message nocloud.ansible.ExecRunRequest.
 * Use `create(ExecRunRequestSchema)` to create a new message.
 */
export declare const ExecRunRequestSchema: GenMessage<ExecRunRequest>;

/**
 * @generated from message nocloud.ansible.ResyncRunRequest
 */
export declare type ResyncRunRequest = Message<"nocloud.ansible.ResyncRunRequest"> & {
  /**
   * @generated from field: string uuid = 1;
   */
  uuid: string;
};

/**
 * Describes the message nocloud.ansible.ResyncRunRequest.
 * Use `create(ResyncRunRequestSchema)` to create a new message.
 */
export declare const ResyncRunRequestSchema: GenMessage<ResyncRunRequest>;

/**
 * @generated from message nocloud.ansible.ExecRunResponse
 */
export declare type ExecRunResponse = Message<"nocloud.ansible.ExecRunResponse"> & {
};

/**
 * Describes the message nocloud.ansible.ExecRunResponse.
 * Use `create(ExecRunResponseSchema)` to create a new message.
 */
export declare const ExecRunResponseSchema: GenMessage<ExecRunResponse>;

/**
 * @generated from message nocloud.ansible.WatchRunRequest
 */
export declare type WatchRunRequest = Message<"nocloud.ansible.WatchRunRequest"> & {
  /**
   * @generated from field: string uuid = 1;
   */
  uuid: string;
};

/**
 * Describes the message nocloud.ansible.WatchRunRequest.
 * Use `create(WatchRunRequestSchema)` to create a new message.
 */
export declare const WatchRunRequestSchema: GenMessage<WatchRunRequest>;

/**
 * @generated from message nocloud.ansible.DeleteRunRequest
 */
export declare type DeleteRunRequest = Message<"nocloud.ansible.DeleteRunRequest"> & {
  /**
   * @generated from field: string uuid = 1;
   */
  uuid: string;
};

/**
 * Describes the message nocloud.ansible.DeleteRunRequest.
 * Use `create(DeleteRunRequestSchema)` to create a new message.
 */
export declare const DeleteRunRequestSchema: GenMessage<DeleteRunRequest>;

/**
 * @generated from message nocloud.ansible.DeleteRunResponse
 */
export declare type DeleteRunResponse = Message<"nocloud.ansible.DeleteRunResponse"> & {
};

/**
 * Describes the message nocloud.ansible.DeleteRunResponse.
 * Use `create(DeleteRunResponseSchema)` to create a new message.
 */
export declare const DeleteRunResponseSchema: GenMessage<DeleteRunResponse>;

/**
 * @generated from message nocloud.ansible.ListPlaybooksRequest
 */
export declare type ListPlaybooksRequest = Message<"nocloud.ansible.ListPlaybooksRequest"> & {
};

/**
 * Describes the message nocloud.ansible.ListPlaybooksRequest.
 * Use `create(ListPlaybooksRequestSchema)` to create a new message.
 */
export declare const ListPlaybooksRequestSchema: GenMessage<ListPlaybooksRequest>;

/**
 * @generated from message nocloud.ansible.ListPlaybooksResponse
 */
export declare type ListPlaybooksResponse = Message<"nocloud.ansible.ListPlaybooksResponse"> & {
  /**
   * @generated from field: repeated nocloud.ansible.Playbook playbooks = 1;
   */
  playbooks: Playbook[];
};

/**
 * Describes the message nocloud.ansible.ListPlaybooksResponse.
 * Use `create(ListPlaybooksResponseSchema)` to create a new message.
 */
export declare const ListPlaybooksResponseSchema: GenMessage<ListPlaybooksResponse>;

/**
 * @generated from message nocloud.ansible.GetPlaybookRequest
 */
export declare type GetPlaybookRequest = Message<"nocloud.ansible.GetPlaybookRequest"> & {
  /**
   * @generated from field: string uuid = 1;
   */
  uuid: string;
};

/**
 * Describes the message nocloud.ansible.GetPlaybookRequest.
 * Use `create(GetPlaybookRequestSchema)` to create a new message.
 */
export declare const GetPlaybookRequestSchema: GenMessage<GetPlaybookRequest>;

/**
 * @generated from message nocloud.ansible.GetPlaybookResponse
 */
export declare type GetPlaybookResponse = Message<"nocloud.ansible.GetPlaybookResponse"> & {
  /**
   * @generated from field: nocloud.ansible.Playbook playbook = 1;
   */
  playbook?: Playbook;
};

/**
 * Describes the message nocloud.ansible.GetPlaybookResponse.
 * Use `create(GetPlaybookResponseSchema)` to create a new message.
 */
export declare const GetPlaybookResponseSchema: GenMessage<GetPlaybookResponse>;

/**
 * @generated from message nocloud.ansible.DeletePlaybookRequest
 */
export declare type DeletePlaybookRequest = Message<"nocloud.ansible.DeletePlaybookRequest"> & {
  /**
   * @generated from field: string uuid = 1;
   */
  uuid: string;
};

/**
 * Describes the message nocloud.ansible.DeletePlaybookRequest.
 * Use `create(DeletePlaybookRequestSchema)` to create a new message.
 */
export declare const DeletePlaybookRequestSchema: GenMessage<DeletePlaybookRequest>;

/**
 * @generated from message nocloud.ansible.DeletePlaybookResponse
 */
export declare type DeletePlaybookResponse = Message<"nocloud.ansible.DeletePlaybookResponse"> & {
};

/**
 * Describes the message nocloud.ansible.DeletePlaybookResponse.
 * Use `create(DeletePlaybookResponseSchema)` to create a new message.
 */
export declare const DeletePlaybookResponseSchema: GenMessage<DeletePlaybookResponse>;

/**
 * @generated from message nocloud.ansible.UpdatePlaybookRequest
 */
export declare type UpdatePlaybookRequest = Message<"nocloud.ansible.UpdatePlaybookRequest"> & {
  /**
   * @generated from field: nocloud.ansible.Playbook playbook = 1;
   */
  playbook?: Playbook;
};

/**
 * Describes the message nocloud.ansible.UpdatePlaybookRequest.
 * Use `create(UpdatePlaybookRequestSchema)` to create a new message.
 */
export declare const UpdatePlaybookRequestSchema: GenMessage<UpdatePlaybookRequest>;

/**
 * @generated from message nocloud.ansible.UpdatePlaybookResponse
 */
export declare type UpdatePlaybookResponse = Message<"nocloud.ansible.UpdatePlaybookResponse"> & {
  /**
   * @generated from field: nocloud.ansible.Playbook playbook = 1;
   */
  playbook?: Playbook;
};

/**
 * Describes the message nocloud.ansible.UpdatePlaybookResponse.
 * Use `create(UpdatePlaybookResponseSchema)` to create a new message.
 */
export declare const UpdatePlaybookResponseSchema: GenMessage<UpdatePlaybookResponse>;

/**
 * @generated from message nocloud.ansible.CreatePlaybookRequest
 */
export declare type CreatePlaybookRequest = Message<"nocloud.ansible.CreatePlaybookRequest"> & {
  /**
   * @generated from field: nocloud.ansible.Playbook playbook = 1;
   */
  playbook?: Playbook;
};

/**
 * Describes the message nocloud.ansible.CreatePlaybookRequest.
 * Use `create(CreatePlaybookRequestSchema)` to create a new message.
 */
export declare const CreatePlaybookRequestSchema: GenMessage<CreatePlaybookRequest>;

/**
 * @generated from message nocloud.ansible.CreatePlaybookResponse
 */
export declare type CreatePlaybookResponse = Message<"nocloud.ansible.CreatePlaybookResponse"> & {
  /**
   * @generated from field: nocloud.ansible.Playbook playbook = 1;
   */
  playbook?: Playbook;
};

/**
 * Describes the message nocloud.ansible.CreatePlaybookResponse.
 * Use `create(CreatePlaybookResponseSchema)` to create a new message.
 */
export declare const CreatePlaybookResponseSchema: GenMessage<CreatePlaybookResponse>;

/**
 * @generated from service nocloud.ansible.AnsibleService
 */
export declare const AnsibleService: GenService<{
  /**
   * @generated from rpc nocloud.ansible.AnsibleService.Get
   */
  get: {
    methodKind: "unary";
    input: typeof GetRunRequestSchema;
    output: typeof RunSchema;
  },
  /**
   * @generated from rpc nocloud.ansible.AnsibleService.List
   */
  list: {
    methodKind: "unary";
    input: typeof ListRunsRequestSchema;
    output: typeof RunsSchema;
  },
  /**
   * @generated from rpc nocloud.ansible.AnsibleService.Create
   */
  create: {
    methodKind: "unary";
    input: typeof CreateRunRequestSchema;
    output: typeof RunSchema;
  },
  /**
   * @generated from rpc nocloud.ansible.AnsibleService.Exec
   */
  exec: {
    methodKind: "unary";
    input: typeof ExecRunRequestSchema;
    output: typeof ExecRunResponseSchema;
  },
  /**
   * @generated from rpc nocloud.ansible.AnsibleService.Watch
   */
  watch: {
    methodKind: "server_streaming";
    input: typeof WatchRunRequestSchema;
    output: typeof JobSchema;
  },
  /**
   * @generated from rpc nocloud.ansible.AnsibleService.Delete
   */
  delete: {
    methodKind: "unary";
    input: typeof DeleteRunRequestSchema;
    output: typeof DeleteRunResponseSchema;
  },
  /**
   * @generated from rpc nocloud.ansible.AnsibleService.Resync
   */
  resync: {
    methodKind: "unary";
    input: typeof ResyncRunRequestSchema;
    output: typeof RunSchema;
  },
}>;

/**
 * @generated from service nocloud.ansible.PlaybooksService
 */
export declare const PlaybooksService: GenService<{
  /**
   * @generated from rpc nocloud.ansible.PlaybooksService.Get
   */
  get: {
    methodKind: "unary";
    input: typeof GetPlaybookRequestSchema;
    output: typeof GetPlaybookResponseSchema;
  },
  /**
   * @generated from rpc nocloud.ansible.PlaybooksService.List
   */
  list: {
    methodKind: "unary";
    input: typeof ListPlaybooksRequestSchema;
    output: typeof ListPlaybooksResponseSchema;
  },
  /**
   * @generated from rpc nocloud.ansible.PlaybooksService.Create
   */
  create: {
    methodKind: "unary";
    input: typeof CreatePlaybookRequestSchema;
    output: typeof CreatePlaybookResponseSchema;
  },
  /**
   * @generated from rpc nocloud.ansible.PlaybooksService.Update
   */
  update: {
    methodKind: "unary";
    input: typeof UpdatePlaybookRequestSchema;
    output: typeof UpdatePlaybookResponseSchema;
  },
  /**
   * @generated from rpc nocloud.ansible.PlaybooksService.Delete
   */
  delete: {
    methodKind: "unary";
    input: typeof DeletePlaybookRequestSchema;
    output: typeof DeletePlaybookResponseSchema;
  },
}>;

