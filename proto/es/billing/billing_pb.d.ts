//
//Copyright Â© 2021-2023 Nikita Ivanovski info@slnt-opp.xyz
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// @generated by protoc-gen-es v1.7.2 with parameter "target=js+dts"
// @generated from file billing/billing.proto (package nocloud.billing, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Value } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { Software } from "../ansible/ansible_pb.js";
import type { NoCloudStatus } from "../statuses/statuses_pb.js";
import type { NoCloudState } from "../states/states_pb.js";

/**
 * @generated from enum nocloud.billing.PlanKind
 */
export declare enum PlanKind {
  /**
   * Default value; should never be used but will be treated as DYNAMIC
   *
   * @generated from enum value: UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * @generated from enum value: DYNAMIC = 1;
   */
  DYNAMIC = 1,

  /**
   * @generated from enum value: STATIC = 2;
   */
  STATIC = 2,
}

/**
 * @generated from enum nocloud.billing.Round
 */
export declare enum Round {
  /**
   * @generated from enum value: NONE = 0;
   */
  NONE = 0,

  /**
   * @generated from enum value: FLOOR = 1;
   */
  FLOOR = 1,

  /**
   * @generated from enum value: ROUND = 2;
   */
  ROUND = 2,

  /**
   * @generated from enum value: CEIL = 3;
   */
  CEIL = 3,
}

/**
 * @generated from enum nocloud.billing.Kind
 */
export declare enum Kind {
  /**
   * Shall never be used, requests will be rejected
   *
   * @generated from enum value: UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Transaction must be processed based on End time
   *
   * @generated from enum value: POSTPAID = 1;
   */
  POSTPAID = 1,

  /**
   * Transaction must be processed based on Start time
   *
   * @generated from enum value: PREPAID = 2;
   */
  PREPAID = 2,
}

/**
 * @generated from enum nocloud.billing.PeriodKind
 */
export declare enum PeriodKind {
  /**
   * @generated from enum value: DEFAULT = 0;
   */
  DEFAULT = 0,

  /**
   * @generated from enum value: CALENDAR_MONTH = 1;
   */
  CALENDAR_MONTH = 1,

  /**
   * @generated from enum value: CALENDAR_YEAR = 2;
   */
  CALENDAR_YEAR = 2,
}

/**
 * @generated from enum nocloud.billing.Priority
 */
export declare enum Priority {
  /**
   * @generated from enum value: NORMAL = 0;
   */
  NORMAL = 0,

  /**
   * @generated from enum value: URGENT = 1;
   */
  URGENT = 1,

  /**
   * @generated from enum value: ADDITIONAL = 2;
   */
  ADDITIONAL = 2,
}

/**
 * @generated from enum nocloud.billing.BillingStatus
 */
export declare enum BillingStatus {
  /**
   * Dont use.
   *
   * @generated from enum value: BILLING_STATUS_UNKNOWN = 0;
   */
  BILLING_STATUS_UNKNOWN = 0,

  /**
   * @generated from enum value: PAID = 1;
   */
  PAID = 1,

  /**
   * @generated from enum value: UNPAID = 2;
   */
  UNPAID = 2,

  /**
   * @generated from enum value: CANCELED = 3;
   */
  CANCELED = 3,

  /**
   * @generated from enum value: TERMINATED = 4;
   */
  TERMINATED = 4,

  /**
   * @generated from enum value: DRAFT = 5;
   */
  DRAFT = 5,

  /**
   * @generated from enum value: RETURNED = 6;
   */
  RETURNED = 6,
}

/**
 * @generated from enum nocloud.billing.ActionType
 */
export declare enum ActionType {
  /**
   * Dont use.
   *
   * @generated from enum value: ACTION_TYPE_UNKNOWN = 0;
   */
  ACTION_TYPE_UNKNOWN = 0,

  /**
   * @generated from enum value: NO_ACTION = 1;
   */
  NO_ACTION = 1,

  /**
   * @generated from enum value: INSTANCE_START = 2;
   */
  INSTANCE_START = 2,

  /**
   * @generated from enum value: INSTANCE_RENEWAL = 3;
   */
  INSTANCE_RENEWAL = 3,

  /**
   * @generated from enum value: BALANCE = 4;
   */
  BALANCE = 4,
}

/**
 * @generated from message nocloud.billing.FeeRange
 */
export declare class FeeRange extends Message<FeeRange> {
  /**
   * @generated from field: double from = 1;
   */
  from: number;

  /**
   * @generated from field: double to = 2;
   */
  to: number;

  /**
   * @generated from field: double factor = 3;
   */
  factor: number;

  constructor(data?: PartialMessage<FeeRange>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.billing.FeeRange";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FeeRange;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FeeRange;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FeeRange;

  static equals(a: FeeRange | PlainMessage<FeeRange> | undefined, b: FeeRange | PlainMessage<FeeRange> | undefined): boolean;
}

/**
 * @generated from message nocloud.billing.Fee
 */
export declare class Fee extends Message<Fee> {
  /**
   * @generated from field: int64 precision = 1;
   */
  precision: bigint;

  /**
   * @generated from field: nocloud.billing.Round round = 2;
   */
  round: Round;

  /**
   * @generated from field: double default = 3;
   */
  default: number;

  /**
   * @generated from field: repeated nocloud.billing.FeeRange ranges = 4;
   */
  ranges: FeeRange[];

  constructor(data?: PartialMessage<Fee>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.billing.Fee";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Fee;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Fee;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Fee;

  static equals(a: Fee | PlainMessage<Fee> | undefined, b: Fee | PlainMessage<Fee> | undefined): boolean;
}

/**
 * @generated from message nocloud.billing.Plan
 */
export declare class Plan extends Message<Plan> {
  /**
   * @generated from field: string uuid = 1;
   */
  uuid: string;

  /**
   * @generated from field: string title = 2;
   */
  title: string;

  /**
   * Instance / InstanceGroup type supported by this plan
   *
   * @generated from field: string type = 3;
   */
  type: string;

  /**
   * if true, then this plan is available for all users
   *
   * @generated from field: bool public = 4;
   */
  public: boolean;

  /**
   * dynamic(based on resources) or static(based on products)
   *
   * @generated from field: nocloud.billing.PlanKind kind = 5;
   */
  kind: PlanKind;

  /**
   * Resources confs to make plan dynamic
   *
   * @generated from field: repeated nocloud.billing.ResourceConf resources = 6;
   */
  resources: ResourceConf[];

  /**
   * Products to make plan pre defined(map key is product key like sm, lg
   *
   * @generated from field: map<string, nocloud.billing.Product> products = 7;
   */
  products: { [key: string]: Product };

  /**
   * or whatever)
   *
   * @generated from field: map<string, google.protobuf.Value> meta = 8;
   */
  meta: { [key: string]: Value };

  /**
   * @generated from field: nocloud.billing.Fee fee = 9;
   */
  fee?: Fee;

  /**
   * @generated from field: repeated nocloud.ansible.Software software = 10;
   */
  software: Software[];

  /**
   * @generated from field: nocloud.statuses.NoCloudStatus status = 11;
   */
  status: NoCloudStatus;

  /**
   * @generated from field: repeated string addons = 12;
   */
  addons: string[];

  constructor(data?: PartialMessage<Plan>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.billing.Plan";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Plan;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Plan;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Plan;

  static equals(a: Plan | PlainMessage<Plan> | undefined, b: Plan | PlainMessage<Plan> | undefined): boolean;
}

/**
 * @generated from message nocloud.billing.ListRequest
 */
export declare class ListRequest extends Message<ListRequest> {
  /**
   * @generated from field: string sp_uuid = 1;
   */
  spUuid: string;

  /**
   * @generated from field: bool anonymously = 2;
   */
  anonymously: boolean;

  /**
   * @generated from field: bool show_deleted = 3;
   */
  showDeleted: boolean;

  constructor(data?: PartialMessage<ListRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.billing.ListRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListRequest;

  static equals(a: ListRequest | PlainMessage<ListRequest> | undefined, b: ListRequest | PlainMessage<ListRequest> | undefined): boolean;
}

/**
 * @generated from message nocloud.billing.ListResponse
 */
export declare class ListResponse extends Message<ListResponse> {
  /**
   * @generated from field: repeated nocloud.billing.Plan pool = 1;
   */
  pool: Plan[];

  constructor(data?: PartialMessage<ListResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.billing.ListResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListResponse;

  static equals(a: ListResponse | PlainMessage<ListResponse> | undefined, b: ListResponse | PlainMessage<ListResponse> | undefined): boolean;
}

/**
 * @generated from message nocloud.billing.ListPlansInstancesRequest
 */
export declare class ListPlansInstancesRequest extends Message<ListPlansInstancesRequest> {
  /**
   * @generated from field: bool anonymously = 1;
   */
  anonymously: boolean;

  constructor(data?: PartialMessage<ListPlansInstancesRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.billing.ListPlansInstancesRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListPlansInstancesRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListPlansInstancesRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListPlansInstancesRequest;

  static equals(a: ListPlansInstancesRequest | PlainMessage<ListPlansInstancesRequest> | undefined, b: ListPlansInstancesRequest | PlainMessage<ListPlansInstancesRequest> | undefined): boolean;
}

/**
 * @generated from message nocloud.billing.ListPlansInstancesResponse
 */
export declare class ListPlansInstancesResponse extends Message<ListPlansInstancesResponse> {
  /**
   * @generated from field: map<string, google.protobuf.Value> plans = 1;
   */
  plans: { [key: string]: Value };

  constructor(data?: PartialMessage<ListPlansInstancesResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.billing.ListPlansInstancesResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListPlansInstancesResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListPlansInstancesResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListPlansInstancesResponse;

  static equals(a: ListPlansInstancesResponse | PlainMessage<ListPlansInstancesResponse> | undefined, b: ListPlansInstancesResponse | PlainMessage<ListPlansInstancesResponse> | undefined): boolean;
}

/**
 * @generated from message nocloud.billing.ResourceConf
 */
export declare class ResourceConf extends Message<ResourceConf> {
  /**
   * @generated from field: string key = 1;
   */
  key: string;

  /**
   * @generated from field: nocloud.billing.Kind kind = 2;
   */
  kind: Kind;

  /**
   * Price in NCU per period
   *
   * @generated from field: double price = 3;
   */
  price: number;

  /**
   * if set to 0, then it's a one-time payment
   *
   * @generated from field: int64 period = 4;
   */
  period: bigint;

  /**
   * If except set to true then transaction will be created if Instance is in
   * one of the states listed in on If except set to false then transaction will
   * be created if Instance is NOT in one of the states listed in on
   *
   * @generated from field: bool except = 5;
   */
  except: boolean;

  /**
   * @generated from field: repeated nocloud.states.NoCloudState on = 6;
   */
  on: NoCloudState[];

  /**
   * @generated from field: nocloud.billing.Fee fee = 7;
   */
  fee?: Fee;

  /**
   * @generated from field: string title = 8;
   */
  title: string;

  /**
   * @generated from field: map<string, google.protobuf.Value> meta = 9;
   */
  meta: { [key: string]: Value };

  /**
   * @generated from field: bool public = 10;
   */
  public: boolean;

  /**
   * @generated from field: bool virtual = 11;
   */
  virtual: boolean;

  /**
   * @generated from field: optional int32 min = 12;
   */
  min?: number;

  /**
   * @generated from field: optional int32 max = 13;
   */
  max?: number;

  /**
   * @generated from field: nocloud.billing.PeriodKind period_kind = 14;
   */
  periodKind: PeriodKind;

  /**
   * @generated from field: string description_id = 15;
   */
  descriptionId: string;

  constructor(data?: PartialMessage<ResourceConf>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.billing.ResourceConf";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResourceConf;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResourceConf;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResourceConf;

  static equals(a: ResourceConf | PlainMessage<ResourceConf> | undefined, b: ResourceConf | PlainMessage<ResourceConf> | undefined): boolean;
}

/**
 * @generated from message nocloud.billing.Product
 */
export declare class Product extends Message<Product> {
  /**
   * @generated from field: nocloud.billing.Kind kind = 1;
   */
  kind: Kind;

  /**
   * Product title
   *
   * @generated from field: string title = 2;
   */
  title: string;

  /**
   * Product price in NCU per period
   *
   * @generated from field: double price = 3;
   */
  price: number;

  /**
   * @generated from field: int64 period = 4;
   */
  period: bigint;

  /**
   * Map of resources keys to fixed units amount
   *
   * @generated from field: map<string, google.protobuf.Value> resources = 5;
   */
  resources: { [key: string]: Value };

  /**
   * @generated from field: map<string, google.protobuf.Value> meta = 6;
   */
  meta: { [key: string]: Value };

  /**
   * Sorting order, might be needed in UIs
   *
   * @generated from field: optional int32 sorter = 7;
   */
  sorter?: number;

  /**
   * @generated from field: optional double installation_fee = 8;
   */
  installationFee?: number;

  /**
   * @generated from field: bool public = 9;
   */
  public: boolean;

  /**
   * @generated from field: string group = 10;
   */
  group: string;

  /**
   * @generated from field: nocloud.billing.PeriodKind period_kind = 11;
   */
  periodKind: PeriodKind;

  /**
   * @generated from field: string description_id = 12;
   */
  descriptionId: string;

  /**
   * @generated from field: repeated string addons = 13;
   */
  addons: string[];

  constructor(data?: PartialMessage<Product>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.billing.Product";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Product;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Product;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Product;

  static equals(a: Product | PlainMessage<Product> | undefined, b: Product | PlainMessage<Product> | undefined): boolean;
}

/**
 * @generated from message nocloud.billing.Transaction
 */
export declare class Transaction extends Message<Transaction> {
  /**
   * transaction UUID
   *
   * @generated from field: string uuid = 1;
   */
  uuid: string;

  /**
   * Timestamp of Transaction planned execution time
   *
   * @generated from field: int64 exec = 2;
   */
  exec: bigint;

  /**
   * Timestamp of Transaction processing time
   *
   * @generated from field: int64 proc = 3;
   */
  proc: bigint;

  /**
   * Wether Transaction has been processed(applied to
   *
   * @generated from field: bool processed = 4;
   */
  processed: boolean;

  /**
   * @generated from field: nocloud.billing.Priority priority = 5;
   */
  priority: Priority;

  /**
   * @generated from field: string account = 6;
   */
  account: string;

  /**
   * @generated from field: string service = 7;
   */
  service: string;

  /**
   * list of records UUIDs
   *
   * @generated from field: repeated string records = 8;
   */
  records: string[];

  /**
   * Transaction total value in NCU
   *
   * @generated from field: double total = 9;
   */
  total: number;

  /**
   * Transaction meta data, like
   * meta: {
   * total: <number> // resource "quantity", e.g. CPU cores, RAM Mb, Drive
   * Mb, IP quantity price_atm: <number> // hourly price per quant of resouce at
   * the moment, e.g. 1 NCU [other keys]: <any> // for example Drive
   * Type(SSD/HDD/NVMe/etc)
   * }
   *
   * @generated from field: map<string, google.protobuf.Value> meta = 10;
   */
  meta: { [key: string]: Value };

  /**
   * @generated from field: nocloud.billing.Currency currency = 11;
   */
  currency?: Currency;

  /**
   * @generated from field: int64 created = 12;
   */
  created: bigint;

  /**
   * @generated from field: optional string base = 13;
   */
  base?: string;

  /**
   * @generated from field: optional string previous = 14;
   */
  previous?: string;

  constructor(data?: PartialMessage<Transaction>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.billing.Transaction";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Transaction;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Transaction;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Transaction;

  static equals(a: Transaction | PlainMessage<Transaction> | undefined, b: Transaction | PlainMessage<Transaction> | undefined): boolean;
}

/**
 * Position. Instance must be specified to connect action with instance
 *
 * @generated from message nocloud.billing.Item
 */
export declare class Item extends Message<Item> {
  /**
   * @generated from field: string title = 1;
   */
  title: string;

  /**
   * @generated from field: int32 amount = 2;
   */
  amount: number;

  /**
   * @generated from field: string unit = 3;
   */
  unit: string;

  /**
   * @generated from field: double price = 4;
   */
  price: number;

  /**
   * @generated from field: string instance = 5;
   */
  instance: string;

  constructor(data?: PartialMessage<Item>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.billing.Item";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Item;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Item;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Item;

  static equals(a: Item | PlainMessage<Item> | undefined, b: Item | PlainMessage<Item> | undefined): boolean;
}

/**
 * @generated from message nocloud.billing.Invoice
 */
export declare class Invoice extends Message<Invoice> {
  /**
   * @generated from field: string uuid = 1;
   */
  uuid: string;

  /**
   * Payment date timestamp
   *
   * @generated from field: int64 payment = 2;
   */
  payment: bigint;

  /**
   * Processed date timestamp(when actions applied)(only for payment flow)
   *
   * @generated from field: int64 processed = 3;
   */
  processed: bigint;

  /**
   * Returned date timestamp(not 0 if invoice has returned status)
   *
   * @generated from field: int64 returned = 4;
   */
  returned: bigint;

  /**
   * @generated from field: int64 deadline = 5;
   */
  deadline: bigint;

  /**
   * @generated from field: nocloud.billing.BillingStatus status = 6;
   */
  status: BillingStatus;

  /**
   * @generated from field: string account = 7;
   */
  account: string;

  /**
   * @generated from field: repeated string transactions = 8;
   */
  transactions: string[];

  /**
   * @generated from field: double total = 9;
   */
  total: number;

  /**
   * @generated from field: map<string, google.protobuf.Value> meta = 10;
   */
  meta: { [key: string]: Value };

  /**
   * @generated from field: nocloud.billing.Currency currency = 11;
   */
  currency?: Currency;

  /**
   * @generated from field: int64 created = 12;
   */
  created: bigint;

  /**
   * @generated from field: repeated nocloud.billing.Item items = 13;
   */
  items: Item[];

  /**
   * @generated from field: nocloud.billing.ActionType type = 14;
   */
  type: ActionType;

  constructor(data?: PartialMessage<Invoice>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.billing.Invoice";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Invoice;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Invoice;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Invoice;

  static equals(a: Invoice | PlainMessage<Invoice> | undefined, b: Invoice | PlainMessage<Invoice> | undefined): boolean;
}

/**
 * @generated from message nocloud.billing.Invoices
 */
export declare class Invoices extends Message<Invoices> {
  /**
   * @generated from field: repeated nocloud.billing.Invoice pool = 1;
   */
  pool: Invoice[];

  constructor(data?: PartialMessage<Invoices>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.billing.Invoices";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Invoices;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Invoices;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Invoices;

  static equals(a: Invoices | PlainMessage<Invoices> | undefined, b: Invoices | PlainMessage<Invoices> | undefined): boolean;
}

/**
 * @generated from message nocloud.billing.Transactions
 */
export declare class Transactions extends Message<Transactions> {
  /**
   * @generated from field: repeated nocloud.billing.Transaction pool = 1;
   */
  pool: Transaction[];

  constructor(data?: PartialMessage<Transactions>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.billing.Transactions";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Transactions;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Transactions;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Transactions;

  static equals(a: Transactions | PlainMessage<Transactions> | undefined, b: Transactions | PlainMessage<Transactions> | undefined): boolean;
}

/**
 * @generated from message nocloud.billing.Record
 */
export declare class Record extends Message<Record> {
  /**
   * Record UUID
   *
   * @generated from field: string uuid = 1;
   */
  uuid: string;

  /**
   * Timestamp of Record coverage frame start
   *
   * @generated from field: int64 start = 2;
   */
  start: bigint;

  /**
   * Timestamp of Record coverage frame end
   *
   * @generated from field: int64 end = 3;
   */
  end: bigint;

  /**
   * Time when Record must be processed
   *
   * @generated from field: int64 exec = 4;
   */
  exec: bigint;

  /**
   * Wether Record has been processed(converted to Transaction)
   *
   * @generated from field: bool processed = 5;
   */
  processed: boolean;

  /**
   * @generated from field: nocloud.billing.Priority priority = 6;
   */
  priority: Priority;

  /**
   * Instance UUID
   *
   * @generated from field: string instance = 7;
   */
  instance: string;

  /**
   * Instance state
   *
   * @generated from field: nocloud.states.NoCloudState state = 8;
   */
  state: NoCloudState;

  /**
   * Resource key
   *
   * @generated from field: string resource = 9;
   */
  resource: string;

  /**
   * Product key
   *
   * @generated from field: string product = 10;
   */
  product: string;

  /**
   * Record total value in NCU
   *
   * @generated from field: double total = 11;
   */
  total: number;

  /**
   * Record meta data, like
   * meta: {
   * total: <number> // resource "quantity", e.g. CPU cores, RAM Mb, Drive
   * Mb, IP quantity price_atm: <number> // hourly price per quant of resouce at
   * the moment, e.g. 1 NCU [other keys]: <any> // for example Drive
   * Type(SSD/HDD/NVMe/etc)
   * }
   *
   * @generated from field: map<string, google.protobuf.Value> meta = 12;
   */
  meta: { [key: string]: Value };

  /**
   * @generated from field: nocloud.billing.Currency currency = 13;
   */
  currency?: Currency;

  /**
   * @generated from field: string service = 14;
   */
  service: string;

  /**
   * @generated from field: string account = 15;
   */
  account: string;

  /**
   * @generated from field: optional string base = 16;
   */
  base?: string;

  /**
   * @generated from field: optional string previous = 17;
   */
  previous?: string;

  /**
   * @generated from field: double cost = 18;
   */
  cost: number;

  constructor(data?: PartialMessage<Record>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.billing.Record";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Record;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Record;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Record;

  static equals(a: Record | PlainMessage<Record> | undefined, b: Record | PlainMessage<Record> | undefined): boolean;
}

/**
 * @generated from message nocloud.billing.Records
 */
export declare class Records extends Message<Records> {
  /**
   * @generated from field: repeated nocloud.billing.Record pool = 1;
   */
  pool: Record[];

  constructor(data?: PartialMessage<Records>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.billing.Records";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Records;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Records;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Records;

  static equals(a: Records | PlainMessage<Records> | undefined, b: Records | PlainMessage<Records> | undefined): boolean;
}

/**
 * @generated from message nocloud.billing.GetActiveRequest
 */
export declare class GetActiveRequest extends Message<GetActiveRequest> {
  /**
   * Instance UUID
   *
   * @generated from field: string uuid = 1;
   */
  uuid: string;

  constructor(data?: PartialMessage<GetActiveRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.billing.GetActiveRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetActiveRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetActiveRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetActiveRequest;

  static equals(a: GetActiveRequest | PlainMessage<GetActiveRequest> | undefined, b: GetActiveRequest | PlainMessage<GetActiveRequest> | undefined): boolean;
}

/**
 * @generated from message nocloud.billing.GetTransactionsRequest
 */
export declare class GetTransactionsRequest extends Message<GetTransactionsRequest> {
  /**
   * @generated from field: optional string account = 1;
   */
  account?: string;

  /**
   * @generated from field: optional string service = 2;
   */
  service?: string;

  /**
   * @generated from field: optional uint64 page = 3;
   */
  page?: bigint;

  /**
   * @generated from field: optional uint64 limit = 4;
   */
  limit?: bigint;

  /**
   * @generated from field: optional string field = 5;
   */
  field?: string;

  /**
   * @generated from field: optional string sort = 6;
   */
  sort?: string;

  /**
   * Get a single Transaction (would embed records too)
   *
   * @generated from field: optional string uuid = 7;
   */
  uuid?: string;

  /**
   * @generated from field: optional string type = 8;
   */
  type?: string;

  constructor(data?: PartialMessage<GetTransactionsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.billing.GetTransactionsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetTransactionsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetTransactionsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetTransactionsRequest;

  static equals(a: GetTransactionsRequest | PlainMessage<GetTransactionsRequest> | undefined, b: GetTransactionsRequest | PlainMessage<GetTransactionsRequest> | undefined): boolean;
}

/**
 * @generated from message nocloud.billing.ReprocessTransactionsRequest
 */
export declare class ReprocessTransactionsRequest extends Message<ReprocessTransactionsRequest> {
  /**
   * @generated from field: string account = 1;
   */
  account: string;

  constructor(data?: PartialMessage<ReprocessTransactionsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.billing.ReprocessTransactionsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReprocessTransactionsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReprocessTransactionsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReprocessTransactionsRequest;

  static equals(a: ReprocessTransactionsRequest | PlainMessage<ReprocessTransactionsRequest> | undefined, b: ReprocessTransactionsRequest | PlainMessage<ReprocessTransactionsRequest> | undefined): boolean;
}

/**
 * @generated from message nocloud.billing.GetTransactionsCountRequest
 */
export declare class GetTransactionsCountRequest extends Message<GetTransactionsCountRequest> {
  /**
   * @generated from field: optional string account = 1;
   */
  account?: string;

  /**
   * @generated from field: optional string service = 2;
   */
  service?: string;

  /**
   * @generated from field: optional string type = 3;
   */
  type?: string;

  constructor(data?: PartialMessage<GetTransactionsCountRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.billing.GetTransactionsCountRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetTransactionsCountRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetTransactionsCountRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetTransactionsCountRequest;

  static equals(a: GetTransactionsCountRequest | PlainMessage<GetTransactionsCountRequest> | undefined, b: GetTransactionsCountRequest | PlainMessage<GetTransactionsCountRequest> | undefined): boolean;
}

/**
 * @generated from message nocloud.billing.GetTransactionsCountResponse
 */
export declare class GetTransactionsCountResponse extends Message<GetTransactionsCountResponse> {
  /**
   * @generated from field: uint64 total = 1;
   */
  total: bigint;

  constructor(data?: PartialMessage<GetTransactionsCountResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.billing.GetTransactionsCountResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetTransactionsCountResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetTransactionsCountResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetTransactionsCountResponse;

  static equals(a: GetTransactionsCountResponse | PlainMessage<GetTransactionsCountResponse> | undefined, b: GetTransactionsCountResponse | PlainMessage<GetTransactionsCountResponse> | undefined): boolean;
}

/**
 * @generated from message nocloud.billing.UpdateTransactionRequest
 */
export declare class UpdateTransactionRequest extends Message<UpdateTransactionRequest> {
  /**
   * @generated from field: string uuid = 1;
   */
  uuid: string;

  /**
   * @generated from field: int64 exec = 2;
   */
  exec: bigint;

  constructor(data?: PartialMessage<UpdateTransactionRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.billing.UpdateTransactionRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateTransactionRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateTransactionRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateTransactionRequest;

  static equals(a: UpdateTransactionRequest | PlainMessage<UpdateTransactionRequest> | undefined, b: UpdateTransactionRequest | PlainMessage<UpdateTransactionRequest> | undefined): boolean;
}

/**
 * @generated from message nocloud.billing.UpdateInvoiceStatusRequest
 */
export declare class UpdateInvoiceStatusRequest extends Message<UpdateInvoiceStatusRequest> {
  /**
   * @generated from field: string uuid = 1;
   */
  uuid: string;

  /**
   * @generated from field: nocloud.billing.BillingStatus status = 2;
   */
  status: BillingStatus;

  constructor(data?: PartialMessage<UpdateInvoiceStatusRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.billing.UpdateInvoiceStatusRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateInvoiceStatusRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateInvoiceStatusRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateInvoiceStatusRequest;

  static equals(a: UpdateInvoiceStatusRequest | PlainMessage<UpdateInvoiceStatusRequest> | undefined, b: UpdateInvoiceStatusRequest | PlainMessage<UpdateInvoiceStatusRequest> | undefined): boolean;
}

/**
 * @generated from message nocloud.billing.GetInvoicesCountRequest
 */
export declare class GetInvoicesCountRequest extends Message<GetInvoicesCountRequest> {
  /**
   * @generated from field: optional string account = 1;
   */
  account?: string;

  /**
   * @generated from field: optional string service = 2;
   */
  service?: string;

  /**
   * @generated from field: optional nocloud.billing.BillingStatus status = 3;
   */
  status?: BillingStatus;

  /**
   * @generated from field: map<string, google.protobuf.Value> filters = 4;
   */
  filters: { [key: string]: Value };

  constructor(data?: PartialMessage<GetInvoicesCountRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.billing.GetInvoicesCountRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetInvoicesCountRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetInvoicesCountRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetInvoicesCountRequest;

  static equals(a: GetInvoicesCountRequest | PlainMessage<GetInvoicesCountRequest> | undefined, b: GetInvoicesCountRequest | PlainMessage<GetInvoicesCountRequest> | undefined): boolean;
}

/**
 * @generated from message nocloud.billing.GetInvoicesRequest
 */
export declare class GetInvoicesRequest extends Message<GetInvoicesRequest> {
  /**
   * @generated from field: optional string account = 1;
   */
  account?: string;

  /**
   * @generated from field: optional string service = 2;
   */
  service?: string;

  /**
   * @generated from field: optional uint64 page = 3;
   */
  page?: bigint;

  /**
   * @generated from field: optional uint64 limit = 4;
   */
  limit?: bigint;

  /**
   * @generated from field: optional string field = 5;
   */
  field?: string;

  /**
   * @generated from field: optional string sort = 6;
   */
  sort?: string;

  /**
   * Get a single Transaction (would embed records too)
   *
   * @generated from field: optional string uuid = 7;
   */
  uuid?: string;

  /**
   * @generated from field: optional nocloud.billing.BillingStatus status = 8;
   */
  status?: BillingStatus;

  /**
   * @generated from field: map<string, google.protobuf.Value> filters = 9;
   */
  filters: { [key: string]: Value };

  constructor(data?: PartialMessage<GetInvoicesRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.billing.GetInvoicesRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetInvoicesRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetInvoicesRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetInvoicesRequest;

  static equals(a: GetInvoicesRequest | PlainMessage<GetInvoicesRequest> | undefined, b: GetInvoicesRequest | PlainMessage<GetInvoicesRequest> | undefined): boolean;
}

/**
 * @generated from message nocloud.billing.GetInvoicesCountResponse
 */
export declare class GetInvoicesCountResponse extends Message<GetInvoicesCountResponse> {
  /**
   * @generated from field: uint64 total = 1;
   */
  total: bigint;

  constructor(data?: PartialMessage<GetInvoicesCountResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.billing.GetInvoicesCountResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetInvoicesCountResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetInvoicesCountResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetInvoicesCountResponse;

  static equals(a: GetInvoicesCountResponse | PlainMessage<GetInvoicesCountResponse> | undefined, b: GetInvoicesCountResponse | PlainMessage<GetInvoicesCountResponse> | undefined): boolean;
}

/**
 * @generated from message nocloud.billing.UpdateTransactionResponse
 */
export declare class UpdateTransactionResponse extends Message<UpdateTransactionResponse> {
  /**
   * @generated from field: bool result = 1;
   */
  result: boolean;

  constructor(data?: PartialMessage<UpdateTransactionResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.billing.UpdateTransactionResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateTransactionResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateTransactionResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateTransactionResponse;

  static equals(a: UpdateTransactionResponse | PlainMessage<UpdateTransactionResponse> | undefined, b: UpdateTransactionResponse | PlainMessage<UpdateTransactionResponse> | undefined): boolean;
}

/**
 * @generated from message nocloud.billing.CostEstimation
 */
export declare class CostEstimation extends Message<CostEstimation> {
  /**
   * @generated from field: map<string, double> resources = 1;
   */
  resources: { [key: string]: number };

  /**
   * @generated from field: double product = 2;
   */
  product: number;

  /**
   * @generated from field: double total = 3;
   */
  total: number;

  constructor(data?: PartialMessage<CostEstimation>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.billing.CostEstimation";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CostEstimation;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CostEstimation;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CostEstimation;

  static equals(a: CostEstimation | PlainMessage<CostEstimation> | undefined, b: CostEstimation | PlainMessage<CostEstimation> | undefined): boolean;
}

/**
 * -------------------------------------
 *
 * @generated from message nocloud.billing.GetInstancesReportRequest
 */
export declare class GetInstancesReportRequest extends Message<GetInstancesReportRequest> {
  /**
   * @generated from field: optional int64 from = 1;
   */
  from?: bigint;

  /**
   * @generated from field: optional int64 to = 2;
   */
  to?: bigint;

  /**
   * @generated from field: optional int64 page = 3;
   */
  page?: bigint;

  /**
   * @generated from field: optional int64 limit = 4;
   */
  limit?: bigint;

  /**
   * @generated from field: optional string field = 5;
   */
  field?: string;

  /**
   * @generated from field: optional string sort = 6;
   */
  sort?: string;

  constructor(data?: PartialMessage<GetInstancesReportRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.billing.GetInstancesReportRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetInstancesReportRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetInstancesReportRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetInstancesReportRequest;

  static equals(a: GetInstancesReportRequest | PlainMessage<GetInstancesReportRequest> | undefined, b: GetInstancesReportRequest | PlainMessage<GetInstancesReportRequest> | undefined): boolean;
}

/**
 * @generated from message nocloud.billing.InstanceReport
 */
export declare class InstanceReport extends Message<InstanceReport> {
  /**
   * @generated from field: string uuid = 1;
   */
  uuid: string;

  /**
   * @generated from field: double total = 2;
   */
  total: number;

  /**
   * @generated from field: nocloud.billing.Currency currency = 3;
   */
  currency?: Currency;

  constructor(data?: PartialMessage<InstanceReport>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.billing.InstanceReport";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InstanceReport;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InstanceReport;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InstanceReport;

  static equals(a: InstanceReport | PlainMessage<InstanceReport> | undefined, b: InstanceReport | PlainMessage<InstanceReport> | undefined): boolean;
}

/**
 * @generated from message nocloud.billing.GetInstancesReportResponse
 */
export declare class GetInstancesReportResponse extends Message<GetInstancesReportResponse> {
  /**
   * @generated from field: repeated nocloud.billing.InstanceReport reports = 1;
   */
  reports: InstanceReport[];

  constructor(data?: PartialMessage<GetInstancesReportResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.billing.GetInstancesReportResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetInstancesReportResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetInstancesReportResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetInstancesReportResponse;

  static equals(a: GetInstancesReportResponse | PlainMessage<GetInstancesReportResponse> | undefined, b: GetInstancesReportResponse | PlainMessage<GetInstancesReportResponse> | undefined): boolean;
}

/**
 * -------------------------------------
 *
 * @generated from message nocloud.billing.GetRecordsReportsRequest
 */
export declare class GetRecordsReportsRequest extends Message<GetRecordsReportsRequest> {
  /**
   * @generated from field: optional int64 page = 1;
   */
  page?: bigint;

  /**
   * @generated from field: optional int64 limit = 2;
   */
  limit?: bigint;

  /**
   * @generated from field: optional string field = 3;
   */
  field?: string;

  /**
   * @generated from field: optional string sort = 4;
   */
  sort?: string;

  /**
   * @generated from field: map<string, google.protobuf.Value> filters = 5;
   */
  filters: { [key: string]: Value };

  /**
   * @generated from field: optional string account = 6;
   */
  account?: string;

  /**
   * @generated from field: optional string service = 7;
   */
  service?: string;

  constructor(data?: PartialMessage<GetRecordsReportsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.billing.GetRecordsReportsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetRecordsReportsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetRecordsReportsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetRecordsReportsRequest;

  static equals(a: GetRecordsReportsRequest | PlainMessage<GetRecordsReportsRequest> | undefined, b: GetRecordsReportsRequest | PlainMessage<GetRecordsReportsRequest> | undefined): boolean;
}

/**
 * @generated from message nocloud.billing.GetRecordsReportsResponse
 */
export declare class GetRecordsReportsResponse extends Message<GetRecordsReportsResponse> {
  /**
   * @generated from field: repeated nocloud.billing.Record records = 1;
   */
  records: Record[];

  /**
   * @generated from field: double total = 2;
   */
  total: number;

  /**
   * @generated from field: int64 count = 3;
   */
  count: bigint;

  constructor(data?: PartialMessage<GetRecordsReportsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.billing.GetRecordsReportsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetRecordsReportsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetRecordsReportsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetRecordsReportsResponse;

  static equals(a: GetRecordsReportsResponse | PlainMessage<GetRecordsReportsResponse> | undefined, b: GetRecordsReportsResponse | PlainMessage<GetRecordsReportsResponse> | undefined): boolean;
}

/**
 * -------------------------------------
 *
 * @generated from message nocloud.billing.GetInstancesReportsCountRequest
 */
export declare class GetInstancesReportsCountRequest extends Message<GetInstancesReportsCountRequest> {
  constructor(data?: PartialMessage<GetInstancesReportsCountRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.billing.GetInstancesReportsCountRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetInstancesReportsCountRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetInstancesReportsCountRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetInstancesReportsCountRequest;

  static equals(a: GetInstancesReportsCountRequest | PlainMessage<GetInstancesReportsCountRequest> | undefined, b: GetInstancesReportsCountRequest | PlainMessage<GetInstancesReportsCountRequest> | undefined): boolean;
}

/**
 * -------------------------------------
 *
 * @generated from message nocloud.billing.GetRecordsReportsCountRequest
 */
export declare class GetRecordsReportsCountRequest extends Message<GetRecordsReportsCountRequest> {
  /**
   * @generated from field: map<string, google.protobuf.Value> filters = 1;
   */
  filters: { [key: string]: Value };

  /**
   * @generated from field: optional string account = 2;
   */
  account?: string;

  /**
   * @generated from field: optional string service = 3;
   */
  service?: string;

  constructor(data?: PartialMessage<GetRecordsReportsCountRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.billing.GetRecordsReportsCountRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetRecordsReportsCountRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetRecordsReportsCountRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetRecordsReportsCountRequest;

  static equals(a: GetRecordsReportsCountRequest | PlainMessage<GetRecordsReportsCountRequest> | undefined, b: GetRecordsReportsCountRequest | PlainMessage<GetRecordsReportsCountRequest> | undefined): boolean;
}

/**
 * @generated from message nocloud.billing.GetReportsCountResponse
 */
export declare class GetReportsCountResponse extends Message<GetReportsCountResponse> {
  /**
   * @generated from field: int64 total = 1;
   */
  total: bigint;

  /**
   * @generated from field: google.protobuf.Value unique = 2;
   */
  unique?: Value;

  constructor(data?: PartialMessage<GetReportsCountResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.billing.GetReportsCountResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetReportsCountResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetReportsCountResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetReportsCountResponse;

  static equals(a: GetReportsCountResponse | PlainMessage<GetReportsCountResponse> | undefined, b: GetReportsCountResponse | PlainMessage<GetReportsCountResponse> | undefined): boolean;
}

/**
 * @generated from message nocloud.billing.Currency
 */
export declare class Currency extends Message<Currency> {
  /**
   * @generated from field: int32 id = 1;
   */
  id: number;

  /**
   * @generated from field: string title = 2;
   */
  title: string;

  constructor(data?: PartialMessage<Currency>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.billing.Currency";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Currency;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Currency;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Currency;

  static equals(a: Currency | PlainMessage<Currency> | undefined, b: Currency | PlainMessage<Currency> | undefined): boolean;
}

/**
 * @generated from message nocloud.billing.CreateCurrencyRequest
 */
export declare class CreateCurrencyRequest extends Message<CreateCurrencyRequest> {
  /**
   * @generated from field: nocloud.billing.Currency currency = 1;
   */
  currency?: Currency;

  constructor(data?: PartialMessage<CreateCurrencyRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.billing.CreateCurrencyRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateCurrencyRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateCurrencyRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateCurrencyRequest;

  static equals(a: CreateCurrencyRequest | PlainMessage<CreateCurrencyRequest> | undefined, b: CreateCurrencyRequest | PlainMessage<CreateCurrencyRequest> | undefined): boolean;
}

/**
 * @generated from message nocloud.billing.CreateCurrencyResponse
 */
export declare class CreateCurrencyResponse extends Message<CreateCurrencyResponse> {
  constructor(data?: PartialMessage<CreateCurrencyResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.billing.CreateCurrencyResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateCurrencyResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateCurrencyResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateCurrencyResponse;

  static equals(a: CreateCurrencyResponse | PlainMessage<CreateCurrencyResponse> | undefined, b: CreateCurrencyResponse | PlainMessage<CreateCurrencyResponse> | undefined): boolean;
}

/**
 * @generated from message nocloud.billing.CreateExchangeRateRequest
 */
export declare class CreateExchangeRateRequest extends Message<CreateExchangeRateRequest> {
  /**
   * @generated from field: nocloud.billing.Currency from = 1;
   */
  from?: Currency;

  /**
   * @generated from field: nocloud.billing.Currency to = 2;
   */
  to?: Currency;

  /**
   * @generated from field: double rate = 3;
   */
  rate: number;

  constructor(data?: PartialMessage<CreateExchangeRateRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.billing.CreateExchangeRateRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateExchangeRateRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateExchangeRateRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateExchangeRateRequest;

  static equals(a: CreateExchangeRateRequest | PlainMessage<CreateExchangeRateRequest> | undefined, b: CreateExchangeRateRequest | PlainMessage<CreateExchangeRateRequest> | undefined): boolean;
}

/**
 * @generated from message nocloud.billing.CreateExchangeRateResponse
 */
export declare class CreateExchangeRateResponse extends Message<CreateExchangeRateResponse> {
  constructor(data?: PartialMessage<CreateExchangeRateResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.billing.CreateExchangeRateResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateExchangeRateResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateExchangeRateResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateExchangeRateResponse;

  static equals(a: CreateExchangeRateResponse | PlainMessage<CreateExchangeRateResponse> | undefined, b: CreateExchangeRateResponse | PlainMessage<CreateExchangeRateResponse> | undefined): boolean;
}

/**
 * @generated from message nocloud.billing.UpdateExchangeRateRequest
 */
export declare class UpdateExchangeRateRequest extends Message<UpdateExchangeRateRequest> {
  /**
   * @generated from field: nocloud.billing.Currency from = 1;
   */
  from?: Currency;

  /**
   * @generated from field: nocloud.billing.Currency to = 2;
   */
  to?: Currency;

  /**
   * @generated from field: double rate = 3;
   */
  rate: number;

  constructor(data?: PartialMessage<UpdateExchangeRateRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.billing.UpdateExchangeRateRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateExchangeRateRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateExchangeRateRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateExchangeRateRequest;

  static equals(a: UpdateExchangeRateRequest | PlainMessage<UpdateExchangeRateRequest> | undefined, b: UpdateExchangeRateRequest | PlainMessage<UpdateExchangeRateRequest> | undefined): boolean;
}

/**
 * @generated from message nocloud.billing.UpdateExchangeRateResponse
 */
export declare class UpdateExchangeRateResponse extends Message<UpdateExchangeRateResponse> {
  constructor(data?: PartialMessage<UpdateExchangeRateResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.billing.UpdateExchangeRateResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateExchangeRateResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateExchangeRateResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateExchangeRateResponse;

  static equals(a: UpdateExchangeRateResponse | PlainMessage<UpdateExchangeRateResponse> | undefined, b: UpdateExchangeRateResponse | PlainMessage<UpdateExchangeRateResponse> | undefined): boolean;
}

/**
 * @generated from message nocloud.billing.DeleteExchangeRateRequest
 */
export declare class DeleteExchangeRateRequest extends Message<DeleteExchangeRateRequest> {
  /**
   * @generated from field: nocloud.billing.Currency from = 1;
   */
  from?: Currency;

  /**
   * @generated from field: nocloud.billing.Currency to = 2;
   */
  to?: Currency;

  constructor(data?: PartialMessage<DeleteExchangeRateRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.billing.DeleteExchangeRateRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteExchangeRateRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteExchangeRateRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteExchangeRateRequest;

  static equals(a: DeleteExchangeRateRequest | PlainMessage<DeleteExchangeRateRequest> | undefined, b: DeleteExchangeRateRequest | PlainMessage<DeleteExchangeRateRequest> | undefined): boolean;
}

/**
 * @generated from message nocloud.billing.DeleteExchangeRateResponse
 */
export declare class DeleteExchangeRateResponse extends Message<DeleteExchangeRateResponse> {
  constructor(data?: PartialMessage<DeleteExchangeRateResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.billing.DeleteExchangeRateResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteExchangeRateResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteExchangeRateResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteExchangeRateResponse;

  static equals(a: DeleteExchangeRateResponse | PlainMessage<DeleteExchangeRateResponse> | undefined, b: DeleteExchangeRateResponse | PlainMessage<DeleteExchangeRateResponse> | undefined): boolean;
}

/**
 * @generated from message nocloud.billing.GetCurrenciesRequest
 */
export declare class GetCurrenciesRequest extends Message<GetCurrenciesRequest> {
  constructor(data?: PartialMessage<GetCurrenciesRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.billing.GetCurrenciesRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCurrenciesRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCurrenciesRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCurrenciesRequest;

  static equals(a: GetCurrenciesRequest | PlainMessage<GetCurrenciesRequest> | undefined, b: GetCurrenciesRequest | PlainMessage<GetCurrenciesRequest> | undefined): boolean;
}

/**
 * @generated from message nocloud.billing.GetCurrenciesResponse
 */
export declare class GetCurrenciesResponse extends Message<GetCurrenciesResponse> {
  /**
   * @generated from field: repeated nocloud.billing.Currency currencies = 1;
   */
  currencies: Currency[];

  constructor(data?: PartialMessage<GetCurrenciesResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.billing.GetCurrenciesResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCurrenciesResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCurrenciesResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCurrenciesResponse;

  static equals(a: GetCurrenciesResponse | PlainMessage<GetCurrenciesResponse> | undefined, b: GetCurrenciesResponse | PlainMessage<GetCurrenciesResponse> | undefined): boolean;
}

/**
 * @generated from message nocloud.billing.GetExchangeRateRequest
 */
export declare class GetExchangeRateRequest extends Message<GetExchangeRateRequest> {
  /**
   * @generated from field: nocloud.billing.Currency from = 1;
   */
  from?: Currency;

  /**
   * @generated from field: nocloud.billing.Currency to = 2;
   */
  to?: Currency;

  constructor(data?: PartialMessage<GetExchangeRateRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.billing.GetExchangeRateRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetExchangeRateRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetExchangeRateRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetExchangeRateRequest;

  static equals(a: GetExchangeRateRequest | PlainMessage<GetExchangeRateRequest> | undefined, b: GetExchangeRateRequest | PlainMessage<GetExchangeRateRequest> | undefined): boolean;
}

/**
 * @generated from message nocloud.billing.GetExchangeRatesRequest
 */
export declare class GetExchangeRatesRequest extends Message<GetExchangeRatesRequest> {
  constructor(data?: PartialMessage<GetExchangeRatesRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.billing.GetExchangeRatesRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetExchangeRatesRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetExchangeRatesRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetExchangeRatesRequest;

  static equals(a: GetExchangeRatesRequest | PlainMessage<GetExchangeRatesRequest> | undefined, b: GetExchangeRatesRequest | PlainMessage<GetExchangeRatesRequest> | undefined): boolean;
}

/**
 * @generated from message nocloud.billing.GetExchangeRateResponse
 */
export declare class GetExchangeRateResponse extends Message<GetExchangeRateResponse> {
  /**
   * @generated from field: nocloud.billing.Currency from = 1;
   */
  from?: Currency;

  /**
   * @generated from field: nocloud.billing.Currency to = 2;
   */
  to?: Currency;

  /**
   * @generated from field: double rate = 3;
   */
  rate: number;

  constructor(data?: PartialMessage<GetExchangeRateResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.billing.GetExchangeRateResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetExchangeRateResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetExchangeRateResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetExchangeRateResponse;

  static equals(a: GetExchangeRateResponse | PlainMessage<GetExchangeRateResponse> | undefined, b: GetExchangeRateResponse | PlainMessage<GetExchangeRateResponse> | undefined): boolean;
}

/**
 * @generated from message nocloud.billing.GetExchangeRatesResponse
 */
export declare class GetExchangeRatesResponse extends Message<GetExchangeRatesResponse> {
  /**
   * @generated from field: repeated nocloud.billing.GetExchangeRateResponse rates = 1;
   */
  rates: GetExchangeRateResponse[];

  constructor(data?: PartialMessage<GetExchangeRatesResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.billing.GetExchangeRatesResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetExchangeRatesResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetExchangeRatesResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetExchangeRatesResponse;

  static equals(a: GetExchangeRatesResponse | PlainMessage<GetExchangeRatesResponse> | undefined, b: GetExchangeRatesResponse | PlainMessage<GetExchangeRatesResponse> | undefined): boolean;
}

/**
 * @generated from message nocloud.billing.ConversionRequest
 */
export declare class ConversionRequest extends Message<ConversionRequest> {
  /**
   * @generated from field: nocloud.billing.Currency from = 1;
   */
  from?: Currency;

  /**
   * @generated from field: nocloud.billing.Currency to = 2;
   */
  to?: Currency;

  /**
   * @generated from field: double amount = 3;
   */
  amount: number;

  constructor(data?: PartialMessage<ConversionRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.billing.ConversionRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConversionRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConversionRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConversionRequest;

  static equals(a: ConversionRequest | PlainMessage<ConversionRequest> | undefined, b: ConversionRequest | PlainMessage<ConversionRequest> | undefined): boolean;
}

/**
 * @generated from message nocloud.billing.ConversionResponse
 */
export declare class ConversionResponse extends Message<ConversionResponse> {
  /**
   * @generated from field: double amount = 1;
   */
  amount: number;

  constructor(data?: PartialMessage<ConversionResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.billing.ConversionResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConversionResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConversionResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConversionResponse;

  static equals(a: ConversionResponse | PlainMessage<ConversionResponse> | undefined, b: ConversionResponse | PlainMessage<ConversionResponse> | undefined): boolean;
}

