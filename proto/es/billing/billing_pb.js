//
//Copyright Â© 2021-2023 Nikita Ivanovski info@slnt-opp.xyz
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// @generated by protoc-gen-es v2.0.0 with parameter "target=js+dts"
// @generated from file billing/billing.proto (package nocloud.billing, syntax proto3)
/* eslint-disable */

import { enumDesc, fileDesc, messageDesc, serviceDesc, tsEnum } from "@bufbuild/protobuf/codegenv1";
import { file_ansible_ansible } from "../ansible/ansible_pb";
import { file_billing_addons_addons } from "./addons/addons_pb";
import { file_billing_descriptions_descriptions } from "./descriptions/descriptions_pb";
import { file_google_api_annotations } from "../google/api/annotations_pb";
import { file_google_protobuf_struct } from "@bufbuild/protobuf/wkt";
import { file_states_states } from "../states/states_pb";
import { file_statuses_statuses } from "../statuses/statuses_pb";

/**
 * Describes the file billing/billing.proto.
 */
export const file_billing_billing = /*@__PURE__*/
  fileDesc("", [file_ansible_ansible, file_billing_addons_addons, file_billing_descriptions_descriptions, file_google_api_annotations, file_google_protobuf_struct, file_states_states, file_statuses_statuses]);

/**
 * Describes the message nocloud.billing.FeeRange.
 * Use `create(FeeRangeSchema)` to create a new message.
 */
export const FeeRangeSchema = /*@__PURE__*/
  messageDesc(file_billing_billing, 0);

/**
 * Describes the message nocloud.billing.Fee.
 * Use `create(FeeSchema)` to create a new message.
 */
export const FeeSchema = /*@__PURE__*/
  messageDesc(file_billing_billing, 1);

/**
 * Describes the message nocloud.billing.Plan.
 * Use `create(PlanSchema)` to create a new message.
 */
export const PlanSchema = /*@__PURE__*/
  messageDesc(file_billing_billing, 2);

/**
 * Describes the message nocloud.billing.ListRequest.
 * Use `create(ListRequestSchema)` to create a new message.
 */
export const ListRequestSchema = /*@__PURE__*/
  messageDesc(file_billing_billing, 3);

/**
 * Describes the message nocloud.billing.ListResponse.
 * Use `create(ListResponseSchema)` to create a new message.
 */
export const ListResponseSchema = /*@__PURE__*/
  messageDesc(file_billing_billing, 4);

/**
 * Describes the message nocloud.billing.ListPlansInstancesRequest.
 * Use `create(ListPlansInstancesRequestSchema)` to create a new message.
 */
export const ListPlansInstancesRequestSchema = /*@__PURE__*/
  messageDesc(file_billing_billing, 5);

/**
 * Describes the message nocloud.billing.ListPlansInstancesResponse.
 * Use `create(ListPlansInstancesResponseSchema)` to create a new message.
 */
export const ListPlansInstancesResponseSchema = /*@__PURE__*/
  messageDesc(file_billing_billing, 6);

/**
 * Describes the message nocloud.billing.ResourceConf.
 * Use `create(ResourceConfSchema)` to create a new message.
 */
export const ResourceConfSchema = /*@__PURE__*/
  messageDesc(file_billing_billing, 7);

/**
 * Describes the message nocloud.billing.Product.
 * Use `create(ProductSchema)` to create a new message.
 */
export const ProductSchema = /*@__PURE__*/
  messageDesc(file_billing_billing, 8);

/**
 * Describes the message nocloud.billing.Transaction.
 * Use `create(TransactionSchema)` to create a new message.
 */
export const TransactionSchema = /*@__PURE__*/
  messageDesc(file_billing_billing, 9);

/**
 * Describes the message nocloud.billing.Item.
 * Use `create(ItemSchema)` to create a new message.
 */
export const ItemSchema = /*@__PURE__*/
  messageDesc(file_billing_billing, 10);

/**
 * Describes the message nocloud.billing.Invoice.
 * Use `create(InvoiceSchema)` to create a new message.
 */
export const InvoiceSchema = /*@__PURE__*/
  messageDesc(file_billing_billing, 11);

/**
 * Describes the message nocloud.billing.Invoices.
 * Use `create(InvoicesSchema)` to create a new message.
 */
export const InvoicesSchema = /*@__PURE__*/
  messageDesc(file_billing_billing, 12);

/**
 * Describes the message nocloud.billing.Transactions.
 * Use `create(TransactionsSchema)` to create a new message.
 */
export const TransactionsSchema = /*@__PURE__*/
  messageDesc(file_billing_billing, 13);

/**
 * Describes the message nocloud.billing.Record.
 * Use `create(RecordSchema)` to create a new message.
 */
export const RecordSchema = /*@__PURE__*/
  messageDesc(file_billing_billing, 14);

/**
 * Describes the message nocloud.billing.Records.
 * Use `create(RecordsSchema)` to create a new message.
 */
export const RecordsSchema = /*@__PURE__*/
  messageDesc(file_billing_billing, 15);

/**
 * Describes the message nocloud.billing.GetActiveRequest.
 * Use `create(GetActiveRequestSchema)` to create a new message.
 */
export const GetActiveRequestSchema = /*@__PURE__*/
  messageDesc(file_billing_billing, 16);

/**
 * Describes the message nocloud.billing.GetTransactionsRequest.
 * Use `create(GetTransactionsRequestSchema)` to create a new message.
 */
export const GetTransactionsRequestSchema = /*@__PURE__*/
  messageDesc(file_billing_billing, 17);

/**
 * Describes the message nocloud.billing.ReprocessTransactionsRequest.
 * Use `create(ReprocessTransactionsRequestSchema)` to create a new message.
 */
export const ReprocessTransactionsRequestSchema = /*@__PURE__*/
  messageDesc(file_billing_billing, 18);

/**
 * Describes the message nocloud.billing.GetTransactionsCountRequest.
 * Use `create(GetTransactionsCountRequestSchema)` to create a new message.
 */
export const GetTransactionsCountRequestSchema = /*@__PURE__*/
  messageDesc(file_billing_billing, 19);

/**
 * Describes the message nocloud.billing.GetTransactionsCountResponse.
 * Use `create(GetTransactionsCountResponseSchema)` to create a new message.
 */
export const GetTransactionsCountResponseSchema = /*@__PURE__*/
  messageDesc(file_billing_billing, 20);

/**
 * Describes the message nocloud.billing.UpdateTransactionRequest.
 * Use `create(UpdateTransactionRequestSchema)` to create a new message.
 */
export const UpdateTransactionRequestSchema = /*@__PURE__*/
  messageDesc(file_billing_billing, 21);

/**
 * Describes the message nocloud.billing.CreateInvoiceRequest.
 * Use `create(CreateInvoiceRequestSchema)` to create a new message.
 */
export const CreateInvoiceRequestSchema = /*@__PURE__*/
  messageDesc(file_billing_billing, 22);

/**
 * Describes the message nocloud.billing.UpdateInvoiceRequest.
 * Use `create(UpdateInvoiceRequestSchema)` to create a new message.
 */
export const UpdateInvoiceRequestSchema = /*@__PURE__*/
  messageDesc(file_billing_billing, 23);

/**
 * Describes the message nocloud.billing.UpdateInvoiceStatusRequest.
 * Use `create(UpdateInvoiceStatusRequestSchema)` to create a new message.
 */
export const UpdateInvoiceStatusRequestSchema = /*@__PURE__*/
  messageDesc(file_billing_billing, 24);

/**
 * Describes the message nocloud.billing.UpdateInvoiceStatusRequest.Params.
 * Use `create(UpdateInvoiceStatusRequest_ParamsSchema)` to create a new message.
 */
export const UpdateInvoiceStatusRequest_ParamsSchema = /*@__PURE__*/
  messageDesc(file_billing_billing, 24, 0);

/**
 * Describes the message nocloud.billing.GetInvoicesCountRequest.
 * Use `create(GetInvoicesCountRequestSchema)` to create a new message.
 */
export const GetInvoicesCountRequestSchema = /*@__PURE__*/
  messageDesc(file_billing_billing, 25);

/**
 * Describes the message nocloud.billing.GetInvoicesRequest.
 * Use `create(GetInvoicesRequestSchema)` to create a new message.
 */
export const GetInvoicesRequestSchema = /*@__PURE__*/
  messageDesc(file_billing_billing, 26);

/**
 * Describes the message nocloud.billing.GetInvoicesCountResponse.
 * Use `create(GetInvoicesCountResponseSchema)` to create a new message.
 */
export const GetInvoicesCountResponseSchema = /*@__PURE__*/
  messageDesc(file_billing_billing, 27);

/**
 * Describes the message nocloud.billing.UpdateTransactionResponse.
 * Use `create(UpdateTransactionResponseSchema)` to create a new message.
 */
export const UpdateTransactionResponseSchema = /*@__PURE__*/
  messageDesc(file_billing_billing, 28);

/**
 * Describes the message nocloud.billing.CostEstimation.
 * Use `create(CostEstimationSchema)` to create a new message.
 */
export const CostEstimationSchema = /*@__PURE__*/
  messageDesc(file_billing_billing, 29);

/**
 * Describes the message nocloud.billing.GetInstancesReportRequest.
 * Use `create(GetInstancesReportRequestSchema)` to create a new message.
 */
export const GetInstancesReportRequestSchema = /*@__PURE__*/
  messageDesc(file_billing_billing, 30);

/**
 * Describes the message nocloud.billing.InstanceReport.
 * Use `create(InstanceReportSchema)` to create a new message.
 */
export const InstanceReportSchema = /*@__PURE__*/
  messageDesc(file_billing_billing, 31);

/**
 * Describes the message nocloud.billing.GetInstancesReportResponse.
 * Use `create(GetInstancesReportResponseSchema)` to create a new message.
 */
export const GetInstancesReportResponseSchema = /*@__PURE__*/
  messageDesc(file_billing_billing, 32);

/**
 * Describes the message nocloud.billing.GetRecordsReportsRequest.
 * Use `create(GetRecordsReportsRequestSchema)` to create a new message.
 */
export const GetRecordsReportsRequestSchema = /*@__PURE__*/
  messageDesc(file_billing_billing, 33);

/**
 * Describes the message nocloud.billing.GetRecordsReportsResponse.
 * Use `create(GetRecordsReportsResponseSchema)` to create a new message.
 */
export const GetRecordsReportsResponseSchema = /*@__PURE__*/
  messageDesc(file_billing_billing, 34);

/**
 * Describes the message nocloud.billing.GetInstancesReportsCountRequest.
 * Use `create(GetInstancesReportsCountRequestSchema)` to create a new message.
 */
export const GetInstancesReportsCountRequestSchema = /*@__PURE__*/
  messageDesc(file_billing_billing, 35);

/**
 * Describes the message nocloud.billing.GetRecordsReportsCountRequest.
 * Use `create(GetRecordsReportsCountRequestSchema)` to create a new message.
 */
export const GetRecordsReportsCountRequestSchema = /*@__PURE__*/
  messageDesc(file_billing_billing, 36);

/**
 * Describes the message nocloud.billing.GetReportsCountResponse.
 * Use `create(GetReportsCountResponseSchema)` to create a new message.
 */
export const GetReportsCountResponseSchema = /*@__PURE__*/
  messageDesc(file_billing_billing, 37);

/**
 * Describes the message nocloud.billing.GetInvoiceSettingsTemplateExampleRequest.
 * Use `create(GetInvoiceSettingsTemplateExampleRequestSchema)` to create a new message.
 */
export const GetInvoiceSettingsTemplateExampleRequestSchema = /*@__PURE__*/
  messageDesc(file_billing_billing, 38);

/**
 * Describes the message nocloud.billing.GetInvoiceSettingsTemplateExampleResponse.
 * Use `create(GetInvoiceSettingsTemplateExampleResponseSchema)` to create a new message.
 */
export const GetInvoiceSettingsTemplateExampleResponseSchema = /*@__PURE__*/
  messageDesc(file_billing_billing, 39);

/**
 * Describes the message nocloud.billing.Currency.
 * Use `create(CurrencySchema)` to create a new message.
 */
export const CurrencySchema = /*@__PURE__*/
  messageDesc(file_billing_billing, 40);

/**
 * Describes the message nocloud.billing.CreateCurrencyRequest.
 * Use `create(CreateCurrencyRequestSchema)` to create a new message.
 */
export const CreateCurrencyRequestSchema = /*@__PURE__*/
  messageDesc(file_billing_billing, 41);

/**
 * Describes the message nocloud.billing.CreateCurrencyResponse.
 * Use `create(CreateCurrencyResponseSchema)` to create a new message.
 */
export const CreateCurrencyResponseSchema = /*@__PURE__*/
  messageDesc(file_billing_billing, 42);

/**
 * Describes the message nocloud.billing.CreateExchangeRateRequest.
 * Use `create(CreateExchangeRateRequestSchema)` to create a new message.
 */
export const CreateExchangeRateRequestSchema = /*@__PURE__*/
  messageDesc(file_billing_billing, 43);

/**
 * Describes the message nocloud.billing.CreateExchangeRateResponse.
 * Use `create(CreateExchangeRateResponseSchema)` to create a new message.
 */
export const CreateExchangeRateResponseSchema = /*@__PURE__*/
  messageDesc(file_billing_billing, 44);

/**
 * Describes the message nocloud.billing.UpdateExchangeRateRequest.
 * Use `create(UpdateExchangeRateRequestSchema)` to create a new message.
 */
export const UpdateExchangeRateRequestSchema = /*@__PURE__*/
  messageDesc(file_billing_billing, 45);

/**
 * Describes the message nocloud.billing.UpdateExchangeRateResponse.
 * Use `create(UpdateExchangeRateResponseSchema)` to create a new message.
 */
export const UpdateExchangeRateResponseSchema = /*@__PURE__*/
  messageDesc(file_billing_billing, 46);

/**
 * Describes the message nocloud.billing.DeleteExchangeRateRequest.
 * Use `create(DeleteExchangeRateRequestSchema)` to create a new message.
 */
export const DeleteExchangeRateRequestSchema = /*@__PURE__*/
  messageDesc(file_billing_billing, 47);

/**
 * Describes the message nocloud.billing.DeleteExchangeRateResponse.
 * Use `create(DeleteExchangeRateResponseSchema)` to create a new message.
 */
export const DeleteExchangeRateResponseSchema = /*@__PURE__*/
  messageDesc(file_billing_billing, 48);

/**
 * Describes the message nocloud.billing.GetCurrenciesRequest.
 * Use `create(GetCurrenciesRequestSchema)` to create a new message.
 */
export const GetCurrenciesRequestSchema = /*@__PURE__*/
  messageDesc(file_billing_billing, 49);

/**
 * Describes the message nocloud.billing.GetCurrenciesResponse.
 * Use `create(GetCurrenciesResponseSchema)` to create a new message.
 */
export const GetCurrenciesResponseSchema = /*@__PURE__*/
  messageDesc(file_billing_billing, 50);

/**
 * Describes the message nocloud.billing.GetExchangeRateRequest.
 * Use `create(GetExchangeRateRequestSchema)` to create a new message.
 */
export const GetExchangeRateRequestSchema = /*@__PURE__*/
  messageDesc(file_billing_billing, 51);

/**
 * Describes the message nocloud.billing.GetExchangeRatesRequest.
 * Use `create(GetExchangeRatesRequestSchema)` to create a new message.
 */
export const GetExchangeRatesRequestSchema = /*@__PURE__*/
  messageDesc(file_billing_billing, 52);

/**
 * Describes the message nocloud.billing.GetExchangeRateResponse.
 * Use `create(GetExchangeRateResponseSchema)` to create a new message.
 */
export const GetExchangeRateResponseSchema = /*@__PURE__*/
  messageDesc(file_billing_billing, 53);

/**
 * Describes the message nocloud.billing.GetExchangeRatesResponse.
 * Use `create(GetExchangeRatesResponseSchema)` to create a new message.
 */
export const GetExchangeRatesResponseSchema = /*@__PURE__*/
  messageDesc(file_billing_billing, 54);

/**
 * Describes the message nocloud.billing.ConversionRequest.
 * Use `create(ConversionRequestSchema)` to create a new message.
 */
export const ConversionRequestSchema = /*@__PURE__*/
  messageDesc(file_billing_billing, 55);

/**
 * Describes the message nocloud.billing.ConversionResponse.
 * Use `create(ConversionResponseSchema)` to create a new message.
 */
export const ConversionResponseSchema = /*@__PURE__*/
  messageDesc(file_billing_billing, 56);

/**
 * Describes the enum nocloud.billing.PlanKind.
 */
export const PlanKindSchema = /*@__PURE__*/
  enumDesc(file_billing_billing, 0);

/**
 * @generated from enum nocloud.billing.PlanKind
 */
export const PlanKind = /*@__PURE__*/
  tsEnum(PlanKindSchema);

/**
 * Describes the enum nocloud.billing.Round.
 */
export const RoundSchema = /*@__PURE__*/
  enumDesc(file_billing_billing, 1);

/**
 * @generated from enum nocloud.billing.Round
 */
export const Round = /*@__PURE__*/
  tsEnum(RoundSchema);

/**
 * Describes the enum nocloud.billing.Kind.
 */
export const KindSchema = /*@__PURE__*/
  enumDesc(file_billing_billing, 2);

/**
 * @generated from enum nocloud.billing.Kind
 */
export const Kind = /*@__PURE__*/
  tsEnum(KindSchema);

/**
 * Describes the enum nocloud.billing.PeriodKind.
 */
export const PeriodKindSchema = /*@__PURE__*/
  enumDesc(file_billing_billing, 3);

/**
 * @generated from enum nocloud.billing.PeriodKind
 */
export const PeriodKind = /*@__PURE__*/
  tsEnum(PeriodKindSchema);

/**
 * Describes the enum nocloud.billing.Priority.
 */
export const PrioritySchema = /*@__PURE__*/
  enumDesc(file_billing_billing, 4);

/**
 * @generated from enum nocloud.billing.Priority
 */
export const Priority = /*@__PURE__*/
  tsEnum(PrioritySchema);

/**
 * Describes the enum nocloud.billing.BillingStatus.
 */
export const BillingStatusSchema = /*@__PURE__*/
  enumDesc(file_billing_billing, 5);

/**
 * @generated from enum nocloud.billing.BillingStatus
 */
export const BillingStatus = /*@__PURE__*/
  tsEnum(BillingStatusSchema);

/**
 * Describes the enum nocloud.billing.ActionType.
 */
export const ActionTypeSchema = /*@__PURE__*/
  enumDesc(file_billing_billing, 6);

/**
 * @generated from enum nocloud.billing.ActionType
 */
export const ActionType = /*@__PURE__*/
  tsEnum(ActionTypeSchema);

/**
 * @generated from service nocloud.billing.RecordsService
 */
export const RecordsService = /*@__PURE__*/
  serviceDesc(file_billing_billing, 0);

/**
 * @generated from service nocloud.billing.BillingService
 */
export const BillingService = /*@__PURE__*/
  serviceDesc(file_billing_billing, 1);

/**
 * @generated from service nocloud.billing.CurrencyService
 */
export const CurrencyService = /*@__PURE__*/
  serviceDesc(file_billing_billing, 2);

/**
 * @generated from service nocloud.billing.AddonsService
 */
export const AddonsService = /*@__PURE__*/
  serviceDesc(file_billing_billing, 3);

/**
 * @generated from service nocloud.billing.DescriptionsService
 */
export const DescriptionsService = /*@__PURE__*/
  serviceDesc(file_billing_billing, 4);

