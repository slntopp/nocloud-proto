// @generated by protoc-gen-es v2.0.0 with parameter "target=js+dts"
// @generated from file billing/addons/addons.proto (package nocloud.billing.addons, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";
import type { Value } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file billing/addons/addons.proto.
 */
export declare const file_billing_addons_addons: GenFile;

/**
 * @generated from message nocloud.billing.addons.Addon
 */
export declare type Addon = Message<"nocloud.billing.addons.Addon"> & {
  /**
   * @generated from field: string uuid = 1;
   */
  uuid: string;

  /**
   * @generated from field: string title = 2;
   */
  title: string;

  /**
   * @generated from field: bool public = 3;
   */
  public: boolean;

  /**
   * @generated from field: string group = 4;
   */
  group: string;

  /**
   * @generated from field: map<string, google.protobuf.Value> meta = 5;
   */
  meta: { [key: string]: Value };

  /**
   * @generated from field: string description_id = 6;
   */
  descriptionId: string;

  /**
   * @generated from field: map<int64, double> periods = 7;
   */
  periods: { [key: string]: number };

  /**
   * @generated from field: int64 created = 8;
   */
  created: bigint;

  /**
   * @generated from field: bool system = 9;
   */
  system: boolean;

  /**
   * @generated from field: nocloud.billing.addons.Kind kind = 10;
   */
  kind: Kind;
};

/**
 * Describes the message nocloud.billing.addons.Addon.
 * Use `create(AddonSchema)` to create a new message.
 */
export declare const AddonSchema: GenMessage<Addon>;

/**
 * @generated from message nocloud.billing.addons.BulkAddons
 */
export declare type BulkAddons = Message<"nocloud.billing.addons.BulkAddons"> & {
  /**
   * @generated from field: repeated nocloud.billing.addons.Addon addons = 1;
   */
  addons: Addon[];
};

/**
 * Describes the message nocloud.billing.addons.BulkAddons.
 * Use `create(BulkAddonsSchema)` to create a new message.
 */
export declare const BulkAddonsSchema: GenMessage<BulkAddons>;

/**
 * @generated from message nocloud.billing.addons.ListAddonsRequest
 */
export declare type ListAddonsRequest = Message<"nocloud.billing.addons.ListAddonsRequest"> & {
  /**
   * @generated from field: optional uint64 page = 1;
   */
  page?: bigint;

  /**
   * @generated from field: optional uint64 limit = 2;
   */
  limit?: bigint;

  /**
   * @generated from field: optional string field = 3;
   */
  field?: string;

  /**
   * @generated from field: optional string sort = 4;
   */
  sort?: string;

  /**
   * @generated from field: map<string, google.protobuf.Value> filters = 5;
   */
  filters: { [key: string]: Value };
};

/**
 * Describes the message nocloud.billing.addons.ListAddonsRequest.
 * Use `create(ListAddonsRequestSchema)` to create a new message.
 */
export declare const ListAddonsRequestSchema: GenMessage<ListAddonsRequest>;

/**
 * @generated from message nocloud.billing.addons.CountAddonsRequest
 */
export declare type CountAddonsRequest = Message<"nocloud.billing.addons.CountAddonsRequest"> & {
  /**
   * @generated from field: map<string, google.protobuf.Value> filters = 1;
   */
  filters: { [key: string]: Value };
};

/**
 * Describes the message nocloud.billing.addons.CountAddonsRequest.
 * Use `create(CountAddonsRequestSchema)` to create a new message.
 */
export declare const CountAddonsRequestSchema: GenMessage<CountAddonsRequest>;

/**
 * @generated from message nocloud.billing.addons.CountAddonsResponse
 */
export declare type CountAddonsResponse = Message<"nocloud.billing.addons.CountAddonsResponse"> & {
  /**
   * @generated from field: int64 total = 1;
   */
  total: bigint;

  /**
   * @generated from field: google.protobuf.Value unique = 2;
   */
  unique?: Value;
};

/**
 * Describes the message nocloud.billing.addons.CountAddonsResponse.
 * Use `create(CountAddonsResponseSchema)` to create a new message.
 */
export declare const CountAddonsResponseSchema: GenMessage<CountAddonsResponse>;

/**
 * @generated from message nocloud.billing.addons.ListAddonsResponse
 */
export declare type ListAddonsResponse = Message<"nocloud.billing.addons.ListAddonsResponse"> & {
  /**
   * @generated from field: repeated nocloud.billing.addons.Addon addons = 1;
   */
  addons: Addon[];
};

/**
 * Describes the message nocloud.billing.addons.ListAddonsResponse.
 * Use `create(ListAddonsResponseSchema)` to create a new message.
 */
export declare const ListAddonsResponseSchema: GenMessage<ListAddonsResponse>;

/**
 * @generated from enum nocloud.billing.addons.Kind
 */
export enum Kind {
  /**
   * Shall never be used, requests will be rejected
   *
   * @generated from enum value: UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Transaction must be processed based on End time
   *
   * @generated from enum value: POSTPAID = 1;
   */
  POSTPAID = 1,

  /**
   * Transaction must be processed based on Start time
   *
   * @generated from enum value: PREPAID = 2;
   */
  PREPAID = 2,
}

/**
 * Describes the enum nocloud.billing.addons.Kind.
 */
export declare const KindSchema: GenEnum<Kind>;

