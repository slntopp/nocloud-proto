//
//Copyright Â© 2021-2023 Nikita Ivanovski info@slnt-opp.xyz
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// @generated by protoc-gen-es v1.10.0 with parameter "target=js+dts"
// @generated from file dns/dns.proto (package nocloud.dns, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message nocloud.dns.Record
 */
export const Record = /*@__PURE__*/ proto3.makeMessageType(
  "nocloud.dns.Record",
  () => [
    { no: 1, name: "a", kind: "message", T: Record_A, repeated: true },
    { no: 2, name: "aaaa", kind: "message", T: Record_AAAA, repeated: true },
    { no: 3, name: "cname", kind: "message", T: Record_CNAME, repeated: true },
    { no: 4, name: "txt", kind: "message", T: Record_TXT, repeated: true },
  ],
);

/**
 * @generated from message nocloud.dns.Record.A
 */
export const Record_A = /*@__PURE__*/ proto3.makeMessageType(
  "nocloud.dns.Record.A",
  () => [
    { no: 1, name: "ip", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "ttl", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ],
  {localName: "Record_A"},
);

/**
 * @generated from message nocloud.dns.Record.AAAA
 */
export const Record_AAAA = /*@__PURE__*/ proto3.makeMessageType(
  "nocloud.dns.Record.AAAA",
  () => [
    { no: 1, name: "ip", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "ttl", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ],
  {localName: "Record_AAAA"},
);

/**
 * @generated from message nocloud.dns.Record.CNAME
 */
export const Record_CNAME = /*@__PURE__*/ proto3.makeMessageType(
  "nocloud.dns.Record.CNAME",
  () => [
    { no: 1, name: "host", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "ttl", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ],
  {localName: "Record_CNAME"},
);

/**
 * @generated from message nocloud.dns.Record.TXT
 */
export const Record_TXT = /*@__PURE__*/ proto3.makeMessageType(
  "nocloud.dns.Record.TXT",
  () => [
    { no: 1, name: "text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "ttl", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ],
  {localName: "Record_TXT"},
);

/**
 * @generated from message nocloud.dns.Zone
 */
export const Zone = /*@__PURE__*/ proto3.makeMessageType(
  "nocloud.dns.Zone",
  () => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "locations", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "message", T: Record} },
  ],
);

/**
 * @generated from message nocloud.dns.ListRequest
 */
export const ListRequest = /*@__PURE__*/ proto3.makeMessageType(
  "nocloud.dns.ListRequest",
  [],
);

/**
 * @generated from message nocloud.dns.ListResponse
 */
export const ListResponse = /*@__PURE__*/ proto3.makeMessageType(
  "nocloud.dns.ListResponse",
  () => [
    { no: 1, name: "zones", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ],
);

/**
 * @generated from message nocloud.dns.Result
 */
export const Result = /*@__PURE__*/ proto3.makeMessageType(
  "nocloud.dns.Result",
  () => [
    { no: 1, name: "result", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ],
);

