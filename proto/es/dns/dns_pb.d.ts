//
//Copyright Â© 2021-2023 Nikita Ivanovski info@slnt-opp.xyz
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// @generated by protoc-gen-es v2.0.0 with parameter "target=js+dts"
// @generated from file dns/dns.proto (package nocloud.dns, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file dns/dns.proto.
 */
export declare const file_dns_dns: GenFile;

/**
 * @generated from message nocloud.dns.Record
 */
export declare type Record = Message<"nocloud.dns.Record"> & {
  /**
   * @generated from field: repeated nocloud.dns.Record.A a = 1;
   */
  a: Record_A[];

  /**
   * @generated from field: repeated nocloud.dns.Record.AAAA aaaa = 2;
   */
  aaaa: Record_AAAA[];

  /**
   * @generated from field: repeated nocloud.dns.Record.CNAME cname = 3;
   */
  cname: Record_CNAME[];

  /**
   * @generated from field: repeated nocloud.dns.Record.TXT txt = 4;
   */
  txt: Record_TXT[];
};

/**
 * Describes the message nocloud.dns.Record.
 * Use `create(RecordSchema)` to create a new message.
 */
export declare const RecordSchema: GenMessage<Record>;

/**
 * @generated from message nocloud.dns.Record.A
 */
export declare type Record_A = Message<"nocloud.dns.Record.A"> & {
  /**
   * @generated from field: string ip = 1;
   */
  ip: string;

  /**
   * @generated from field: int32 ttl = 2;
   */
  ttl: number;
};

/**
 * Describes the message nocloud.dns.Record.A.
 * Use `create(Record_ASchema)` to create a new message.
 */
export declare const Record_ASchema: GenMessage<Record_A>;

/**
 * @generated from message nocloud.dns.Record.AAAA
 */
export declare type Record_AAAA = Message<"nocloud.dns.Record.AAAA"> & {
  /**
   * @generated from field: string ip = 1;
   */
  ip: string;

  /**
   * @generated from field: int32 ttl = 2;
   */
  ttl: number;
};

/**
 * Describes the message nocloud.dns.Record.AAAA.
 * Use `create(Record_AAAASchema)` to create a new message.
 */
export declare const Record_AAAASchema: GenMessage<Record_AAAA>;

/**
 * @generated from message nocloud.dns.Record.CNAME
 */
export declare type Record_CNAME = Message<"nocloud.dns.Record.CNAME"> & {
  /**
   * @generated from field: string host = 1;
   */
  host: string;

  /**
   * @generated from field: int32 ttl = 2;
   */
  ttl: number;
};

/**
 * Describes the message nocloud.dns.Record.CNAME.
 * Use `create(Record_CNAMESchema)` to create a new message.
 */
export declare const Record_CNAMESchema: GenMessage<Record_CNAME>;

/**
 * @generated from message nocloud.dns.Record.TXT
 */
export declare type Record_TXT = Message<"nocloud.dns.Record.TXT"> & {
  /**
   * @generated from field: string text = 1;
   */
  text: string;

  /**
   * @generated from field: int32 ttl = 2;
   */
  ttl: number;
};

/**
 * Describes the message nocloud.dns.Record.TXT.
 * Use `create(Record_TXTSchema)` to create a new message.
 */
export declare const Record_TXTSchema: GenMessage<Record_TXT>;

/**
 * @generated from message nocloud.dns.Zone
 */
export declare type Zone = Message<"nocloud.dns.Zone"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: map<string, nocloud.dns.Record> locations = 2;
   */
  locations: { [key: string]: Record };
};

/**
 * Describes the message nocloud.dns.Zone.
 * Use `create(ZoneSchema)` to create a new message.
 */
export declare const ZoneSchema: GenMessage<Zone>;

/**
 * @generated from message nocloud.dns.ListRequest
 */
export declare type ListRequest = Message<"nocloud.dns.ListRequest"> & {
};

/**
 * Describes the message nocloud.dns.ListRequest.
 * Use `create(ListRequestSchema)` to create a new message.
 */
export declare const ListRequestSchema: GenMessage<ListRequest>;

/**
 * @generated from message nocloud.dns.ListResponse
 */
export declare type ListResponse = Message<"nocloud.dns.ListResponse"> & {
  /**
   * @generated from field: repeated string zones = 1;
   */
  zones: string[];
};

/**
 * Describes the message nocloud.dns.ListResponse.
 * Use `create(ListResponseSchema)` to create a new message.
 */
export declare const ListResponseSchema: GenMessage<ListResponse>;

/**
 * @generated from message nocloud.dns.Result
 */
export declare type Result = Message<"nocloud.dns.Result"> & {
  /**
   * @generated from field: int64 result = 1;
   */
  result: bigint;
};

/**
 * Describes the message nocloud.dns.Result.
 * Use `create(ResultSchema)` to create a new message.
 */
export declare const ResultSchema: GenMessage<Result>;

/**
 * @generated from service nocloud.dns.DNS
 */
export declare const DNS: GenService<{
  /**
   * @generated from rpc nocloud.dns.DNS.Get
   */
  get: {
    methodKind: "unary";
    input: typeof ZoneSchema;
    output: typeof ZoneSchema;
  },
  /**
   * @generated from rpc nocloud.dns.DNS.List
   */
  list: {
    methodKind: "unary";
    input: typeof ListRequestSchema;
    output: typeof ListResponseSchema;
  },
  /**
   * @generated from rpc nocloud.dns.DNS.Put
   */
  put: {
    methodKind: "unary";
    input: typeof ZoneSchema;
    output: typeof ResultSchema;
  },
  /**
   * @generated from rpc nocloud.dns.DNS.Delete
   */
  delete: {
    methodKind: "unary";
    input: typeof ZoneSchema;
    output: typeof ResultSchema;
  },
}>;

