//
//Copyright Â© 2021-2023 Nikita Ivanovski info@slnt-opp.xyz
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// @generated by protoc-gen-es v2.0.0 with parameter "target=js+dts"
// @generated from file services/services.proto (package nocloud.services, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";
import type { NoCloudStatus } from "../statuses/statuses_pb";
import type { Value } from "@bufbuild/protobuf/wkt";
import type { InstancesGroup } from "../instances/instances_pb";
import type { Access } from "../access/access_pb";
import type { ObjectStateSchema } from "../states/states_pb";

/**
 * Describes the file services/services.proto.
 */
export declare const file_services_services: GenFile;

/**
 * @generated from message nocloud.services.Service
 */
export declare type Service = Message<"nocloud.services.Service"> & {
  /**
   * @generated from field: string uuid = 1;
   */
  uuid: string;

  /**
   * @generated from field: string version = 2;
   */
  version: string;

  /**
   * @generated from field: string title = 3;
   */
  title: string;

  /**
   * @generated from field: nocloud.statuses.NoCloudStatus status = 4;
   */
  status: NoCloudStatus;

  /**
   * @generated from field: map<string, google.protobuf.Value> context = 5;
   */
  context: { [key: string]: Value };

  /**
   * @generated from field: repeated nocloud.instances.InstancesGroup instances_groups = 6;
   */
  instancesGroups: InstancesGroup[];

  /**
   * @generated from field: string hash = 7;
   */
  hash: string;

  /**
   * @generated from field: optional nocloud.access.Access access = 8;
   */
  access?: Access;
};

/**
 * Describes the message nocloud.services.Service.
 * Use `create(ServiceSchema)` to create a new message.
 */
export declare const ServiceSchema: GenMessage<Service>;

/**
 * @generated from message nocloud.services.Services
 */
export declare type Services = Message<"nocloud.services.Services"> & {
  /**
   * @generated from field: repeated nocloud.services.Service pool = 1;
   */
  pool: Service[];

  /**
   * @generated from field: int64 count = 2;
   */
  count: bigint;
};

/**
 * Describes the message nocloud.services.Services.
 * Use `create(ServicesSchema)` to create a new message.
 */
export declare const ServicesSchema: GenMessage<Services>;

/**
 * @generated from message nocloud.services.TestConfigError
 */
export declare type TestConfigError = Message<"nocloud.services.TestConfigError"> & {
  /**
   * @generated from field: string error = 1;
   */
  error: string;

  /**
   * @generated from field: string instance_group = 2;
   */
  instanceGroup: string;

  /**
   * @generated from field: string instance = 3;
   */
  instance: string;
};

/**
 * Describes the message nocloud.services.TestConfigError.
 * Use `create(TestConfigErrorSchema)` to create a new message.
 */
export declare const TestConfigErrorSchema: GenMessage<TestConfigError>;

/**
 * @generated from message nocloud.services.TestConfigResponse
 */
export declare type TestConfigResponse = Message<"nocloud.services.TestConfigResponse"> & {
  /**
   * @generated from field: bool result = 1;
   */
  result: boolean;

  /**
   * @generated from field: repeated nocloud.services.TestConfigError errors = 2;
   */
  errors: TestConfigError[];
};

/**
 * Describes the message nocloud.services.TestConfigResponse.
 * Use `create(TestConfigResponseSchema)` to create a new message.
 */
export declare const TestConfigResponseSchema: GenMessage<TestConfigResponse>;

/**
 * @generated from message nocloud.services.CreateRequest
 */
export declare type CreateRequest = Message<"nocloud.services.CreateRequest"> & {
  /**
   * @generated from field: nocloud.services.Service service = 1;
   */
  service?: Service;

  /**
   * @generated from field: string namespace = 2;
   */
  namespace: string;
};

/**
 * Describes the message nocloud.services.CreateRequest.
 * Use `create(CreateRequestSchema)` to create a new message.
 */
export declare const CreateRequestSchema: GenMessage<CreateRequest>;

/**
 * @generated from message nocloud.services.DeleteRequest
 */
export declare type DeleteRequest = Message<"nocloud.services.DeleteRequest"> & {
  /**
   * @generated from field: string uuid = 1;
   */
  uuid: string;
};

/**
 * Describes the message nocloud.services.DeleteRequest.
 * Use `create(DeleteRequestSchema)` to create a new message.
 */
export declare const DeleteRequestSchema: GenMessage<DeleteRequest>;

/**
 * @generated from message nocloud.services.DeleteResponse
 */
export declare type DeleteResponse = Message<"nocloud.services.DeleteResponse"> & {
  /**
   * @generated from field: bool result = 1;
   */
  result: boolean;

  /**
   * @generated from field: string error = 2;
   */
  error: string;
};

/**
 * Describes the message nocloud.services.DeleteResponse.
 * Use `create(DeleteResponseSchema)` to create a new message.
 */
export declare const DeleteResponseSchema: GenMessage<DeleteResponse>;

/**
 * @generated from message nocloud.services.UpRequest
 */
export declare type UpRequest = Message<"nocloud.services.UpRequest"> & {
  /**
   * @generated from field: string uuid = 1;
   */
  uuid: string;
};

/**
 * Describes the message nocloud.services.UpRequest.
 * Use `create(UpRequestSchema)` to create a new message.
 */
export declare const UpRequestSchema: GenMessage<UpRequest>;

/**
 * @generated from message nocloud.services.UpError
 */
export declare type UpError = Message<"nocloud.services.UpError"> & {
  /**
   * @generated from field: map<string, string> data = 1;
   */
  data: { [key: string]: string };
};

/**
 * Describes the message nocloud.services.UpError.
 * Use `create(UpErrorSchema)` to create a new message.
 */
export declare const UpErrorSchema: GenMessage<UpError>;

/**
 * @generated from message nocloud.services.UpResponse
 */
export declare type UpResponse = Message<"nocloud.services.UpResponse"> & {
  /**
   * @generated from field: repeated nocloud.services.UpError errors = 1;
   */
  errors: UpError[];
};

/**
 * Describes the message nocloud.services.UpResponse.
 * Use `create(UpResponseSchema)` to create a new message.
 */
export declare const UpResponseSchema: GenMessage<UpResponse>;

/**
 * @generated from message nocloud.services.DownRequest
 */
export declare type DownRequest = Message<"nocloud.services.DownRequest"> & {
  /**
   * @generated from field: string uuid = 1;
   */
  uuid: string;
};

/**
 * Describes the message nocloud.services.DownRequest.
 * Use `create(DownRequestSchema)` to create a new message.
 */
export declare const DownRequestSchema: GenMessage<DownRequest>;

/**
 * @generated from message nocloud.services.DownResponse
 */
export declare type DownResponse = Message<"nocloud.services.DownResponse"> & {
};

/**
 * Describes the message nocloud.services.DownResponse.
 * Use `create(DownResponseSchema)` to create a new message.
 */
export declare const DownResponseSchema: GenMessage<DownResponse>;

/**
 * @generated from message nocloud.services.ListRequest
 */
export declare type ListRequest = Message<"nocloud.services.ListRequest"> & {
  /**
   * @generated from field: optional bool show_deleted = 1;
   */
  showDeleted?: boolean;

  /**
   * @generated from field: optional string namespace = 2;
   */
  namespace?: string;

  /**
   * @generated from field: optional int32 depth = 3;
   */
  depth?: number;

  /**
   * @generated from field: optional uint64 page = 4;
   */
  page?: bigint;

  /**
   * @generated from field: optional uint64 limit = 5;
   */
  limit?: bigint;

  /**
   * @generated from field: optional string field = 6;
   */
  field?: string;

  /**
   * @generated from field: optional string sort = 7;
   */
  sort?: string;

  /**
   * @generated from field: map<string, google.protobuf.Value> filters = 8;
   */
  filters: { [key: string]: Value };
};

/**
 * Describes the message nocloud.services.ListRequest.
 * Use `create(ListRequestSchema)` to create a new message.
 */
export declare const ListRequestSchema: GenMessage<ListRequest>;

/**
 * @generated from message nocloud.services.GetRequest
 */
export declare type GetRequest = Message<"nocloud.services.GetRequest"> & {
  /**
   * @generated from field: string uuid = 1;
   */
  uuid: string;

  /**
   * @generated from field: optional string show_deleted = 2;
   */
  showDeleted?: string;
};

/**
 * Describes the message nocloud.services.GetRequest.
 * Use `create(GetRequestSchema)` to create a new message.
 */
export declare const GetRequestSchema: GenMessage<GetRequest>;

/**
 * @generated from message nocloud.services.GetStatesRequest
 */
export declare type GetStatesRequest = Message<"nocloud.services.GetStatesRequest"> & {
  /**
   * Service UUID
   *
   * @generated from field: string uuid = 1;
   */
  uuid: string;
};

/**
 * Describes the message nocloud.services.GetStatesRequest.
 * Use `create(GetStatesRequestSchema)` to create a new message.
 */
export declare const GetStatesRequestSchema: GenMessage<GetStatesRequest>;

/**
 * @generated from message nocloud.services.StreamRequest
 */
export declare type StreamRequest = Message<"nocloud.services.StreamRequest"> & {
  /**
   * @generated from field: string uuid = 1;
   */
  uuid: string;
};

/**
 * Describes the message nocloud.services.StreamRequest.
 * Use `create(StreamRequestSchema)` to create a new message.
 */
export declare const StreamRequestSchema: GenMessage<StreamRequest>;

/**
 * @generated from message nocloud.services.SuspendRequest
 */
export declare type SuspendRequest = Message<"nocloud.services.SuspendRequest"> & {
  /**
   * @generated from field: string uuid = 1;
   */
  uuid: string;
};

/**
 * Describes the message nocloud.services.SuspendRequest.
 * Use `create(SuspendRequestSchema)` to create a new message.
 */
export declare const SuspendRequestSchema: GenMessage<SuspendRequest>;

/**
 * @generated from message nocloud.services.UnsuspendRequest
 */
export declare type UnsuspendRequest = Message<"nocloud.services.UnsuspendRequest"> & {
  /**
   * @generated from field: string uuid = 1;
   */
  uuid: string;
};

/**
 * Describes the message nocloud.services.UnsuspendRequest.
 * Use `create(UnsuspendRequestSchema)` to create a new message.
 */
export declare const UnsuspendRequestSchema: GenMessage<UnsuspendRequest>;

/**
 * @generated from message nocloud.services.SuspendResponse
 */
export declare type SuspendResponse = Message<"nocloud.services.SuspendResponse"> & {
};

/**
 * Describes the message nocloud.services.SuspendResponse.
 * Use `create(SuspendResponseSchema)` to create a new message.
 */
export declare const SuspendResponseSchema: GenMessage<SuspendResponse>;

/**
 * @generated from message nocloud.services.UnsuspendResponse
 */
export declare type UnsuspendResponse = Message<"nocloud.services.UnsuspendResponse"> & {
};

/**
 * Describes the message nocloud.services.UnsuspendResponse.
 * Use `create(UnsuspendResponseSchema)` to create a new message.
 */
export declare const UnsuspendResponseSchema: GenMessage<UnsuspendResponse>;

/**
 * @generated from service nocloud.services.ServicesService
 */
export declare const ServicesService: GenService<{
  /**
   * 
   * rpc TestConfig(nocloud.services.CreateRequest)
   * returns (nocloud.services.TestConfigResponse) {
   * option (google.api.http) = {
   * post : "/services"
   * body : "*"
   * };
   * };
   *
   * @generated from rpc nocloud.services.ServicesService.Create
   */
  create: {
    methodKind: "unary";
    input: typeof CreateRequestSchema;
    output: typeof ServiceSchema;
  },
  /**
   * @generated from rpc nocloud.services.ServicesService.Update
   */
  update: {
    methodKind: "unary";
    input: typeof ServiceSchema;
    output: typeof ServiceSchema;
  },
  /**
   * @generated from rpc nocloud.services.ServicesService.Delete
   */
  delete: {
    methodKind: "unary";
    input: typeof DeleteRequestSchema;
    output: typeof DeleteResponseSchema;
  },
  /**
   * @generated from rpc nocloud.services.ServicesService.Get
   */
  get: {
    methodKind: "unary";
    input: typeof GetRequestSchema;
    output: typeof ServiceSchema;
  },
  /**
   * @generated from rpc nocloud.services.ServicesService.List
   */
  list: {
    methodKind: "unary";
    input: typeof ListRequestSchema;
    output: typeof ServicesSchema;
  },
  /**
   * @generated from rpc nocloud.services.ServicesService.Up
   */
  up: {
    methodKind: "unary";
    input: typeof UpRequestSchema;
    output: typeof UpResponseSchema;
  },
  /**
   * @generated from rpc nocloud.services.ServicesService.Down
   */
  down: {
    methodKind: "unary";
    input: typeof DownRequestSchema;
    output: typeof DownResponseSchema;
  },
  /**
   * @generated from rpc nocloud.services.ServicesService.Suspend
   */
  suspend: {
    methodKind: "unary";
    input: typeof SuspendRequestSchema;
    output: typeof SuspendResponseSchema;
  },
  /**
   * @generated from rpc nocloud.services.ServicesService.Unsuspend
   */
  unsuspend: {
    methodKind: "unary";
    input: typeof UnsuspendRequestSchema;
    output: typeof UnsuspendResponseSchema;
  },
  /**
   * @generated from rpc nocloud.services.ServicesService.Stream
   */
  stream: {
    methodKind: "server_streaming";
    input: typeof StreamRequestSchema;
    output: typeof ObjectStateSchema;
  },
}>;

