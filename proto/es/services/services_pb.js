//
//Copyright Â© 2021-2023 Nikita Ivanovski info@slnt-opp.xyz
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// @generated by protoc-gen-es v1.7.2 with parameter "target=js+dts"
// @generated from file services/services.proto (package nocloud.services, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3, Value } from "@bufbuild/protobuf";
import { NoCloudStatus } from "../statuses/statuses_pb.js";
import { InstancesGroup } from "../instances/instances_pb.js";
import { Access } from "../access/access_pb.js";

/**
 * @generated from message nocloud.services.Service
 */
export const Service = proto3.makeMessageType(
  "nocloud.services.Service",
  () => [
    { no: 1, name: "uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "version", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "status", kind: "enum", T: proto3.getEnumType(NoCloudStatus) },
    { no: 5, name: "context", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "message", T: Value} },
    { no: 6, name: "instances_groups", kind: "message", T: InstancesGroup, repeated: true },
    { no: 7, name: "hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "access", kind: "message", T: Access, opt: true },
  ],
);

/**
 * @generated from message nocloud.services.Services
 */
export const Services = proto3.makeMessageType(
  "nocloud.services.Services",
  () => [
    { no: 1, name: "pool", kind: "message", T: Service, repeated: true },
  ],
);

/**
 * @generated from message nocloud.services.TestConfigError
 */
export const TestConfigError = proto3.makeMessageType(
  "nocloud.services.TestConfigError",
  () => [
    { no: 1, name: "error", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "instance_group", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "instance", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message nocloud.services.TestConfigResponse
 */
export const TestConfigResponse = proto3.makeMessageType(
  "nocloud.services.TestConfigResponse",
  () => [
    { no: 1, name: "result", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "errors", kind: "message", T: TestConfigError, repeated: true },
  ],
);

/**
 * @generated from message nocloud.services.CreateRequest
 */
export const CreateRequest = proto3.makeMessageType(
  "nocloud.services.CreateRequest",
  () => [
    { no: 1, name: "service", kind: "message", T: Service },
    { no: 2, name: "namespace", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message nocloud.services.DeleteRequest
 */
export const DeleteRequest = proto3.makeMessageType(
  "nocloud.services.DeleteRequest",
  () => [
    { no: 1, name: "uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message nocloud.services.DeleteResponse
 */
export const DeleteResponse = proto3.makeMessageType(
  "nocloud.services.DeleteResponse",
  () => [
    { no: 1, name: "result", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "error", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message nocloud.services.UpRequest
 */
export const UpRequest = proto3.makeMessageType(
  "nocloud.services.UpRequest",
  () => [
    { no: 1, name: "uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message nocloud.services.UpError
 */
export const UpError = proto3.makeMessageType(
  "nocloud.services.UpError",
  () => [
    { no: 1, name: "data", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
  ],
);

/**
 * @generated from message nocloud.services.UpResponse
 */
export const UpResponse = proto3.makeMessageType(
  "nocloud.services.UpResponse",
  () => [
    { no: 1, name: "errors", kind: "message", T: UpError, repeated: true },
  ],
);

/**
 * @generated from message nocloud.services.DownRequest
 */
export const DownRequest = proto3.makeMessageType(
  "nocloud.services.DownRequest",
  () => [
    { no: 1, name: "uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message nocloud.services.DownResponse
 */
export const DownResponse = proto3.makeMessageType(
  "nocloud.services.DownResponse",
  [],
);

/**
 * @generated from message nocloud.services.ListRequest
 */
export const ListRequest = proto3.makeMessageType(
  "nocloud.services.ListRequest",
  () => [
    { no: 1, name: "show_deleted", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "namespace", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "depth", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ],
);

/**
 * @generated from message nocloud.services.GetRequest
 */
export const GetRequest = proto3.makeMessageType(
  "nocloud.services.GetRequest",
  () => [
    { no: 1, name: "uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "show_deleted", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ],
);

/**
 * @generated from message nocloud.services.GetStatesRequest
 */
export const GetStatesRequest = proto3.makeMessageType(
  "nocloud.services.GetStatesRequest",
  () => [
    { no: 1, name: "uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message nocloud.services.StreamRequest
 */
export const StreamRequest = proto3.makeMessageType(
  "nocloud.services.StreamRequest",
  () => [
    { no: 1, name: "uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message nocloud.services.SuspendRequest
 */
export const SuspendRequest = proto3.makeMessageType(
  "nocloud.services.SuspendRequest",
  () => [
    { no: 1, name: "uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message nocloud.services.UnsuspendRequest
 */
export const UnsuspendRequest = proto3.makeMessageType(
  "nocloud.services.UnsuspendRequest",
  () => [
    { no: 1, name: "uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message nocloud.services.SuspendResponse
 */
export const SuspendResponse = proto3.makeMessageType(
  "nocloud.services.SuspendResponse",
  [],
);

/**
 * @generated from message nocloud.services.UnsuspendResponse
 */
export const UnsuspendResponse = proto3.makeMessageType(
  "nocloud.services.UnsuspendResponse",
  [],
);

