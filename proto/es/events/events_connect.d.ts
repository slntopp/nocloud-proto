//
//Copyright Â© 2021-2023 Nikita Ivanovski info@slnt-opp.xyz
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// @generated by protoc-gen-connect-es v1.4.0 with parameter "target=js+dts"
// @generated from file events/events.proto (package nocloud.events, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { CancelRequest, ConsumeRequest, Event, Events, Response } from "./events_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service nocloud.events.EventsService
 */
export declare const EventsService: {
  readonly typeName: "nocloud.events.EventsService",
  readonly methods: {
    /**
     * @generated from rpc nocloud.events.EventsService.Publish
     */
    readonly publish: {
      readonly name: "Publish",
      readonly I: typeof Event,
      readonly O: typeof Response,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc nocloud.events.EventsService.Consume
     */
    readonly consume: {
      readonly name: "Consume",
      readonly I: typeof ConsumeRequest,
      readonly O: typeof Event,
      readonly kind: MethodKind.ServerStreaming,
    },
    /**
     * @generated from rpc nocloud.events.EventsService.List
     */
    readonly list: {
      readonly name: "List",
      readonly I: typeof ConsumeRequest,
      readonly O: typeof Events,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc nocloud.events.EventsService.Cancel
     */
    readonly cancel: {
      readonly name: "Cancel",
      readonly I: typeof CancelRequest,
      readonly O: typeof Response,
      readonly kind: MethodKind.Unary,
    },
  }
};

