//
//Copyright Â© 2021-2023 Nikita Ivanovski info@slnt-opp.xyz
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// @generated by protoc-gen-es v1.10.0 with parameter "target=js+dts"
// @generated from file events/events.proto (package nocloud.events, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Value } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from enum nocloud.events.ResultStatus
 */
export declare enum ResultStatus {
  /**
   * @generated from enum value: ACK = 0;
   */
  ACK = 0,

  /**
   * @generated from enum value: NACK = 1;
   */
  NACK = 1,
}

/**
 * @generated from message nocloud.events.Event
 */
export declare class Event extends Message<Event> {
  /**
   * @generated from field: string type = 1;
   */
  type: string;

  /**
   * Entity uuid e.g. Account, Instance
   *
   * @generated from field: string uuid = 2;
   */
  uuid: string;

  /**
   * Event id
   *
   * @generated from field: string id = 3;
   */
  id: string;

  /**
   * @generated from field: string key = 4;
   */
  key: string;

  /**
   * @generated from field: map<string, google.protobuf.Value> data = 5;
   */
  data: { [key: string]: Value };

  /**
   * @generated from field: int64 ts = 6;
   */
  ts: bigint;

  /**
   * 0 - unspecified priority(lowest one), 1 - highest priority
   *
   * @generated from field: int32 priority = 7;
   */
  priority: number;

  constructor(data?: PartialMessage<Event>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.events.Event";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Event;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Event;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Event;

  static equals(a: Event | PlainMessage<Event> | undefined, b: Event | PlainMessage<Event> | undefined): boolean;
}

/**
 * @generated from message nocloud.events.Events
 */
export declare class Events extends Message<Events> {
  /**
   * @generated from field: repeated nocloud.events.Event events = 1;
   */
  events: Event[];

  constructor(data?: PartialMessage<Events>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.events.Events";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Events;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Events;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Events;

  static equals(a: Events | PlainMessage<Events> | undefined, b: Events | PlainMessage<Events> | undefined): boolean;
}

/**
 * @generated from message nocloud.events.ConsumeRequest
 */
export declare class ConsumeRequest extends Message<ConsumeRequest> {
  /**
   * @generated from field: string type = 1;
   */
  type: string;

  /**
   * @generated from field: string uuid = 2;
   */
  uuid: string;

  constructor(data?: PartialMessage<ConsumeRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.events.ConsumeRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConsumeRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConsumeRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConsumeRequest;

  static equals(a: ConsumeRequest | PlainMessage<ConsumeRequest> | undefined, b: ConsumeRequest | PlainMessage<ConsumeRequest> | undefined): boolean;
}

/**
 * @generated from message nocloud.events.CancelRequest
 */
export declare class CancelRequest extends Message<CancelRequest> {
  /**
   * @generated from field: string type = 1;
   */
  type: string;

  /**
   * @generated from field: string uuid = 2;
   */
  uuid: string;

  /**
   * @generated from field: string id = 3;
   */
  id: string;

  constructor(data?: PartialMessage<CancelRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.events.CancelRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CancelRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CancelRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CancelRequest;

  static equals(a: CancelRequest | PlainMessage<CancelRequest> | undefined, b: CancelRequest | PlainMessage<CancelRequest> | undefined): boolean;
}

/**
 * @generated from message nocloud.events.Response
 */
export declare class Response extends Message<Response> {
  constructor(data?: PartialMessage<Response>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.events.Response";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Response;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Response;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Response;

  static equals(a: Response | PlainMessage<Response> | undefined, b: Response | PlainMessage<Response> | undefined): boolean;
}

/**
 * v2
 *
 * @generated from message nocloud.events.SubscribeOptions
 */
export declare class SubscribeOptions extends Message<SubscribeOptions> {
  /**
   * @generated from field: bool auto_ack = 1;
   */
  autoAck: boolean;

  constructor(data?: PartialMessage<SubscribeOptions>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.events.SubscribeOptions";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SubscribeOptions;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SubscribeOptions;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SubscribeOptions;

  static equals(a: SubscribeOptions | PlainMessage<SubscribeOptions> | undefined, b: SubscribeOptions | PlainMessage<SubscribeOptions> | undefined): boolean;
}

/**
 * @generated from message nocloud.events.Subscription
 */
export declare class Subscription extends Message<Subscription> {
  /**
   * @generated from field: string type = 1;
   */
  type: string;

  /**
   * @generated from field: string uuid = 2;
   */
  uuid: string;

  /**
   * @generated from field: optional nocloud.events.SubscribeOptions options = 3;
   */
  options?: SubscribeOptions;

  constructor(data?: PartialMessage<Subscription>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.events.Subscription";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Subscription;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Subscription;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Subscription;

  static equals(a: Subscription | PlainMessage<Subscription> | undefined, b: Subscription | PlainMessage<Subscription> | undefined): boolean;
}

/**
 * @generated from message nocloud.events.ResultNotify
 */
export declare class ResultNotify extends Message<ResultNotify> {
  /**
   * @generated from field: string event_id = 1;
   */
  eventId: string;

  /**
   * @generated from field: string ack_type = 2;
   */
  ackType: string;

  constructor(data?: PartialMessage<ResultNotify>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.events.ResultNotify";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResultNotify;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResultNotify;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResultNotify;

  static equals(a: ResultNotify | PlainMessage<ResultNotify> | undefined, b: ResultNotify | PlainMessage<ResultNotify> | undefined): boolean;
}

/**
 * @generated from message nocloud.events.SubscribeRequest
 */
export declare class SubscribeRequest extends Message<SubscribeRequest> {
  /**
   * @generated from field: optional nocloud.events.Subscription sub = 1;
   */
  sub?: Subscription;

  /**
   * @generated from field: optional nocloud.events.ResultNotify notify = 2;
   */
  notify?: ResultNotify;

  constructor(data?: PartialMessage<SubscribeRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.events.SubscribeRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SubscribeRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SubscribeRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SubscribeRequest;

  static equals(a: SubscribeRequest | PlainMessage<SubscribeRequest> | undefined, b: SubscribeRequest | PlainMessage<SubscribeRequest> | undefined): boolean;
}

/**
 * @generated from message nocloud.events.PublishOptions
 */
export declare class PublishOptions extends Message<PublishOptions> {
  /**
   * @generated from field: int64 ttl = 1;
   */
  ttl: bigint;

  /**
   * Here should be retries policy and so on
   *
   * @generated from field: bool no_dlx = 2;
   */
  noDlx: boolean;

  constructor(data?: PartialMessage<PublishOptions>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.events.PublishOptions";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PublishOptions;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PublishOptions;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PublishOptions;

  static equals(a: PublishOptions | PlainMessage<PublishOptions> | undefined, b: PublishOptions | PlainMessage<PublishOptions> | undefined): boolean;
}

/**
 * @generated from message nocloud.events.PublishEventRequest
 */
export declare class PublishEventRequest extends Message<PublishEventRequest> {
  /**
   * @generated from field: nocloud.events.Event event = 1;
   */
  event?: Event;

  /**
   * @generated from field: optional nocloud.events.PublishOptions options = 2;
   */
  options?: PublishOptions;

  constructor(data?: PartialMessage<PublishEventRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.events.PublishEventRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PublishEventRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PublishEventRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PublishEventRequest;

  static equals(a: PublishEventRequest | PlainMessage<PublishEventRequest> | undefined, b: PublishEventRequest | PlainMessage<PublishEventRequest> | undefined): boolean;
}

