//
//Copyright Â© 2021-2023 Nikita Ivanovski info@slnt-opp.xyz
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// @generated by protoc-gen-es v2.0.0 with parameter "target=js+dts"
// @generated from file events/events.proto (package nocloud.events, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";
import type { Value } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file events/events.proto.
 */
export declare const file_events_events: GenFile;

/**
 * @generated from message nocloud.events.Event
 */
export declare type Event = Message<"nocloud.events.Event"> & {
  /**
   * @generated from field: string type = 1;
   */
  type: string;

  /**
   * Entity uuid e.g. Account, Instance
   *
   * @generated from field: string uuid = 2;
   */
  uuid: string;

  /**
   * Event id
   *
   * @generated from field: string id = 3;
   */
  id: string;

  /**
   * @generated from field: string key = 4;
   */
  key: string;

  /**
   * @generated from field: map<string, google.protobuf.Value> data = 5;
   */
  data: { [key: string]: Value };

  /**
   * @generated from field: int64 ts = 6;
   */
  ts: bigint;
};

/**
 * Describes the message nocloud.events.Event.
 * Use `create(EventSchema)` to create a new message.
 */
export declare const EventSchema: GenMessage<Event>;

/**
 * @generated from message nocloud.events.Events
 */
export declare type Events = Message<"nocloud.events.Events"> & {
  /**
   * @generated from field: repeated nocloud.events.Event events = 1;
   */
  events: Event[];
};

/**
 * Describes the message nocloud.events.Events.
 * Use `create(EventsSchema)` to create a new message.
 */
export declare const EventsSchema: GenMessage<Events>;

/**
 * @generated from message nocloud.events.ConsumeRequest
 */
export declare type ConsumeRequest = Message<"nocloud.events.ConsumeRequest"> & {
  /**
   * @generated from field: string type = 1;
   */
  type: string;

  /**
   * @generated from field: string uuid = 2;
   */
  uuid: string;
};

/**
 * Describes the message nocloud.events.ConsumeRequest.
 * Use `create(ConsumeRequestSchema)` to create a new message.
 */
export declare const ConsumeRequestSchema: GenMessage<ConsumeRequest>;

/**
 * @generated from message nocloud.events.CancelRequest
 */
export declare type CancelRequest = Message<"nocloud.events.CancelRequest"> & {
  /**
   * @generated from field: string type = 1;
   */
  type: string;

  /**
   * @generated from field: string uuid = 2;
   */
  uuid: string;

  /**
   * @generated from field: string id = 3;
   */
  id: string;
};

/**
 * Describes the message nocloud.events.CancelRequest.
 * Use `create(CancelRequestSchema)` to create a new message.
 */
export declare const CancelRequestSchema: GenMessage<CancelRequest>;

/**
 * @generated from message nocloud.events.Response
 */
export declare type Response = Message<"nocloud.events.Response"> & {
};

/**
 * Describes the message nocloud.events.Response.
 * Use `create(ResponseSchema)` to create a new message.
 */
export declare const ResponseSchema: GenMessage<Response>;

/**
 * @generated from service nocloud.events.EventsService
 */
export declare const EventsService: GenService<{
  /**
   * @generated from rpc nocloud.events.EventsService.Publish
   */
  publish: {
    methodKind: "unary";
    input: typeof EventSchema;
    output: typeof ResponseSchema;
  },
  /**
   * @generated from rpc nocloud.events.EventsService.Consume
   */
  consume: {
    methodKind: "server_streaming";
    input: typeof ConsumeRequestSchema;
    output: typeof EventSchema;
  },
  /**
   * @generated from rpc nocloud.events.EventsService.List
   */
  list: {
    methodKind: "unary";
    input: typeof ConsumeRequestSchema;
    output: typeof EventsSchema;
  },
  /**
   * @generated from rpc nocloud.events.EventsService.Cancel
   */
  cancel: {
    methodKind: "unary";
    input: typeof CancelRequestSchema;
    output: typeof ResponseSchema;
  },
}>;

