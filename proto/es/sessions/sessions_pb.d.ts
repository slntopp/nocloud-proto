// @generated by protoc-gen-es v1.10.0 with parameter "target=js+dts"
// @generated from file sessions/sessions.proto (package nocloud.sessions, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Timestamp } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message nocloud.sessions.EmptyMessage
 */
export declare class EmptyMessage extends Message<EmptyMessage> {
  constructor(data?: PartialMessage<EmptyMessage>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.sessions.EmptyMessage";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EmptyMessage;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EmptyMessage;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EmptyMessage;

  static equals(a: EmptyMessage | PlainMessage<EmptyMessage> | undefined, b: EmptyMessage | PlainMessage<EmptyMessage> | undefined): boolean;
}

/**
 * @generated from message nocloud.sessions.DeleteResponse
 */
export declare class DeleteResponse extends Message<DeleteResponse> {
  constructor(data?: PartialMessage<DeleteResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.sessions.DeleteResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteResponse;

  static equals(a: DeleteResponse | PlainMessage<DeleteResponse> | undefined, b: DeleteResponse | PlainMessage<DeleteResponse> | undefined): boolean;
}

/**
 * @generated from message nocloud.sessions.Session
 */
export declare class Session extends Message<Session> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string client = 2;
   */
  client: string;

  /**
   * @generated from field: optional google.protobuf.Timestamp expires = 3;
   */
  expires?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp created = 4;
   */
  created?: Timestamp;

  /**
   * @generated from field: optional bool current = 5;
   */
  current?: boolean;

  constructor(data?: PartialMessage<Session>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.sessions.Session";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Session;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Session;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Session;

  static equals(a: Session | PlainMessage<Session> | undefined, b: Session | PlainMessage<Session> | undefined): boolean;
}

/**
 * @generated from message nocloud.sessions.Activity
 */
export declare class Activity extends Message<Activity> {
  /**
   * @generated from field: map<string, google.protobuf.Timestamp> last_seen = 1;
   */
  lastSeen: { [key: string]: Timestamp };

  constructor(data?: PartialMessage<Activity>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.sessions.Activity";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Activity;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Activity;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Activity;

  static equals(a: Activity | PlainMessage<Activity> | undefined, b: Activity | PlainMessage<Activity> | undefined): boolean;
}

/**
 * @generated from message nocloud.sessions.Sessions
 */
export declare class Sessions extends Message<Sessions> {
  /**
   * @generated from field: repeated nocloud.sessions.Session sessions = 1;
   */
  sessions: Session[];

  constructor(data?: PartialMessage<Sessions>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.sessions.Sessions";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Sessions;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Sessions;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Sessions;

  static equals(a: Sessions | PlainMessage<Sessions> | undefined, b: Sessions | PlainMessage<Sessions> | undefined): boolean;
}

/**
 * @generated from message nocloud.sessions.GetSessions
 */
export declare class GetSessions extends Message<GetSessions> {
  /**
   * @generated from field: optional string user_id = 1;
   */
  userId?: string;

  constructor(data?: PartialMessage<GetSessions>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.sessions.GetSessions";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSessions;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSessions;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSessions;

  static equals(a: GetSessions | PlainMessage<GetSessions> | undefined, b: GetSessions | PlainMessage<GetSessions> | undefined): boolean;
}

/**
 * @generated from message nocloud.sessions.GetActivityRequest
 */
export declare class GetActivityRequest extends Message<GetActivityRequest> {
  /**
   * @generated from field: string uuid = 1;
   */
  uuid: string;

  constructor(data?: PartialMessage<GetActivityRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.sessions.GetActivityRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetActivityRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetActivityRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetActivityRequest;

  static equals(a: GetActivityRequest | PlainMessage<GetActivityRequest> | undefined, b: GetActivityRequest | PlainMessage<GetActivityRequest> | undefined): boolean;
}

