//
//Copyright Â© 2021-2023 Nikita Ivanovski info@slnt-opp.xyz
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// @generated by protoc-gen-es v1.7.2 with parameter "target=js+dts"
// @generated from file states/states.proto (package nocloud.states, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Value } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from enum nocloud.states.NoCloudState
 */
export declare enum NoCloudState {
  /**
   * @generated from enum value: INIT = 0;
   */
  INIT = 0,

  /**
   * @generated from enum value: UNKNOWN = 1;
   */
  UNKNOWN = 1,

  /**
   * @generated from enum value: STOPPED = 2;
   */
  STOPPED = 2,

  /**
   * @generated from enum value: RUNNING = 3;
   */
  RUNNING = 3,

  /**
   * @generated from enum value: FAILURE = 4;
   */
  FAILURE = 4,

  /**
   * @generated from enum value: DELETED = 5;
   */
  DELETED = 5,

  /**
   * @generated from enum value: SUSPENDED = 6;
   */
  SUSPENDED = 6,

  /**
   * @generated from enum value: OPERATION = 7;
   */
  OPERATION = 7,

  /**
   * @generated from enum value: PENDING = 8;
   */
  PENDING = 8,
}

/**
 * @generated from enum nocloud.states.InterfaceKind
 */
export declare enum InterfaceKind {
  /**
   * @generated from enum value: UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Interface data must contain `host` and may contain `port` and `user`
   *
   * @generated from enum value: SSH = 1;
   */
  SSH = 1,
}

/**
 * @generated from message nocloud.states.Interface
 */
export declare class Interface extends Message<Interface> {
  /**
   * @generated from field: nocloud.states.InterfaceKind kind = 1;
   */
  kind: InterfaceKind;

  /**
   * @generated from field: map<string, string> data = 2;
   */
  data: { [key: string]: string };

  constructor(data?: PartialMessage<Interface>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.states.Interface";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Interface;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Interface;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Interface;

  static equals(a: Interface | PlainMessage<Interface> | undefined, b: Interface | PlainMessage<Interface> | undefined): boolean;
}

/**
 * @generated from message nocloud.states.State
 */
export declare class State extends Message<State> {
  /**
   * NoCloud Instance State
   *
   * @generated from field: nocloud.states.NoCloudState state = 1;
   */
  state: NoCloudState;

  /**
   * Driver(Provider/Hypervisor) State data
   *
   * @generated from field: map<string, google.protobuf.Value> meta = 2;
   */
  meta: { [key: string]: Value };

  /**
   * @generated from field: repeated nocloud.states.Interface interfaces = 4;
   */
  interfaces: Interface[];

  /**
   * @generated from field: optional int64 ts = 3;
   */
  ts?: bigint;

  constructor(data?: PartialMessage<State>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.states.State";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): State;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): State;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): State;

  static equals(a: State | PlainMessage<State> | undefined, b: State | PlainMessage<State> | undefined): boolean;
}

/**
 * @generated from message nocloud.states.ObjectState
 */
export declare class ObjectState extends Message<ObjectState> {
  /**
   * @generated from field: string uuid = 1;
   */
  uuid: string;

  /**
   * @generated from field: nocloud.states.State state = 2;
   */
  state?: State;

  constructor(data?: PartialMessage<ObjectState>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "nocloud.states.ObjectState";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ObjectState;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ObjectState;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ObjectState;

  static equals(a: ObjectState | PlainMessage<ObjectState> | undefined, b: ObjectState | PlainMessage<ObjectState> | undefined): boolean;
}

