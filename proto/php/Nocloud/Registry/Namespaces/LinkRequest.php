<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: registry/namespaces/namespaces.proto

namespace Nocloud\Registry\Namespaces;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>nocloud.registry.namespaces.LinkRequest</code>
 */
class LinkRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string namespace = 1 [json_name = "namespace"];</code>
     */
    protected $namespace = '';
    /**
     * Generated from protobuf field <code>string account = 2 [json_name = "account"];</code>
     */
    protected $account = '';
    /**
     * Account access level to namespace
     *
     * Generated from protobuf field <code>optional int32 access = 3 [json_name = "access"];</code>
     */
    protected $access = null;
    /**
     * Generated from protobuf field <code>optional string role = 4 [json_name = "role"];</code>
     */
    protected $role = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $namespace
     *     @type string $account
     *     @type int $access
     *           Account access level to namespace
     *     @type string $role
     * }
     */
    public function __construct($data = NULL) {
        \Nocloud\Registry\Namespaces\GPBMetadata\Namespaces::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string namespace = 1 [json_name = "namespace"];</code>
     * @return string
     */
    public function getNamespace()
    {
        return $this->namespace;
    }

    /**
     * Generated from protobuf field <code>string namespace = 1 [json_name = "namespace"];</code>
     * @param string $var
     * @return $this
     */
    public function setNamespace($var)
    {
        GPBUtil::checkString($var, True);
        $this->namespace = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string account = 2 [json_name = "account"];</code>
     * @return string
     */
    public function getAccount()
    {
        return $this->account;
    }

    /**
     * Generated from protobuf field <code>string account = 2 [json_name = "account"];</code>
     * @param string $var
     * @return $this
     */
    public function setAccount($var)
    {
        GPBUtil::checkString($var, True);
        $this->account = $var;

        return $this;
    }

    /**
     * Account access level to namespace
     *
     * Generated from protobuf field <code>optional int32 access = 3 [json_name = "access"];</code>
     * @return int
     */
    public function getAccess()
    {
        return isset($this->access) ? $this->access : 0;
    }

    public function hasAccess()
    {
        return isset($this->access);
    }

    public function clearAccess()
    {
        unset($this->access);
    }

    /**
     * Account access level to namespace
     *
     * Generated from protobuf field <code>optional int32 access = 3 [json_name = "access"];</code>
     * @param int $var
     * @return $this
     */
    public function setAccess($var)
    {
        GPBUtil::checkInt32($var);
        $this->access = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional string role = 4 [json_name = "role"];</code>
     * @return string
     */
    public function getRole()
    {
        return isset($this->role) ? $this->role : '';
    }

    public function hasRole()
    {
        return isset($this->role);
    }

    public function clearRole()
    {
        unset($this->role);
    }

    /**
     * Generated from protobuf field <code>optional string role = 4 [json_name = "role"];</code>
     * @param string $var
     * @return $this
     */
    public function setRole($var)
    {
        GPBUtil::checkString($var, True);
        $this->role = $var;

        return $this;
    }

}

