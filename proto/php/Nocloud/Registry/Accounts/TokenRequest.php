<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: registry/accounts/accounts.proto

namespace Nocloud\Registry\Accounts;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>nocloud.registry.accounts.TokenRequest</code>
 */
class TokenRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.nocloud.registry.accounts.Credentials auth = 1 [json_name = "auth"];</code>
     */
    protected $auth = null;
    /**
     * Generated from protobuf field <code>int32 exp = 2 [json_name = "exp"];</code>
     */
    protected $exp = 0;
    /**
     * Generated from protobuf field <code>bool root_claim = 3 [json_name = "rootClaim"];</code>
     */
    protected $root_claim = false;
    /**
     * Generated from protobuf field <code>string sp_claim = 4 [json_name = "spClaim"];</code>
     */
    protected $sp_claim = '';
    /**
     * Generated from protobuf field <code>string instance_claim = 5 [json_name = "instanceClaim"];</code>
     */
    protected $instance_claim = '';
    /**
     * Generated from protobuf field <code>optional string uuid = 6 [json_name = "uuid"];</code>
     */
    protected $uuid = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Nocloud\Registry\Accounts\Credentials $auth
     *     @type int $exp
     *     @type bool $root_claim
     *     @type string $sp_claim
     *     @type string $instance_claim
     *     @type string $uuid
     * }
     */
    public function __construct($data = NULL) {
        \Nocloud\Registry\Accounts\GPBMetadata\Accounts::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.nocloud.registry.accounts.Credentials auth = 1 [json_name = "auth"];</code>
     * @return \Nocloud\Registry\Accounts\Credentials|null
     */
    public function getAuth()
    {
        return $this->auth;
    }

    public function hasAuth()
    {
        return isset($this->auth);
    }

    public function clearAuth()
    {
        unset($this->auth);
    }

    /**
     * Generated from protobuf field <code>.nocloud.registry.accounts.Credentials auth = 1 [json_name = "auth"];</code>
     * @param \Nocloud\Registry\Accounts\Credentials $var
     * @return $this
     */
    public function setAuth($var)
    {
        GPBUtil::checkMessage($var, \Nocloud\Registry\Accounts\Credentials::class);
        $this->auth = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>int32 exp = 2 [json_name = "exp"];</code>
     * @return int
     */
    public function getExp()
    {
        return $this->exp;
    }

    /**
     * Generated from protobuf field <code>int32 exp = 2 [json_name = "exp"];</code>
     * @param int $var
     * @return $this
     */
    public function setExp($var)
    {
        GPBUtil::checkInt32($var);
        $this->exp = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>bool root_claim = 3 [json_name = "rootClaim"];</code>
     * @return bool
     */
    public function getRootClaim()
    {
        return $this->root_claim;
    }

    /**
     * Generated from protobuf field <code>bool root_claim = 3 [json_name = "rootClaim"];</code>
     * @param bool $var
     * @return $this
     */
    public function setRootClaim($var)
    {
        GPBUtil::checkBool($var);
        $this->root_claim = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string sp_claim = 4 [json_name = "spClaim"];</code>
     * @return string
     */
    public function getSpClaim()
    {
        return $this->sp_claim;
    }

    /**
     * Generated from protobuf field <code>string sp_claim = 4 [json_name = "spClaim"];</code>
     * @param string $var
     * @return $this
     */
    public function setSpClaim($var)
    {
        GPBUtil::checkString($var, True);
        $this->sp_claim = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string instance_claim = 5 [json_name = "instanceClaim"];</code>
     * @return string
     */
    public function getInstanceClaim()
    {
        return $this->instance_claim;
    }

    /**
     * Generated from protobuf field <code>string instance_claim = 5 [json_name = "instanceClaim"];</code>
     * @param string $var
     * @return $this
     */
    public function setInstanceClaim($var)
    {
        GPBUtil::checkString($var, True);
        $this->instance_claim = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional string uuid = 6 [json_name = "uuid"];</code>
     * @return string
     */
    public function getUuid()
    {
        return isset($this->uuid) ? $this->uuid : '';
    }

    public function hasUuid()
    {
        return isset($this->uuid);
    }

    public function clearUuid()
    {
        unset($this->uuid);
    }

    /**
     * Generated from protobuf field <code>optional string uuid = 6 [json_name = "uuid"];</code>
     * @param string $var
     * @return $this
     */
    public function setUuid($var)
    {
        GPBUtil::checkString($var, True);
        $this->uuid = $var;

        return $this;
    }

}

