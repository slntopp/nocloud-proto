<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: billing/billing.proto

namespace Nocloud\Billing;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>nocloud.billing.Transaction</code>
 */
class Transaction extends \Google\Protobuf\Internal\Message
{
    /**
     * transaction UUID
     *
     * Generated from protobuf field <code>string uuid = 1 [json_name = "uuid"];</code>
     */
    protected $uuid = '';
    /**
     * Timestamp of Transaction planned execution time
     *
     * Generated from protobuf field <code>int64 exec = 2 [json_name = "exec"];</code>
     */
    protected $exec = 0;
    /**
     * Timestamp of Transaction processing time
     *
     * Generated from protobuf field <code>int64 proc = 3 [json_name = "proc"];</code>
     */
    protected $proc = 0;
    /**
     * Wether Transaction has been processed(applied to
     *
     * Generated from protobuf field <code>bool processed = 4 [json_name = "processed"];</code>
     */
    protected $processed = false;
    /**
     * Generated from protobuf field <code>.nocloud.billing.Priority priority = 5 [json_name = "priority"];</code>
     */
    protected $priority = 0;
    /**
     * Generated from protobuf field <code>string account = 6 [json_name = "account"];</code>
     */
    protected $account = '';
    /**
     * Generated from protobuf field <code>string service = 7 [json_name = "service"];</code>
     */
    protected $service = '';
    /**
     * list of records UUIDs
     *
     * Generated from protobuf field <code>repeated string records = 8 [json_name = "records"];</code>
     */
    private $records;
    /**
     * Transaction total value in NCU
     *
     * Generated from protobuf field <code>double total = 9 [json_name = "total"];</code>
     */
    protected $total = 0.0;
    /**
     * Transaction meta data, like
     *meta: {
     *total: <number> // resource "quantity", e.g. CPU cores, RAM Mb, Drive
     *Mb, IP quantity price_atm: <number> // hourly price per quant of resouce at
     *the moment, e.g. 1 NCU [other keys]: <any> // for example Drive
     *Type(SSD/HDD/NVMe/etc)
     *}
     *
     * Generated from protobuf field <code>map<string, .google.protobuf.Value> meta = 10 [json_name = "meta"];</code>
     */
    private $meta;
    /**
     * Generated from protobuf field <code>.nocloud.billing.Currency currency = 11 [json_name = "currency"];</code>
     */
    protected $currency = 0;
    /**
     * Generated from protobuf field <code>int64 created = 12 [json_name = "created"];</code>
     */
    protected $created = 0;
    /**
     * Generated from protobuf field <code>optional string base = 13 [json_name = "base"];</code>
     */
    protected $base = null;
    /**
     * Generated from protobuf field <code>optional string previous = 14 [json_name = "previous"];</code>
     */
    protected $previous = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $uuid
     *           transaction UUID
     *     @type int|string $exec
     *           Timestamp of Transaction planned execution time
     *     @type int|string $proc
     *           Timestamp of Transaction processing time
     *     @type bool $processed
     *           Wether Transaction has been processed(applied to
     *     @type int $priority
     *     @type string $account
     *     @type string $service
     *     @type array<string>|\Google\Protobuf\Internal\RepeatedField $records
     *           list of records UUIDs
     *     @type float $total
     *           Transaction total value in NCU
     *     @type array|\Google\Protobuf\Internal\MapField $meta
     *           Transaction meta data, like
     *          meta: {
     *          total: <number> // resource "quantity", e.g. CPU cores, RAM Mb, Drive
     *          Mb, IP quantity price_atm: <number> // hourly price per quant of resouce at
     *          the moment, e.g. 1 NCU [other keys]: <any> // for example Drive
     *          Type(SSD/HDD/NVMe/etc)
     *          }
     *     @type int $currency
     *     @type int|string $created
     *     @type string $base
     *     @type string $previous
     * }
     */
    public function __construct($data = NULL) {
        \Nocloud\Billing\GPBMetadata\Billing::initOnce();
        parent::__construct($data);
    }

    /**
     * transaction UUID
     *
     * Generated from protobuf field <code>string uuid = 1 [json_name = "uuid"];</code>
     * @return string
     */
    public function getUuid()
    {
        return $this->uuid;
    }

    /**
     * transaction UUID
     *
     * Generated from protobuf field <code>string uuid = 1 [json_name = "uuid"];</code>
     * @param string $var
     * @return $this
     */
    public function setUuid($var)
    {
        GPBUtil::checkString($var, True);
        $this->uuid = $var;

        return $this;
    }

    /**
     * Timestamp of Transaction planned execution time
     *
     * Generated from protobuf field <code>int64 exec = 2 [json_name = "exec"];</code>
     * @return int|string
     */
    public function getExec()
    {
        return $this->exec;
    }

    /**
     * Timestamp of Transaction planned execution time
     *
     * Generated from protobuf field <code>int64 exec = 2 [json_name = "exec"];</code>
     * @param int|string $var
     * @return $this
     */
    public function setExec($var)
    {
        GPBUtil::checkInt64($var);
        $this->exec = $var;

        return $this;
    }

    /**
     * Timestamp of Transaction processing time
     *
     * Generated from protobuf field <code>int64 proc = 3 [json_name = "proc"];</code>
     * @return int|string
     */
    public function getProc()
    {
        return $this->proc;
    }

    /**
     * Timestamp of Transaction processing time
     *
     * Generated from protobuf field <code>int64 proc = 3 [json_name = "proc"];</code>
     * @param int|string $var
     * @return $this
     */
    public function setProc($var)
    {
        GPBUtil::checkInt64($var);
        $this->proc = $var;

        return $this;
    }

    /**
     * Wether Transaction has been processed(applied to
     *
     * Generated from protobuf field <code>bool processed = 4 [json_name = "processed"];</code>
     * @return bool
     */
    public function getProcessed()
    {
        return $this->processed;
    }

    /**
     * Wether Transaction has been processed(applied to
     *
     * Generated from protobuf field <code>bool processed = 4 [json_name = "processed"];</code>
     * @param bool $var
     * @return $this
     */
    public function setProcessed($var)
    {
        GPBUtil::checkBool($var);
        $this->processed = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.nocloud.billing.Priority priority = 5 [json_name = "priority"];</code>
     * @return int
     */
    public function getPriority()
    {
        return $this->priority;
    }

    /**
     * Generated from protobuf field <code>.nocloud.billing.Priority priority = 5 [json_name = "priority"];</code>
     * @param int $var
     * @return $this
     */
    public function setPriority($var)
    {
        GPBUtil::checkEnum($var, \Nocloud\Billing\Priority::class);
        $this->priority = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string account = 6 [json_name = "account"];</code>
     * @return string
     */
    public function getAccount()
    {
        return $this->account;
    }

    /**
     * Generated from protobuf field <code>string account = 6 [json_name = "account"];</code>
     * @param string $var
     * @return $this
     */
    public function setAccount($var)
    {
        GPBUtil::checkString($var, True);
        $this->account = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string service = 7 [json_name = "service"];</code>
     * @return string
     */
    public function getService()
    {
        return $this->service;
    }

    /**
     * Generated from protobuf field <code>string service = 7 [json_name = "service"];</code>
     * @param string $var
     * @return $this
     */
    public function setService($var)
    {
        GPBUtil::checkString($var, True);
        $this->service = $var;

        return $this;
    }

    /**
     * list of records UUIDs
     *
     * Generated from protobuf field <code>repeated string records = 8 [json_name = "records"];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getRecords()
    {
        return $this->records;
    }

    /**
     * list of records UUIDs
     *
     * Generated from protobuf field <code>repeated string records = 8 [json_name = "records"];</code>
     * @param array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setRecords($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->records = $arr;

        return $this;
    }

    /**
     * Transaction total value in NCU
     *
     * Generated from protobuf field <code>double total = 9 [json_name = "total"];</code>
     * @return float
     */
    public function getTotal()
    {
        return $this->total;
    }

    /**
     * Transaction total value in NCU
     *
     * Generated from protobuf field <code>double total = 9 [json_name = "total"];</code>
     * @param float $var
     * @return $this
     */
    public function setTotal($var)
    {
        GPBUtil::checkDouble($var);
        $this->total = $var;

        return $this;
    }

    /**
     * Transaction meta data, like
     *meta: {
     *total: <number> // resource "quantity", e.g. CPU cores, RAM Mb, Drive
     *Mb, IP quantity price_atm: <number> // hourly price per quant of resouce at
     *the moment, e.g. 1 NCU [other keys]: <any> // for example Drive
     *Type(SSD/HDD/NVMe/etc)
     *}
     *
     * Generated from protobuf field <code>map<string, .google.protobuf.Value> meta = 10 [json_name = "meta"];</code>
     * @return \Google\Protobuf\Internal\MapField
     */
    public function getMeta()
    {
        return $this->meta;
    }

    /**
     * Transaction meta data, like
     *meta: {
     *total: <number> // resource "quantity", e.g. CPU cores, RAM Mb, Drive
     *Mb, IP quantity price_atm: <number> // hourly price per quant of resouce at
     *the moment, e.g. 1 NCU [other keys]: <any> // for example Drive
     *Type(SSD/HDD/NVMe/etc)
     *}
     *
     * Generated from protobuf field <code>map<string, .google.protobuf.Value> meta = 10 [json_name = "meta"];</code>
     * @param array|\Google\Protobuf\Internal\MapField $var
     * @return $this
     */
    public function setMeta($var)
    {
        $arr = GPBUtil::checkMapField($var, \Google\Protobuf\Internal\GPBType::STRING, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Protobuf\Value::class);
        $this->meta = $arr;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.nocloud.billing.Currency currency = 11 [json_name = "currency"];</code>
     * @return int
     */
    public function getCurrency()
    {
        return $this->currency;
    }

    /**
     * Generated from protobuf field <code>.nocloud.billing.Currency currency = 11 [json_name = "currency"];</code>
     * @param int $var
     * @return $this
     */
    public function setCurrency($var)
    {
        GPBUtil::checkEnum($var, \Nocloud\Billing\Currency::class);
        $this->currency = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>int64 created = 12 [json_name = "created"];</code>
     * @return int|string
     */
    public function getCreated()
    {
        return $this->created;
    }

    /**
     * Generated from protobuf field <code>int64 created = 12 [json_name = "created"];</code>
     * @param int|string $var
     * @return $this
     */
    public function setCreated($var)
    {
        GPBUtil::checkInt64($var);
        $this->created = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional string base = 13 [json_name = "base"];</code>
     * @return string
     */
    public function getBase()
    {
        return isset($this->base) ? $this->base : '';
    }

    public function hasBase()
    {
        return isset($this->base);
    }

    public function clearBase()
    {
        unset($this->base);
    }

    /**
     * Generated from protobuf field <code>optional string base = 13 [json_name = "base"];</code>
     * @param string $var
     * @return $this
     */
    public function setBase($var)
    {
        GPBUtil::checkString($var, True);
        $this->base = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional string previous = 14 [json_name = "previous"];</code>
     * @return string
     */
    public function getPrevious()
    {
        return isset($this->previous) ? $this->previous : '';
    }

    public function hasPrevious()
    {
        return isset($this->previous);
    }

    public function clearPrevious()
    {
        unset($this->previous);
    }

    /**
     * Generated from protobuf field <code>optional string previous = 14 [json_name = "previous"];</code>
     * @param string $var
     * @return $this
     */
    public function setPrevious($var)
    {
        GPBUtil::checkString($var, True);
        $this->previous = $var;

        return $this;
    }

}

