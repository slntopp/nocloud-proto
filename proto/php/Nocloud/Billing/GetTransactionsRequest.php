<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: billing/billing.proto

namespace Nocloud\Billing;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>nocloud.billing.GetTransactionsRequest</code>
 */
class GetTransactionsRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>optional string account = 1 [json_name = "account"];</code>
     */
    protected $account = null;
    /**
     * Generated from protobuf field <code>optional string service = 2 [json_name = "service"];</code>
     */
    protected $service = null;
    /**
     * Generated from protobuf field <code>optional uint64 page = 3 [json_name = "page"];</code>
     */
    protected $page = null;
    /**
     * Generated from protobuf field <code>optional uint64 limit = 4 [json_name = "limit"];</code>
     */
    protected $limit = null;
    /**
     * Generated from protobuf field <code>optional string field = 5 [json_name = "field"];</code>
     */
    protected $field = null;
    /**
     * Generated from protobuf field <code>optional string sort = 6 [json_name = "sort"];</code>
     */
    protected $sort = null;
    /**
     * Get a single Transaction (would embed records too)
     *
     * Generated from protobuf field <code>optional string uuid = 7 [json_name = "uuid"];</code>
     */
    protected $uuid = null;
    /**
     * Generated from protobuf field <code>optional string type = 8 [json_name = "type"];</code>
     */
    protected $type = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $account
     *     @type string $service
     *     @type int|string $page
     *     @type int|string $limit
     *     @type string $field
     *     @type string $sort
     *     @type string $uuid
     *           Get a single Transaction (would embed records too)
     *     @type string $type
     * }
     */
    public function __construct($data = NULL) {
        \Nocloud\Billing\GPBMetadata\Billing::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>optional string account = 1 [json_name = "account"];</code>
     * @return string
     */
    public function getAccount()
    {
        return isset($this->account) ? $this->account : '';
    }

    public function hasAccount()
    {
        return isset($this->account);
    }

    public function clearAccount()
    {
        unset($this->account);
    }

    /**
     * Generated from protobuf field <code>optional string account = 1 [json_name = "account"];</code>
     * @param string $var
     * @return $this
     */
    public function setAccount($var)
    {
        GPBUtil::checkString($var, True);
        $this->account = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional string service = 2 [json_name = "service"];</code>
     * @return string
     */
    public function getService()
    {
        return isset($this->service) ? $this->service : '';
    }

    public function hasService()
    {
        return isset($this->service);
    }

    public function clearService()
    {
        unset($this->service);
    }

    /**
     * Generated from protobuf field <code>optional string service = 2 [json_name = "service"];</code>
     * @param string $var
     * @return $this
     */
    public function setService($var)
    {
        GPBUtil::checkString($var, True);
        $this->service = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional uint64 page = 3 [json_name = "page"];</code>
     * @return int|string
     */
    public function getPage()
    {
        return isset($this->page) ? $this->page : 0;
    }

    public function hasPage()
    {
        return isset($this->page);
    }

    public function clearPage()
    {
        unset($this->page);
    }

    /**
     * Generated from protobuf field <code>optional uint64 page = 3 [json_name = "page"];</code>
     * @param int|string $var
     * @return $this
     */
    public function setPage($var)
    {
        GPBUtil::checkUint64($var);
        $this->page = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional uint64 limit = 4 [json_name = "limit"];</code>
     * @return int|string
     */
    public function getLimit()
    {
        return isset($this->limit) ? $this->limit : 0;
    }

    public function hasLimit()
    {
        return isset($this->limit);
    }

    public function clearLimit()
    {
        unset($this->limit);
    }

    /**
     * Generated from protobuf field <code>optional uint64 limit = 4 [json_name = "limit"];</code>
     * @param int|string $var
     * @return $this
     */
    public function setLimit($var)
    {
        GPBUtil::checkUint64($var);
        $this->limit = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional string field = 5 [json_name = "field"];</code>
     * @return string
     */
    public function getField()
    {
        return isset($this->field) ? $this->field : '';
    }

    public function hasField()
    {
        return isset($this->field);
    }

    public function clearField()
    {
        unset($this->field);
    }

    /**
     * Generated from protobuf field <code>optional string field = 5 [json_name = "field"];</code>
     * @param string $var
     * @return $this
     */
    public function setField($var)
    {
        GPBUtil::checkString($var, True);
        $this->field = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional string sort = 6 [json_name = "sort"];</code>
     * @return string
     */
    public function getSort()
    {
        return isset($this->sort) ? $this->sort : '';
    }

    public function hasSort()
    {
        return isset($this->sort);
    }

    public function clearSort()
    {
        unset($this->sort);
    }

    /**
     * Generated from protobuf field <code>optional string sort = 6 [json_name = "sort"];</code>
     * @param string $var
     * @return $this
     */
    public function setSort($var)
    {
        GPBUtil::checkString($var, True);
        $this->sort = $var;

        return $this;
    }

    /**
     * Get a single Transaction (would embed records too)
     *
     * Generated from protobuf field <code>optional string uuid = 7 [json_name = "uuid"];</code>
     * @return string
     */
    public function getUuid()
    {
        return isset($this->uuid) ? $this->uuid : '';
    }

    public function hasUuid()
    {
        return isset($this->uuid);
    }

    public function clearUuid()
    {
        unset($this->uuid);
    }

    /**
     * Get a single Transaction (would embed records too)
     *
     * Generated from protobuf field <code>optional string uuid = 7 [json_name = "uuid"];</code>
     * @param string $var
     * @return $this
     */
    public function setUuid($var)
    {
        GPBUtil::checkString($var, True);
        $this->uuid = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional string type = 8 [json_name = "type"];</code>
     * @return string
     */
    public function getType()
    {
        return isset($this->type) ? $this->type : '';
    }

    public function hasType()
    {
        return isset($this->type);
    }

    public function clearType()
    {
        unset($this->type);
    }

    /**
     * Generated from protobuf field <code>optional string type = 8 [json_name = "type"];</code>
     * @param string $var
     * @return $this
     */
    public function setType($var)
    {
        GPBUtil::checkString($var, True);
        $this->type = $var;

        return $this;
    }

}

