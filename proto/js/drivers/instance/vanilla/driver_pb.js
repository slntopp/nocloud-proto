// source: drivers/instance/vanilla/driver.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var services_services_pb = require('../../../services/services_pb.js');
goog.object.extend(proto, services_services_pb);
var instances_instances_pb = require('../../../instances/instances_pb.js');
goog.object.extend(proto, instances_instances_pb);
var services_providers_services_providers_pb = require('../../../services_providers/services_providers_pb.js');
goog.object.extend(proto, services_providers_services_providers_pb);
var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js');
goog.object.extend(proto, google_protobuf_struct_pb);
goog.exportSymbol('proto.nocloud.instance.driver.vanilla.DownRequest', null, global);
goog.exportSymbol('proto.nocloud.instance.driver.vanilla.DownResponse', null, global);
goog.exportSymbol('proto.nocloud.instance.driver.vanilla.GetTypeRequest', null, global);
goog.exportSymbol('proto.nocloud.instance.driver.vanilla.GetTypeResponse', null, global);
goog.exportSymbol('proto.nocloud.instance.driver.vanilla.InvokeRequest', null, global);
goog.exportSymbol('proto.nocloud.instance.driver.vanilla.MonitoringRequest', null, global);
goog.exportSymbol('proto.nocloud.instance.driver.vanilla.MonitoringResponse', null, global);
goog.exportSymbol('proto.nocloud.instance.driver.vanilla.SpInvokeRequest', null, global);
goog.exportSymbol('proto.nocloud.instance.driver.vanilla.TestServiceProviderConfigRequest', null, global);
goog.exportSymbol('proto.nocloud.instance.driver.vanilla.UpRequest', null, global);
goog.exportSymbol('proto.nocloud.instance.driver.vanilla.UpResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nocloud.instance.driver.vanilla.TestServiceProviderConfigRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nocloud.instance.driver.vanilla.TestServiceProviderConfigRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nocloud.instance.driver.vanilla.TestServiceProviderConfigRequest.displayName = 'proto.nocloud.instance.driver.vanilla.TestServiceProviderConfigRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nocloud.instance.driver.vanilla.GetTypeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nocloud.instance.driver.vanilla.GetTypeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nocloud.instance.driver.vanilla.GetTypeRequest.displayName = 'proto.nocloud.instance.driver.vanilla.GetTypeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nocloud.instance.driver.vanilla.GetTypeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nocloud.instance.driver.vanilla.GetTypeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nocloud.instance.driver.vanilla.GetTypeResponse.displayName = 'proto.nocloud.instance.driver.vanilla.GetTypeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nocloud.instance.driver.vanilla.UpRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nocloud.instance.driver.vanilla.UpRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nocloud.instance.driver.vanilla.UpRequest.displayName = 'proto.nocloud.instance.driver.vanilla.UpRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nocloud.instance.driver.vanilla.UpResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nocloud.instance.driver.vanilla.UpResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nocloud.instance.driver.vanilla.UpResponse.displayName = 'proto.nocloud.instance.driver.vanilla.UpResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nocloud.instance.driver.vanilla.DownRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nocloud.instance.driver.vanilla.DownRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nocloud.instance.driver.vanilla.DownRequest.displayName = 'proto.nocloud.instance.driver.vanilla.DownRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nocloud.instance.driver.vanilla.DownResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nocloud.instance.driver.vanilla.DownResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nocloud.instance.driver.vanilla.DownResponse.displayName = 'proto.nocloud.instance.driver.vanilla.DownResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nocloud.instance.driver.vanilla.MonitoringRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.nocloud.instance.driver.vanilla.MonitoringRequest.repeatedFields_, null);
};
goog.inherits(proto.nocloud.instance.driver.vanilla.MonitoringRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nocloud.instance.driver.vanilla.MonitoringRequest.displayName = 'proto.nocloud.instance.driver.vanilla.MonitoringRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nocloud.instance.driver.vanilla.MonitoringResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nocloud.instance.driver.vanilla.MonitoringResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nocloud.instance.driver.vanilla.MonitoringResponse.displayName = 'proto.nocloud.instance.driver.vanilla.MonitoringResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nocloud.instance.driver.vanilla.InvokeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nocloud.instance.driver.vanilla.InvokeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nocloud.instance.driver.vanilla.InvokeRequest.displayName = 'proto.nocloud.instance.driver.vanilla.InvokeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nocloud.instance.driver.vanilla.SpInvokeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nocloud.instance.driver.vanilla.SpInvokeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nocloud.instance.driver.vanilla.SpInvokeRequest.displayName = 'proto.nocloud.instance.driver.vanilla.SpInvokeRequest';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nocloud.instance.driver.vanilla.TestServiceProviderConfigRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.nocloud.instance.driver.vanilla.TestServiceProviderConfigRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nocloud.instance.driver.vanilla.TestServiceProviderConfigRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nocloud.instance.driver.vanilla.TestServiceProviderConfigRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    servicesProvider: (f = msg.getServicesProvider()) && services_providers_services_providers_pb.ServicesProvider.toObject(includeInstance, f),
    syntaxOnly: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nocloud.instance.driver.vanilla.TestServiceProviderConfigRequest}
 */
proto.nocloud.instance.driver.vanilla.TestServiceProviderConfigRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nocloud.instance.driver.vanilla.TestServiceProviderConfigRequest;
  return proto.nocloud.instance.driver.vanilla.TestServiceProviderConfigRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nocloud.instance.driver.vanilla.TestServiceProviderConfigRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nocloud.instance.driver.vanilla.TestServiceProviderConfigRequest}
 */
proto.nocloud.instance.driver.vanilla.TestServiceProviderConfigRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new services_providers_services_providers_pb.ServicesProvider;
      reader.readMessage(value,services_providers_services_providers_pb.ServicesProvider.deserializeBinaryFromReader);
      msg.setServicesProvider(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSyntaxOnly(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nocloud.instance.driver.vanilla.TestServiceProviderConfigRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nocloud.instance.driver.vanilla.TestServiceProviderConfigRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nocloud.instance.driver.vanilla.TestServiceProviderConfigRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nocloud.instance.driver.vanilla.TestServiceProviderConfigRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getServicesProvider();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      services_providers_services_providers_pb.ServicesProvider.serializeBinaryToWriter
    );
  }
  f = message.getSyntaxOnly();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional nocloud.services_providers.ServicesProvider services_provider = 1;
 * @return {?proto.nocloud.services_providers.ServicesProvider}
 */
proto.nocloud.instance.driver.vanilla.TestServiceProviderConfigRequest.prototype.getServicesProvider = function() {
  return /** @type{?proto.nocloud.services_providers.ServicesProvider} */ (
    jspb.Message.getWrapperField(this, services_providers_services_providers_pb.ServicesProvider, 1));
};


/**
 * @param {?proto.nocloud.services_providers.ServicesProvider|undefined} value
 * @return {!proto.nocloud.instance.driver.vanilla.TestServiceProviderConfigRequest} returns this
*/
proto.nocloud.instance.driver.vanilla.TestServiceProviderConfigRequest.prototype.setServicesProvider = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nocloud.instance.driver.vanilla.TestServiceProviderConfigRequest} returns this
 */
proto.nocloud.instance.driver.vanilla.TestServiceProviderConfigRequest.prototype.clearServicesProvider = function() {
  return this.setServicesProvider(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nocloud.instance.driver.vanilla.TestServiceProviderConfigRequest.prototype.hasServicesProvider = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool syntax_only = 2;
 * @return {boolean}
 */
proto.nocloud.instance.driver.vanilla.TestServiceProviderConfigRequest.prototype.getSyntaxOnly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.nocloud.instance.driver.vanilla.TestServiceProviderConfigRequest} returns this
 */
proto.nocloud.instance.driver.vanilla.TestServiceProviderConfigRequest.prototype.setSyntaxOnly = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nocloud.instance.driver.vanilla.GetTypeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.nocloud.instance.driver.vanilla.GetTypeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nocloud.instance.driver.vanilla.GetTypeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nocloud.instance.driver.vanilla.GetTypeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nocloud.instance.driver.vanilla.GetTypeRequest}
 */
proto.nocloud.instance.driver.vanilla.GetTypeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nocloud.instance.driver.vanilla.GetTypeRequest;
  return proto.nocloud.instance.driver.vanilla.GetTypeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nocloud.instance.driver.vanilla.GetTypeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nocloud.instance.driver.vanilla.GetTypeRequest}
 */
proto.nocloud.instance.driver.vanilla.GetTypeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nocloud.instance.driver.vanilla.GetTypeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nocloud.instance.driver.vanilla.GetTypeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nocloud.instance.driver.vanilla.GetTypeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nocloud.instance.driver.vanilla.GetTypeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nocloud.instance.driver.vanilla.GetTypeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.nocloud.instance.driver.vanilla.GetTypeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nocloud.instance.driver.vanilla.GetTypeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nocloud.instance.driver.vanilla.GetTypeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nocloud.instance.driver.vanilla.GetTypeResponse}
 */
proto.nocloud.instance.driver.vanilla.GetTypeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nocloud.instance.driver.vanilla.GetTypeResponse;
  return proto.nocloud.instance.driver.vanilla.GetTypeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nocloud.instance.driver.vanilla.GetTypeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nocloud.instance.driver.vanilla.GetTypeResponse}
 */
proto.nocloud.instance.driver.vanilla.GetTypeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nocloud.instance.driver.vanilla.GetTypeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nocloud.instance.driver.vanilla.GetTypeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nocloud.instance.driver.vanilla.GetTypeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nocloud.instance.driver.vanilla.GetTypeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string type = 1;
 * @return {string}
 */
proto.nocloud.instance.driver.vanilla.GetTypeResponse.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.nocloud.instance.driver.vanilla.GetTypeResponse} returns this
 */
proto.nocloud.instance.driver.vanilla.GetTypeResponse.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nocloud.instance.driver.vanilla.UpRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.nocloud.instance.driver.vanilla.UpRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nocloud.instance.driver.vanilla.UpRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nocloud.instance.driver.vanilla.UpRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    group: (f = msg.getGroup()) && instances_instances_pb.InstancesGroup.toObject(includeInstance, f),
    servicesProvider: (f = msg.getServicesProvider()) && services_providers_services_providers_pb.ServicesProvider.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nocloud.instance.driver.vanilla.UpRequest}
 */
proto.nocloud.instance.driver.vanilla.UpRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nocloud.instance.driver.vanilla.UpRequest;
  return proto.nocloud.instance.driver.vanilla.UpRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nocloud.instance.driver.vanilla.UpRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nocloud.instance.driver.vanilla.UpRequest}
 */
proto.nocloud.instance.driver.vanilla.UpRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new instances_instances_pb.InstancesGroup;
      reader.readMessage(value,instances_instances_pb.InstancesGroup.deserializeBinaryFromReader);
      msg.setGroup(value);
      break;
    case 2:
      var value = new services_providers_services_providers_pb.ServicesProvider;
      reader.readMessage(value,services_providers_services_providers_pb.ServicesProvider.deserializeBinaryFromReader);
      msg.setServicesProvider(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nocloud.instance.driver.vanilla.UpRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nocloud.instance.driver.vanilla.UpRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nocloud.instance.driver.vanilla.UpRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nocloud.instance.driver.vanilla.UpRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroup();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      instances_instances_pb.InstancesGroup.serializeBinaryToWriter
    );
  }
  f = message.getServicesProvider();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      services_providers_services_providers_pb.ServicesProvider.serializeBinaryToWriter
    );
  }
};


/**
 * optional nocloud.instances.InstancesGroup group = 1;
 * @return {?proto.nocloud.instances.InstancesGroup}
 */
proto.nocloud.instance.driver.vanilla.UpRequest.prototype.getGroup = function() {
  return /** @type{?proto.nocloud.instances.InstancesGroup} */ (
    jspb.Message.getWrapperField(this, instances_instances_pb.InstancesGroup, 1));
};


/**
 * @param {?proto.nocloud.instances.InstancesGroup|undefined} value
 * @return {!proto.nocloud.instance.driver.vanilla.UpRequest} returns this
*/
proto.nocloud.instance.driver.vanilla.UpRequest.prototype.setGroup = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nocloud.instance.driver.vanilla.UpRequest} returns this
 */
proto.nocloud.instance.driver.vanilla.UpRequest.prototype.clearGroup = function() {
  return this.setGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nocloud.instance.driver.vanilla.UpRequest.prototype.hasGroup = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional nocloud.services_providers.ServicesProvider services_provider = 2;
 * @return {?proto.nocloud.services_providers.ServicesProvider}
 */
proto.nocloud.instance.driver.vanilla.UpRequest.prototype.getServicesProvider = function() {
  return /** @type{?proto.nocloud.services_providers.ServicesProvider} */ (
    jspb.Message.getWrapperField(this, services_providers_services_providers_pb.ServicesProvider, 2));
};


/**
 * @param {?proto.nocloud.services_providers.ServicesProvider|undefined} value
 * @return {!proto.nocloud.instance.driver.vanilla.UpRequest} returns this
*/
proto.nocloud.instance.driver.vanilla.UpRequest.prototype.setServicesProvider = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nocloud.instance.driver.vanilla.UpRequest} returns this
 */
proto.nocloud.instance.driver.vanilla.UpRequest.prototype.clearServicesProvider = function() {
  return this.setServicesProvider(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nocloud.instance.driver.vanilla.UpRequest.prototype.hasServicesProvider = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nocloud.instance.driver.vanilla.UpResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.nocloud.instance.driver.vanilla.UpResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nocloud.instance.driver.vanilla.UpResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nocloud.instance.driver.vanilla.UpResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    group: (f = msg.getGroup()) && instances_instances_pb.InstancesGroup.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nocloud.instance.driver.vanilla.UpResponse}
 */
proto.nocloud.instance.driver.vanilla.UpResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nocloud.instance.driver.vanilla.UpResponse;
  return proto.nocloud.instance.driver.vanilla.UpResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nocloud.instance.driver.vanilla.UpResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nocloud.instance.driver.vanilla.UpResponse}
 */
proto.nocloud.instance.driver.vanilla.UpResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new instances_instances_pb.InstancesGroup;
      reader.readMessage(value,instances_instances_pb.InstancesGroup.deserializeBinaryFromReader);
      msg.setGroup(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nocloud.instance.driver.vanilla.UpResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nocloud.instance.driver.vanilla.UpResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nocloud.instance.driver.vanilla.UpResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nocloud.instance.driver.vanilla.UpResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroup();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      instances_instances_pb.InstancesGroup.serializeBinaryToWriter
    );
  }
};


/**
 * optional nocloud.instances.InstancesGroup group = 1;
 * @return {?proto.nocloud.instances.InstancesGroup}
 */
proto.nocloud.instance.driver.vanilla.UpResponse.prototype.getGroup = function() {
  return /** @type{?proto.nocloud.instances.InstancesGroup} */ (
    jspb.Message.getWrapperField(this, instances_instances_pb.InstancesGroup, 1));
};


/**
 * @param {?proto.nocloud.instances.InstancesGroup|undefined} value
 * @return {!proto.nocloud.instance.driver.vanilla.UpResponse} returns this
*/
proto.nocloud.instance.driver.vanilla.UpResponse.prototype.setGroup = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nocloud.instance.driver.vanilla.UpResponse} returns this
 */
proto.nocloud.instance.driver.vanilla.UpResponse.prototype.clearGroup = function() {
  return this.setGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nocloud.instance.driver.vanilla.UpResponse.prototype.hasGroup = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nocloud.instance.driver.vanilla.DownRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.nocloud.instance.driver.vanilla.DownRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nocloud.instance.driver.vanilla.DownRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nocloud.instance.driver.vanilla.DownRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    group: (f = msg.getGroup()) && instances_instances_pb.InstancesGroup.toObject(includeInstance, f),
    servicesProvider: (f = msg.getServicesProvider()) && services_providers_services_providers_pb.ServicesProvider.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nocloud.instance.driver.vanilla.DownRequest}
 */
proto.nocloud.instance.driver.vanilla.DownRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nocloud.instance.driver.vanilla.DownRequest;
  return proto.nocloud.instance.driver.vanilla.DownRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nocloud.instance.driver.vanilla.DownRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nocloud.instance.driver.vanilla.DownRequest}
 */
proto.nocloud.instance.driver.vanilla.DownRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new instances_instances_pb.InstancesGroup;
      reader.readMessage(value,instances_instances_pb.InstancesGroup.deserializeBinaryFromReader);
      msg.setGroup(value);
      break;
    case 2:
      var value = new services_providers_services_providers_pb.ServicesProvider;
      reader.readMessage(value,services_providers_services_providers_pb.ServicesProvider.deserializeBinaryFromReader);
      msg.setServicesProvider(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nocloud.instance.driver.vanilla.DownRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nocloud.instance.driver.vanilla.DownRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nocloud.instance.driver.vanilla.DownRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nocloud.instance.driver.vanilla.DownRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroup();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      instances_instances_pb.InstancesGroup.serializeBinaryToWriter
    );
  }
  f = message.getServicesProvider();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      services_providers_services_providers_pb.ServicesProvider.serializeBinaryToWriter
    );
  }
};


/**
 * optional nocloud.instances.InstancesGroup group = 1;
 * @return {?proto.nocloud.instances.InstancesGroup}
 */
proto.nocloud.instance.driver.vanilla.DownRequest.prototype.getGroup = function() {
  return /** @type{?proto.nocloud.instances.InstancesGroup} */ (
    jspb.Message.getWrapperField(this, instances_instances_pb.InstancesGroup, 1));
};


/**
 * @param {?proto.nocloud.instances.InstancesGroup|undefined} value
 * @return {!proto.nocloud.instance.driver.vanilla.DownRequest} returns this
*/
proto.nocloud.instance.driver.vanilla.DownRequest.prototype.setGroup = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nocloud.instance.driver.vanilla.DownRequest} returns this
 */
proto.nocloud.instance.driver.vanilla.DownRequest.prototype.clearGroup = function() {
  return this.setGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nocloud.instance.driver.vanilla.DownRequest.prototype.hasGroup = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional nocloud.services_providers.ServicesProvider services_provider = 2;
 * @return {?proto.nocloud.services_providers.ServicesProvider}
 */
proto.nocloud.instance.driver.vanilla.DownRequest.prototype.getServicesProvider = function() {
  return /** @type{?proto.nocloud.services_providers.ServicesProvider} */ (
    jspb.Message.getWrapperField(this, services_providers_services_providers_pb.ServicesProvider, 2));
};


/**
 * @param {?proto.nocloud.services_providers.ServicesProvider|undefined} value
 * @return {!proto.nocloud.instance.driver.vanilla.DownRequest} returns this
*/
proto.nocloud.instance.driver.vanilla.DownRequest.prototype.setServicesProvider = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nocloud.instance.driver.vanilla.DownRequest} returns this
 */
proto.nocloud.instance.driver.vanilla.DownRequest.prototype.clearServicesProvider = function() {
  return this.setServicesProvider(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nocloud.instance.driver.vanilla.DownRequest.prototype.hasServicesProvider = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nocloud.instance.driver.vanilla.DownResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.nocloud.instance.driver.vanilla.DownResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nocloud.instance.driver.vanilla.DownResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nocloud.instance.driver.vanilla.DownResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    group: (f = msg.getGroup()) && instances_instances_pb.InstancesGroup.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nocloud.instance.driver.vanilla.DownResponse}
 */
proto.nocloud.instance.driver.vanilla.DownResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nocloud.instance.driver.vanilla.DownResponse;
  return proto.nocloud.instance.driver.vanilla.DownResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nocloud.instance.driver.vanilla.DownResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nocloud.instance.driver.vanilla.DownResponse}
 */
proto.nocloud.instance.driver.vanilla.DownResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new instances_instances_pb.InstancesGroup;
      reader.readMessage(value,instances_instances_pb.InstancesGroup.deserializeBinaryFromReader);
      msg.setGroup(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nocloud.instance.driver.vanilla.DownResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nocloud.instance.driver.vanilla.DownResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nocloud.instance.driver.vanilla.DownResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nocloud.instance.driver.vanilla.DownResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroup();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      instances_instances_pb.InstancesGroup.serializeBinaryToWriter
    );
  }
};


/**
 * optional nocloud.instances.InstancesGroup group = 1;
 * @return {?proto.nocloud.instances.InstancesGroup}
 */
proto.nocloud.instance.driver.vanilla.DownResponse.prototype.getGroup = function() {
  return /** @type{?proto.nocloud.instances.InstancesGroup} */ (
    jspb.Message.getWrapperField(this, instances_instances_pb.InstancesGroup, 1));
};


/**
 * @param {?proto.nocloud.instances.InstancesGroup|undefined} value
 * @return {!proto.nocloud.instance.driver.vanilla.DownResponse} returns this
*/
proto.nocloud.instance.driver.vanilla.DownResponse.prototype.setGroup = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nocloud.instance.driver.vanilla.DownResponse} returns this
 */
proto.nocloud.instance.driver.vanilla.DownResponse.prototype.clearGroup = function() {
  return this.setGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nocloud.instance.driver.vanilla.DownResponse.prototype.hasGroup = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.nocloud.instance.driver.vanilla.MonitoringRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nocloud.instance.driver.vanilla.MonitoringRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.nocloud.instance.driver.vanilla.MonitoringRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nocloud.instance.driver.vanilla.MonitoringRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nocloud.instance.driver.vanilla.MonitoringRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    groupsList: jspb.Message.toObjectList(msg.getGroupsList(),
    instances_instances_pb.InstancesGroup.toObject, includeInstance),
    servicesProvider: (f = msg.getServicesProvider()) && services_providers_services_providers_pb.ServicesProvider.toObject(includeInstance, f),
    scheduled: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nocloud.instance.driver.vanilla.MonitoringRequest}
 */
proto.nocloud.instance.driver.vanilla.MonitoringRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nocloud.instance.driver.vanilla.MonitoringRequest;
  return proto.nocloud.instance.driver.vanilla.MonitoringRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nocloud.instance.driver.vanilla.MonitoringRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nocloud.instance.driver.vanilla.MonitoringRequest}
 */
proto.nocloud.instance.driver.vanilla.MonitoringRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new instances_instances_pb.InstancesGroup;
      reader.readMessage(value,instances_instances_pb.InstancesGroup.deserializeBinaryFromReader);
      msg.addGroups(value);
      break;
    case 2:
      var value = new services_providers_services_providers_pb.ServicesProvider;
      reader.readMessage(value,services_providers_services_providers_pb.ServicesProvider.deserializeBinaryFromReader);
      msg.setServicesProvider(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setScheduled(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nocloud.instance.driver.vanilla.MonitoringRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nocloud.instance.driver.vanilla.MonitoringRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nocloud.instance.driver.vanilla.MonitoringRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nocloud.instance.driver.vanilla.MonitoringRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroupsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      instances_instances_pb.InstancesGroup.serializeBinaryToWriter
    );
  }
  f = message.getServicesProvider();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      services_providers_services_providers_pb.ServicesProvider.serializeBinaryToWriter
    );
  }
  f = message.getScheduled();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * repeated nocloud.instances.InstancesGroup groups = 1;
 * @return {!Array<!proto.nocloud.instances.InstancesGroup>}
 */
proto.nocloud.instance.driver.vanilla.MonitoringRequest.prototype.getGroupsList = function() {
  return /** @type{!Array<!proto.nocloud.instances.InstancesGroup>} */ (
    jspb.Message.getRepeatedWrapperField(this, instances_instances_pb.InstancesGroup, 1));
};


/**
 * @param {!Array<!proto.nocloud.instances.InstancesGroup>} value
 * @return {!proto.nocloud.instance.driver.vanilla.MonitoringRequest} returns this
*/
proto.nocloud.instance.driver.vanilla.MonitoringRequest.prototype.setGroupsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.nocloud.instances.InstancesGroup=} opt_value
 * @param {number=} opt_index
 * @return {!proto.nocloud.instances.InstancesGroup}
 */
proto.nocloud.instance.driver.vanilla.MonitoringRequest.prototype.addGroups = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.nocloud.instances.InstancesGroup, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.nocloud.instance.driver.vanilla.MonitoringRequest} returns this
 */
proto.nocloud.instance.driver.vanilla.MonitoringRequest.prototype.clearGroupsList = function() {
  return this.setGroupsList([]);
};


/**
 * optional nocloud.services_providers.ServicesProvider services_provider = 2;
 * @return {?proto.nocloud.services_providers.ServicesProvider}
 */
proto.nocloud.instance.driver.vanilla.MonitoringRequest.prototype.getServicesProvider = function() {
  return /** @type{?proto.nocloud.services_providers.ServicesProvider} */ (
    jspb.Message.getWrapperField(this, services_providers_services_providers_pb.ServicesProvider, 2));
};


/**
 * @param {?proto.nocloud.services_providers.ServicesProvider|undefined} value
 * @return {!proto.nocloud.instance.driver.vanilla.MonitoringRequest} returns this
*/
proto.nocloud.instance.driver.vanilla.MonitoringRequest.prototype.setServicesProvider = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nocloud.instance.driver.vanilla.MonitoringRequest} returns this
 */
proto.nocloud.instance.driver.vanilla.MonitoringRequest.prototype.clearServicesProvider = function() {
  return this.setServicesProvider(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nocloud.instance.driver.vanilla.MonitoringRequest.prototype.hasServicesProvider = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool scheduled = 3;
 * @return {boolean}
 */
proto.nocloud.instance.driver.vanilla.MonitoringRequest.prototype.getScheduled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.nocloud.instance.driver.vanilla.MonitoringRequest} returns this
 */
proto.nocloud.instance.driver.vanilla.MonitoringRequest.prototype.setScheduled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nocloud.instance.driver.vanilla.MonitoringResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.nocloud.instance.driver.vanilla.MonitoringResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nocloud.instance.driver.vanilla.MonitoringResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nocloud.instance.driver.vanilla.MonitoringResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nocloud.instance.driver.vanilla.MonitoringResponse}
 */
proto.nocloud.instance.driver.vanilla.MonitoringResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nocloud.instance.driver.vanilla.MonitoringResponse;
  return proto.nocloud.instance.driver.vanilla.MonitoringResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nocloud.instance.driver.vanilla.MonitoringResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nocloud.instance.driver.vanilla.MonitoringResponse}
 */
proto.nocloud.instance.driver.vanilla.MonitoringResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nocloud.instance.driver.vanilla.MonitoringResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nocloud.instance.driver.vanilla.MonitoringResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nocloud.instance.driver.vanilla.MonitoringResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nocloud.instance.driver.vanilla.MonitoringResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nocloud.instance.driver.vanilla.InvokeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.nocloud.instance.driver.vanilla.InvokeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nocloud.instance.driver.vanilla.InvokeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nocloud.instance.driver.vanilla.InvokeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    instance: (f = msg.getInstance()) && instances_instances_pb.Instance.toObject(includeInstance, f),
    servicesProvider: (f = msg.getServicesProvider()) && services_providers_services_providers_pb.ServicesProvider.toObject(includeInstance, f),
    method: jspb.Message.getFieldWithDefault(msg, 3, ""),
    paramsMap: (f = msg.getParamsMap()) ? f.toObject(includeInstance, proto.google.protobuf.Value.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nocloud.instance.driver.vanilla.InvokeRequest}
 */
proto.nocloud.instance.driver.vanilla.InvokeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nocloud.instance.driver.vanilla.InvokeRequest;
  return proto.nocloud.instance.driver.vanilla.InvokeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nocloud.instance.driver.vanilla.InvokeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nocloud.instance.driver.vanilla.InvokeRequest}
 */
proto.nocloud.instance.driver.vanilla.InvokeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new instances_instances_pb.Instance;
      reader.readMessage(value,instances_instances_pb.Instance.deserializeBinaryFromReader);
      msg.setInstance(value);
      break;
    case 2:
      var value = new services_providers_services_providers_pb.ServicesProvider;
      reader.readMessage(value,services_providers_services_providers_pb.ServicesProvider.deserializeBinaryFromReader);
      msg.setServicesProvider(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMethod(value);
      break;
    case 4:
      var value = msg.getParamsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.google.protobuf.Value.deserializeBinaryFromReader, "", new proto.google.protobuf.Value());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nocloud.instance.driver.vanilla.InvokeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nocloud.instance.driver.vanilla.InvokeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nocloud.instance.driver.vanilla.InvokeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nocloud.instance.driver.vanilla.InvokeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInstance();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      instances_instances_pb.Instance.serializeBinaryToWriter
    );
  }
  f = message.getServicesProvider();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      services_providers_services_providers_pb.ServicesProvider.serializeBinaryToWriter
    );
  }
  f = message.getMethod();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getParamsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.google.protobuf.Value.serializeBinaryToWriter);
  }
};


/**
 * optional nocloud.instances.Instance instance = 1;
 * @return {?proto.nocloud.instances.Instance}
 */
proto.nocloud.instance.driver.vanilla.InvokeRequest.prototype.getInstance = function() {
  return /** @type{?proto.nocloud.instances.Instance} */ (
    jspb.Message.getWrapperField(this, instances_instances_pb.Instance, 1));
};


/**
 * @param {?proto.nocloud.instances.Instance|undefined} value
 * @return {!proto.nocloud.instance.driver.vanilla.InvokeRequest} returns this
*/
proto.nocloud.instance.driver.vanilla.InvokeRequest.prototype.setInstance = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nocloud.instance.driver.vanilla.InvokeRequest} returns this
 */
proto.nocloud.instance.driver.vanilla.InvokeRequest.prototype.clearInstance = function() {
  return this.setInstance(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nocloud.instance.driver.vanilla.InvokeRequest.prototype.hasInstance = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional nocloud.services_providers.ServicesProvider services_provider = 2;
 * @return {?proto.nocloud.services_providers.ServicesProvider}
 */
proto.nocloud.instance.driver.vanilla.InvokeRequest.prototype.getServicesProvider = function() {
  return /** @type{?proto.nocloud.services_providers.ServicesProvider} */ (
    jspb.Message.getWrapperField(this, services_providers_services_providers_pb.ServicesProvider, 2));
};


/**
 * @param {?proto.nocloud.services_providers.ServicesProvider|undefined} value
 * @return {!proto.nocloud.instance.driver.vanilla.InvokeRequest} returns this
*/
proto.nocloud.instance.driver.vanilla.InvokeRequest.prototype.setServicesProvider = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nocloud.instance.driver.vanilla.InvokeRequest} returns this
 */
proto.nocloud.instance.driver.vanilla.InvokeRequest.prototype.clearServicesProvider = function() {
  return this.setServicesProvider(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nocloud.instance.driver.vanilla.InvokeRequest.prototype.hasServicesProvider = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string method = 3;
 * @return {string}
 */
proto.nocloud.instance.driver.vanilla.InvokeRequest.prototype.getMethod = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.nocloud.instance.driver.vanilla.InvokeRequest} returns this
 */
proto.nocloud.instance.driver.vanilla.InvokeRequest.prototype.setMethod = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * map<string, google.protobuf.Value> params = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.google.protobuf.Value>}
 */
proto.nocloud.instance.driver.vanilla.InvokeRequest.prototype.getParamsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.google.protobuf.Value>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      proto.google.protobuf.Value));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.nocloud.instance.driver.vanilla.InvokeRequest} returns this
 */
proto.nocloud.instance.driver.vanilla.InvokeRequest.prototype.clearParamsMap = function() {
  this.getParamsMap().clear();
  return this;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nocloud.instance.driver.vanilla.SpInvokeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.nocloud.instance.driver.vanilla.SpInvokeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nocloud.instance.driver.vanilla.SpInvokeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nocloud.instance.driver.vanilla.SpInvokeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    servicesProvider: (f = msg.getServicesProvider()) && services_providers_services_providers_pb.ServicesProvider.toObject(includeInstance, f),
    method: jspb.Message.getFieldWithDefault(msg, 2, ""),
    paramsMap: (f = msg.getParamsMap()) ? f.toObject(includeInstance, proto.google.protobuf.Value.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nocloud.instance.driver.vanilla.SpInvokeRequest}
 */
proto.nocloud.instance.driver.vanilla.SpInvokeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nocloud.instance.driver.vanilla.SpInvokeRequest;
  return proto.nocloud.instance.driver.vanilla.SpInvokeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nocloud.instance.driver.vanilla.SpInvokeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nocloud.instance.driver.vanilla.SpInvokeRequest}
 */
proto.nocloud.instance.driver.vanilla.SpInvokeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new services_providers_services_providers_pb.ServicesProvider;
      reader.readMessage(value,services_providers_services_providers_pb.ServicesProvider.deserializeBinaryFromReader);
      msg.setServicesProvider(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMethod(value);
      break;
    case 3:
      var value = msg.getParamsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.google.protobuf.Value.deserializeBinaryFromReader, "", new proto.google.protobuf.Value());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nocloud.instance.driver.vanilla.SpInvokeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nocloud.instance.driver.vanilla.SpInvokeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nocloud.instance.driver.vanilla.SpInvokeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nocloud.instance.driver.vanilla.SpInvokeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getServicesProvider();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      services_providers_services_providers_pb.ServicesProvider.serializeBinaryToWriter
    );
  }
  f = message.getMethod();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getParamsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.google.protobuf.Value.serializeBinaryToWriter);
  }
};


/**
 * optional nocloud.services_providers.ServicesProvider services_provider = 1;
 * @return {?proto.nocloud.services_providers.ServicesProvider}
 */
proto.nocloud.instance.driver.vanilla.SpInvokeRequest.prototype.getServicesProvider = function() {
  return /** @type{?proto.nocloud.services_providers.ServicesProvider} */ (
    jspb.Message.getWrapperField(this, services_providers_services_providers_pb.ServicesProvider, 1));
};


/**
 * @param {?proto.nocloud.services_providers.ServicesProvider|undefined} value
 * @return {!proto.nocloud.instance.driver.vanilla.SpInvokeRequest} returns this
*/
proto.nocloud.instance.driver.vanilla.SpInvokeRequest.prototype.setServicesProvider = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nocloud.instance.driver.vanilla.SpInvokeRequest} returns this
 */
proto.nocloud.instance.driver.vanilla.SpInvokeRequest.prototype.clearServicesProvider = function() {
  return this.setServicesProvider(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nocloud.instance.driver.vanilla.SpInvokeRequest.prototype.hasServicesProvider = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string method = 2;
 * @return {string}
 */
proto.nocloud.instance.driver.vanilla.SpInvokeRequest.prototype.getMethod = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.nocloud.instance.driver.vanilla.SpInvokeRequest} returns this
 */
proto.nocloud.instance.driver.vanilla.SpInvokeRequest.prototype.setMethod = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * map<string, google.protobuf.Value> params = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.google.protobuf.Value>}
 */
proto.nocloud.instance.driver.vanilla.SpInvokeRequest.prototype.getParamsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.google.protobuf.Value>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      proto.google.protobuf.Value));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.nocloud.instance.driver.vanilla.SpInvokeRequest} returns this
 */
proto.nocloud.instance.driver.vanilla.SpInvokeRequest.prototype.clearParamsMap = function() {
  this.getParamsMap().clear();
  return this;
};


goog.object.extend(exports, proto.nocloud.instance.driver.vanilla);
