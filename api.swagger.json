{
  "swagger": "2.0",
  "info": {
    "title": "api/api.proto",
    "version": "0.0.0",
    "contact": {
      "name": "NoCloud",
      "url": "https://github.com/slntopp/nocloud",
      "email": "info@slnt-opp.xyz"
    }
  },
  "tags": [
    {
      "name": "AnsibleService"
    },
    {
      "name": "PlaybooksService"
    },
    {
      "name": "RecordsService"
    },
    {
      "name": "BillingService"
    },
    {
      "name": "CurrencyService"
    },
    {
      "name": "ChatService"
    },
    {
      "name": "DNS"
    },
    {
      "name": "ServicesProvidersService"
    },
    {
      "name": "ServicesProvidersExtentionsService"
    },
    {
      "name": "ShowcasesService"
    },
    {
      "name": "InstancesService"
    },
    {
      "name": "ServicesService"
    },
    {
      "name": "DriverService"
    },
    {
      "name": "EdgeService"
    },
    {
      "name": "EventsService"
    },
    {
      "name": "EventsLoggingService"
    },
    {
      "name": "HealthService"
    },
    {
      "name": "InternalProbeService"
    },
    {
      "name": "AccountsService"
    },
    {
      "name": "NamespacesService"
    },
    {
      "name": "SettingsService"
    }
  ],
  "host": "localhost:8000",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json",
    "text/event-stream"
  ],
  "produces": [
    "application/json",
    "text/event-stream"
  ],
  "paths": {
    "/accounts": {
      "get": {
        "operationId": "AccountsService_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/registryaccountsListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "description": "Namespace ID to seek account in",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "depth",
            "description": "Depth",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "AccountsService"
        ]
      },
      "put": {
        "operationId": "AccountsService_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/registryaccountsCreateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/registryaccountsCreateRequest"
            }
          }
        ],
        "tags": [
          "AccountsService"
        ]
      }
    },
    "/accounts/{account}/credentials": {
      "post": {
        "operationId": "AccountsService_SetCredentials",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/accountsSetCredentialsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "account",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "auth": {
                  "$ref": "#/definitions/accountsCredentials"
                }
              }
            }
          }
        ],
        "tags": [
          "AccountsService"
        ]
      }
    },
    "/accounts/{uuid}": {
      "get": {
        "operationId": "AccountsService_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/accountsAccount"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "public",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "AccountsService"
        ]
      },
      "delete": {
        "operationId": "AccountsService_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/registryaccountsDeleteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AccountsService"
        ]
      },
      "patch": {
        "operationId": "AccountsService_Update",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/accountsUpdateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string"
                },
                "data": {
                  "type": "object"
                },
                "balance": {
                  "type": "number",
                  "format": "double"
                },
                "access": {
                  "$ref": "#/definitions/accessAccess"
                },
                "suspendConf": {
                  "$ref": "#/definitions/accountsSuspendConf"
                },
                "suspended": {
                  "type": "boolean"
                },
                "currency": {
                  "$ref": "#/definitions/billingCurrency",
                  "title": "Account Balance Currency"
                }
              }
            }
          }
        ],
        "tags": [
          "AccountsService"
        ]
      }
    },
    "/accounts/{uuid}/suspend": {
      "post": {
        "operationId": "AccountsService_Suspend",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/registryaccountsSuspendResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AccountsService"
        ]
      }
    },
    "/accounts/{uuid}/unsuspend": {
      "post": {
        "operationId": "AccountsService_Unsuspend",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/registryaccountsUnsuspendResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AccountsService"
        ]
      }
    },
    "/ansible/playbooks": {
      "get": {
        "operationId": "PlaybooksService_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ansibleListPlaybooksResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "PlaybooksService"
        ]
      },
      "post": {
        "operationId": "PlaybooksService_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ansibleCreatePlaybookResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ansibleCreatePlaybookRequest"
            }
          }
        ],
        "tags": [
          "PlaybooksService"
        ]
      }
    },
    "/ansible/playbooks/{playbook.uuid}": {
      "post": {
        "operationId": "PlaybooksService_Update",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ansibleUpdatePlaybookResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "playbook.uuid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "playbook": {
                  "type": "object",
                  "properties": {
                    "logo": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string",
                      "title": "Url to or Base64 encoded Image to be used as Playbook logo in the\nMarketplace"
                    },
                    "description": {
                      "type": "string",
                      "title": "Filename for playbook yaml"
                    },
                    "content": {
                      "type": "string",
                      "description": "Ansible Playbook written in YAML",
                      "title": "(optionally Markdown) long description Marketplace like"
                    },
                    "supportedOs": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "title": "List of supported platforms(OS) by this Playbook"
                    }
                  }
                }
              }
            }
          }
        ],
        "tags": [
          "PlaybooksService"
        ]
      }
    },
    "/ansible/playbooks/{uuid}": {
      "get": {
        "operationId": "PlaybooksService_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ansibleGetPlaybookResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "PlaybooksService"
        ]
      },
      "delete": {
        "operationId": "PlaybooksService_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ansibleDeletePlaybookResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "PlaybooksService"
        ]
      }
    },
    "/ansible/runs": {
      "get": {
        "operationId": "AnsibleService_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ansibleRuns"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "AnsibleService"
        ]
      },
      "post": {
        "operationId": "AnsibleService_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ansibleRun"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ansibleCreateRunRequest"
            }
          }
        ],
        "tags": [
          "AnsibleService"
        ]
      }
    },
    "/ansible/runs/{uuid}": {
      "get": {
        "operationId": "AnsibleService_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ansibleRun"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AnsibleService"
        ]
      },
      "delete": {
        "operationId": "AnsibleService_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ansibleDeleteRunResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AnsibleService"
        ]
      }
    },
    "/ansible/runs/{uuid}/exec": {
      "post": {
        "operationId": "AnsibleService_Exec",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ansibleExecRunResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "tags": [
          "AnsibleService"
        ]
      }
    },
    "/ansible/runs/{uuid}/resync": {
      "post": {
        "operationId": "AnsibleService_Resync",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ansibleRun"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AnsibleService"
        ]
      }
    },
    "/ansible/runs/{uuid}/watch": {
      "get": {
        "operationId": "AnsibleService_Watch",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/ansibleJob"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of ansibleJob"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AnsibleService"
        ]
      }
    },
    "/billing/account/{account}/reprocess": {
      "post": {
        "operationId": "BillingService_Reprocess",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/billingTransactions"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "account",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "BillingService"
        ]
      }
    },
    "/billing/count/transactions": {
      "get": {
        "operationId": "BillingService_GetTransactionsCount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/billingGetTransactionsCountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "account",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "service",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "BillingService"
        ]
      }
    },
    "/billing/currencies": {
      "get": {
        "operationId": "CurrencyService_GetCurrencies",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/billingGetCurrenciesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "CurrencyService"
        ]
      }
    },
    "/billing/currencies/convert": {
      "post": {
        "operationId": "CurrencyService_Convert",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/billingConversionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/billingConversionRequest"
            }
          }
        ],
        "tags": [
          "CurrencyService"
        ]
      }
    },
    "/billing/currencies/rates": {
      "get": {
        "operationId": "CurrencyService_GetExchangeRates",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/billingGetExchangeRatesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "CurrencyService"
        ]
      },
      "post": {
        "operationId": "CurrencyService_CreateExchangeRate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/billingCreateExchangeRateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/billingCreateExchangeRateRequest"
            }
          }
        ],
        "tags": [
          "CurrencyService"
        ]
      },
      "put": {
        "operationId": "CurrencyService_UpdateExchangeRate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/billingUpdateExchangeRateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/billingUpdateExchangeRateRequest"
            }
          }
        ],
        "tags": [
          "CurrencyService"
        ]
      }
    },
    "/billing/currencies/rates/{from}/{to}": {
      "get": {
        "operationId": "CurrencyService_GetExchangeRate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/billingGetExchangeRateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "NCU",
              "USD",
              "EUR",
              "BYN",
              "PLN"
            ]
          },
          {
            "name": "to",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "NCU",
              "USD",
              "EUR",
              "BYN",
              "PLN"
            ]
          }
        ],
        "tags": [
          "CurrencyService"
        ]
      },
      "delete": {
        "operationId": "CurrencyService_DeleteExchangeRate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/billingDeleteExchangeRateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "NCU",
              "USD",
              "EUR",
              "BYN",
              "PLN"
            ]
          },
          {
            "name": "to",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "NCU",
              "USD",
              "EUR",
              "BYN",
              "PLN"
            ]
          }
        ],
        "tags": [
          "CurrencyService"
        ]
      }
    },
    "/billing/plans": {
      "get": {
        "operationId": "BillingService_ListPlans",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/nocloudbillingListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "spUuid",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "anonymously",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "BillingService"
        ]
      },
      "put": {
        "operationId": "BillingService_CreatePlan",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/billingPlan"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/billingPlan"
            }
          }
        ],
        "tags": [
          "BillingService"
        ]
      }
    },
    "/billing/plans/instances": {
      "get": {
        "operationId": "BillingService_ListPlansInstances",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/billingListPlansInstancesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "anonymously",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "BillingService"
        ]
      }
    },
    "/billing/plans/{uuid}": {
      "get": {
        "operationId": "BillingService_GetPlan",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/billingPlan"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "title",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "description": "Instance / InstanceGroup type supported by this plan",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "public",
            "description": "if true, then this plan is available for all users",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "kind",
            "description": "dynamic(based on resources) or static(based on products)\n\n - UNKNOWN: Default value; should never be used but will be treated as DYNAMIC",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNKNOWN",
              "DYNAMIC",
              "STATIC"
            ],
            "default": "UNKNOWN"
          },
          {
            "name": "products",
            "description": "Products to make plan pre defined(map key is product key like sm, lg\n\nThis is a request variable of the map type. The query format is \"map_name[key]=value\", e.g. If the map name is Age, the key type is string, and the value type is integer, the query parameter is expressed as Age[\"bob\"]=18",
            "in": "query",
            "required": false
          },
          {
            "name": "meta",
            "description": "or whatever)\n\nThis is a request variable of the map type. The query format is \"map_name[key]=value\", e.g. If the map name is Age, the key type is string, and the value type is integer, the query parameter is expressed as Age[\"bob\"]=18",
            "in": "query",
            "required": false
          },
          {
            "name": "fee.precision",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "fee.round",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "NONE",
              "FLOOR",
              "ROUND",
              "CEIL"
            ],
            "default": "NONE"
          },
          {
            "name": "fee.default",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "double"
          }
        ],
        "tags": [
          "BillingService"
        ]
      },
      "delete": {
        "operationId": "BillingService_DeletePlan",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/billingPlan"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "title",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "description": "Instance / InstanceGroup type supported by this plan",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "public",
            "description": "if true, then this plan is available for all users",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "kind",
            "description": "dynamic(based on resources) or static(based on products)\n\n - UNKNOWN: Default value; should never be used but will be treated as DYNAMIC",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNKNOWN",
              "DYNAMIC",
              "STATIC"
            ],
            "default": "UNKNOWN"
          },
          {
            "name": "products",
            "description": "Products to make plan pre defined(map key is product key like sm, lg\n\nThis is a request variable of the map type. The query format is \"map_name[key]=value\", e.g. If the map name is Age, the key type is string, and the value type is integer, the query parameter is expressed as Age[\"bob\"]=18",
            "in": "query",
            "required": false
          },
          {
            "name": "meta",
            "description": "or whatever)\n\nThis is a request variable of the map type. The query format is \"map_name[key]=value\", e.g. If the map name is Age, the key type is string, and the value type is integer, the query parameter is expressed as Age[\"bob\"]=18",
            "in": "query",
            "required": false
          },
          {
            "name": "fee.precision",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "fee.round",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "NONE",
              "FLOOR",
              "ROUND",
              "CEIL"
            ],
            "default": "NONE"
          },
          {
            "name": "fee.default",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "double"
          }
        ],
        "tags": [
          "BillingService"
        ]
      },
      "patch": {
        "operationId": "BillingService_UpdatePlan",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/billingPlan"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string"
                },
                "type": {
                  "type": "string",
                  "title": "Instance / InstanceGroup type supported by this plan"
                },
                "public": {
                  "type": "boolean",
                  "title": "if true, then this plan is available for all users"
                },
                "kind": {
                  "$ref": "#/definitions/billingPlanKind",
                  "title": "dynamic(based on resources) or static(based on products)"
                },
                "resources": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/billingResourceConf"
                  },
                  "title": "Resources confs to make plan dynamic"
                },
                "products": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/billingProduct"
                  },
                  "title": "Products to make plan pre defined(map key is product key like sm, lg"
                },
                "meta": {
                  "type": "object",
                  "additionalProperties": {},
                  "title": "or whatever)"
                },
                "fee": {
                  "$ref": "#/definitions/billingFee"
                },
                "software": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/ansibleSoftware"
                  }
                }
              }
            }
          }
        ],
        "tags": [
          "BillingService"
        ]
      }
    },
    "/billing/report/{uuid}": {
      "get": {
        "operationId": "BillingService_GetInstanceReport",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/billingGetInstanceReportResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "from",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "to",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "BillingService"
        ]
      }
    },
    "/billing/transactions": {
      "get": {
        "operationId": "BillingService_GetTransactions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/billingTransactions"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "account",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "service",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "field",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "uuid",
            "description": "Get a single Transaction (would embed records too)",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "BillingService"
        ]
      },
      "put": {
        "operationId": "BillingService_CreateTransaction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/billingTransaction"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/billingTransaction"
            }
          }
        ],
        "tags": [
          "BillingService"
        ]
      }
    },
    "/billing/transactions/{uuid}": {
      "get": {
        "operationId": "BillingService_GetRecords",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/billingRecords"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "description": "transaction UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "exec",
            "description": "Timestamp of Transaction planned execution time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "proc",
            "description": "Timestamp of Transaction processing time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "processed",
            "description": "Wether Transaction has been processed(applied to",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "priority",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "NORMAL",
              "URGENT",
              "ADDITIONAL"
            ],
            "default": "NORMAL"
          },
          {
            "name": "account",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "service",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "records",
            "description": "list of records UUIDs",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "total",
            "description": "Transaction total value in NCU",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "meta",
            "description": "Transaction meta data, like\nmeta: {\ntotal: \u003cnumber\u003e // resource \"quantity\", e.g. CPU cores, RAM Mb, Drive\nMb, IP quantity price_atm: \u003cnumber\u003e // hourly price per quant of resouce at\nthe moment, e.g. 1 NCU [other keys]: \u003cany\u003e // for example Drive\nType(SSD/HDD/NVMe/etc)\n}\n\nThis is a request variable of the map type. The query format is \"map_name[key]=value\", e.g. If the map name is Age, the key type is string, and the value type is integer, the query parameter is expressed as Age[\"bob\"]=18",
            "in": "query",
            "required": false
          },
          {
            "name": "currency",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "NCU",
              "USD",
              "EUR",
              "BYN",
              "PLN"
            ],
            "default": "NCU"
          }
        ],
        "tags": [
          "BillingService"
        ]
      },
      "patch": {
        "operationId": "BillingService_UpdateTransaction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/billingUpdateTransactionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "description": "transaction UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "exec": {
                  "type": "string",
                  "format": "int64",
                  "title": "Timestamp of Transaction planned execution time"
                },
                "proc": {
                  "type": "string",
                  "format": "int64",
                  "title": "Timestamp of Transaction processing time"
                },
                "processed": {
                  "type": "boolean",
                  "title": "Wether Transaction has been processed(applied to"
                },
                "priority": {
                  "$ref": "#/definitions/billingPriority"
                },
                "account": {
                  "type": "string"
                },
                "service": {
                  "type": "string"
                },
                "records": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "title": "list of records UUIDs"
                },
                "total": {
                  "type": "number",
                  "format": "double",
                  "title": "Transaction total value in NCU"
                },
                "meta": {
                  "type": "object",
                  "additionalProperties": {},
                  "title": "Transaction meta data, like\nmeta: {\ntotal: \u003cnumber\u003e // resource \"quantity\", e.g. CPU cores, RAM Mb, Drive\nMb, IP quantity price_atm: \u003cnumber\u003e // hourly price per quant of resouce at\nthe moment, e.g. 1 NCU [other keys]: \u003cany\u003e // for example Drive\nType(SSD/HDD/NVMe/etc)\n}"
                },
                "currency": {
                  "$ref": "#/definitions/billingCurrency"
                }
              }
            }
          }
        ],
        "tags": [
          "BillingService"
        ]
      }
    },
    "/bus/cancel": {
      "post": {
        "operationId": "EventsService_Cancel",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/nocloudeventsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/eventsCancelRequest"
            }
          }
        ],
        "tags": [
          "EventsService"
        ]
      }
    },
    "/bus/list/{type}/{uuid}": {
      "get": {
        "operationId": "EventsService_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/nocloudeventsEvents"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "EventsService"
        ]
      }
    },
    "/bus/pub": {
      "post": {
        "operationId": "EventsService_Publish",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/nocloudeventsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/nocloudeventsEvent"
            }
          }
        ],
        "tags": [
          "EventsService"
        ]
      }
    },
    "/bus/sub/{type}/{uuid}": {
      "get": {
        "operationId": "EventsService_Consume",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/nocloudeventsEvent"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of nocloudeventsEvent"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "EventsService"
        ]
      }
    },
    "/chats": {
      "put": {
        "operationId": "ChatService_CreateChat",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ccChat"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ccCreateChatRequest"
            }
          }
        ],
        "tags": [
          "ChatService"
        ]
      },
      "patch": {
        "operationId": "ChatService_UpdateChat",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ccChat"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ccChat"
            }
          }
        ],
        "tags": [
          "ChatService"
        ]
      }
    },
    "/chats/invite": {
      "post": {
        "operationId": "ChatService_Invite",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/nocloudccResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ccInviteChatRequest"
            }
          }
        ],
        "tags": [
          "ChatService"
        ]
      }
    },
    "/chats/{chatUuid}/messages": {
      "get": {
        "operationId": "ChatService_ListChatMessages",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ccListChatMessagesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "chatUuid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ChatService"
        ]
      }
    },
    "/chats/{uuid}": {
      "get": {
        "operationId": "ChatService_GetChat",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ccChat"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ChatService"
        ]
      },
      "delete": {
        "operationId": "ChatService_DeleteChat",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/nocloudccResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ChatService"
        ]
      }
    },
    "/dns": {
      "get": {
        "operationId": "DNS_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/noclouddnsListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "DNS"
        ]
      },
      "put": {
        "operationId": "DNS_Put",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/dnsResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dnsZone"
            }
          }
        ],
        "tags": [
          "DNS"
        ]
      }
    },
    "/dns/{name}": {
      "get": {
        "operationId": "DNS_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/dnsZone"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "locations",
            "description": "This is a request variable of the map type. The query format is \"map_name[key]=value\", e.g. If the map name is Age, the key type is string, and the value type is integer, the query parameter is expressed as Age[\"bob\"]=18",
            "in": "query",
            "required": false
          }
        ],
        "tags": [
          "DNS"
        ]
      },
      "delete": {
        "operationId": "DNS_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/dnsResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "locations",
            "description": "This is a request variable of the map type. The query format is \"map_name[key]=value\", e.g. If the map name is Age, the key type is string, and the value type is integer, the query parameter is expressed as Age[\"bob\"]=18",
            "in": "query",
            "required": false
          }
        ],
        "tags": [
          "DNS"
        ]
      }
    },
    "/health/probe": {
      "post": {
        "operationId": "HealthService_Probe",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/healthProbeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/healthProbeRequest"
            }
          }
        ],
        "tags": [
          "HealthService"
        ]
      }
    },
    "/igs/{uuid}": {
      "post": {
        "operationId": "InstancesService_TransferIG",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/instancesTransferIGResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "service": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "InstancesService"
        ]
      }
    },
    "/instances/{uuid}": {
      "delete": {
        "operationId": "InstancesService_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/nocloudinstancesDeleteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "InstancesService"
        ]
      },
      "post": {
        "operationId": "InstancesService_TransferInstance",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/instancesTransferInstanceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ig": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "InstancesService"
        ]
      }
    },
    "/instances/{uuid}/invoke": {
      "post": {
        "operationId": "InstancesService_Invoke",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/nocloudinstancesInvokeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "additionalProperties": {}
                }
              }
            }
          }
        ],
        "tags": [
          "InstancesService"
        ]
      }
    },
    "/logging": {
      "post": {
        "operationId": "EventsLoggingService_GetEvents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/nocloudevents_loggingEvents"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/events_loggingGetEventsRequest"
            }
          }
        ],
        "tags": [
          "EventsLoggingService"
        ]
      }
    },
    "/logging/count": {
      "post": {
        "operationId": "EventsLoggingService_GetCount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/events_loggingGetEventsCountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/events_loggingGetEventsCountRequest"
            }
          }
        ],
        "tags": [
          "EventsLoggingService"
        ]
      }
    },
    "/messages": {
      "put": {
        "operationId": "ChatService_SendChatMessage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ccChatMessage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ccSendChatMessageRequest"
            }
          }
        ],
        "tags": [
          "ChatService"
        ]
      },
      "patch": {
        "operationId": "ChatService_UpdateChatMessage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ccChatMessage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ccChatMessage"
            }
          }
        ],
        "tags": [
          "ChatService"
        ]
      }
    },
    "/messages/{uuid}": {
      "get": {
        "operationId": "ChatService_GetChatMessage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ccChatMessage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ChatService"
        ]
      },
      "delete": {
        "operationId": "ChatService_DeleteChatMessage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/nocloudccResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ChatService"
        ]
      }
    },
    "/messages/{uuid}/stream": {
      "get": {
        "operationId": "ChatService_Stream",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/ccChatMessage"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of ccChatMessage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ChatService"
        ]
      }
    },
    "/namespaces": {
      "get": {
        "operationId": "NamespacesService_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/registrynamespacesListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "depth",
            "description": "Depth",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "NamespacesService"
        ]
      },
      "put": {
        "operationId": "NamespacesService_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/registrynamespacesCreateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/registrynamespacesCreateRequest"
            }
          }
        ],
        "tags": [
          "NamespacesService"
        ]
      }
    },
    "/namespaces/{namespace}/join": {
      "post": {
        "operationId": "NamespacesService_Join",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/namespacesJoinResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "account": {
                  "type": "string"
                },
                "access": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Account access level to namespace"
                }
              }
            }
          }
        ],
        "tags": [
          "NamespacesService"
        ]
      }
    },
    "/namespaces/{namespace}/link": {
      "post": {
        "operationId": "NamespacesService_Link",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/namespacesLinkResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "account": {
                  "type": "string"
                },
                "access": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Account access level to namespace"
                },
                "role": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "NamespacesService"
        ]
      }
    },
    "/namespaces/{uuid}": {
      "delete": {
        "operationId": "NamespacesService_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/registrynamespacesDeleteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "NamespacesService"
        ]
      },
      "patch": {
        "operationId": "NamespacesService_Patch",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/namespacesPatchResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "NamespacesService"
        ]
      }
    },
    "/services": {
      "get": {
        "operationId": "ServicesService_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/servicesServices"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "showDeleted",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "depth",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ServicesService"
        ]
      },
      "post": {
        "operationId": "ServicesService_TestConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/servicesTestConfigResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/nocloudservicesCreateRequest"
            }
          }
        ],
        "tags": [
          "ServicesService"
        ]
      },
      "put": {
        "operationId": "ServicesService_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/servicesService"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/nocloudservicesCreateRequest"
            }
          }
        ],
        "tags": [
          "ServicesService"
        ]
      }
    },
    "/services/{uuid}": {
      "get": {
        "operationId": "ServicesService_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/servicesService"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "showDeleted",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ServicesService"
        ]
      },
      "delete": {
        "operationId": "ServicesService_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/nocloudservicesDeleteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ServicesService"
        ]
      },
      "patch": {
        "operationId": "ServicesService_Update",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/servicesService"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "version": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "status": {
                  "$ref": "#/definitions/statusesNoCloudStatus"
                },
                "context": {
                  "type": "object",
                  "additionalProperties": {}
                },
                "instancesGroups": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/instancesInstancesGroup"
                  }
                },
                "hash": {
                  "type": "string"
                },
                "access": {
                  "$ref": "#/definitions/accessAccess"
                }
              }
            }
          }
        ],
        "tags": [
          "ServicesService"
        ]
      }
    },
    "/services/{uuid}/down": {
      "post": {
        "operationId": "ServicesService_Down",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/nocloudservicesDownResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "tags": [
          "ServicesService"
        ]
      }
    },
    "/services/{uuid}/stream": {
      "get": {
        "operationId": "ServicesService_Stream",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/statesObjectState"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of statesObjectState"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ServicesService"
        ]
      }
    },
    "/services/{uuid}/suspend": {
      "post": {
        "operationId": "ServicesService_Suspend",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/nocloudservicesSuspendResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "tags": [
          "ServicesService"
        ]
      }
    },
    "/services/{uuid}/unsuspend": {
      "post": {
        "operationId": "ServicesService_Unsuspend",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/nocloudservicesUnsuspendResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "tags": [
          "ServicesService"
        ]
      }
    },
    "/services/{uuid}/up": {
      "post": {
        "operationId": "ServicesService_Up",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/nocloudservicesUpResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "tags": [
          "ServicesService"
        ]
      }
    },
    "/settings": {
      "get": {
        "operationId": "SettingsService_Keys",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/settingsKeysResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "SettingsService"
        ]
      },
      "post": {
        "operationId": "SettingsService_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/nocloudsettingsGetRequest"
            }
          }
        ],
        "tags": [
          "SettingsService"
        ]
      }
    },
    "/settings/watch": {
      "get": {
        "operationId": "SettingsService_Sub",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/settingsKeyEvent"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of settingsKeyEvent"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "keys",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "SettingsService"
        ]
      }
    },
    "/settings/{key}": {
      "delete": {
        "operationId": "SettingsService_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/nocloudsettingsDeleteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "SettingsService"
        ]
      },
      "put": {
        "operationId": "SettingsService_Put",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/settingsPutResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "public": {
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "tags": [
          "SettingsService"
        ]
      }
    },
    "/showcases": {
      "get": {
        "operationId": "ShowcasesService_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/services_providersShowcases"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "anonymously",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "ShowcasesService"
        ]
      },
      "post": {
        "operationId": "ShowcasesService_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/services_providersShowcase"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/services_providersShowcase"
            }
          }
        ],
        "tags": [
          "ShowcasesService"
        ]
      }
    },
    "/showcases/{uuid}": {
      "get": {
        "operationId": "ShowcasesService_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/services_providersShowcase"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ShowcasesService"
        ]
      },
      "delete": {
        "operationId": "ShowcasesService_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/nocloudservices_providersDeleteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ShowcasesService"
        ]
      },
      "patch": {
        "operationId": "ShowcasesService_Update",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/services_providersShowcase"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string"
                },
                "icon": {
                  "type": "string"
                },
                "plans": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/billingPlan"
                  }
                },
                "servicesProviders": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/services_providersServicesProvider"
                  }
                },
                "locations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/services_providersLocationConf"
                  }
                },
                "promo": {}
              }
            }
          }
        ],
        "tags": [
          "ShowcasesService"
        ]
      }
    },
    "/sp": {
      "get": {
        "operationId": "ServicesProvidersService_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/nocloudservices_providersListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "anonymously",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "ServicesProvidersService"
        ]
      },
      "post": {
        "operationId": "ServicesProvidersService_Test",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/nocloudservices_providersTestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/services_providersServicesProvider"
            }
          }
        ],
        "tags": [
          "ServicesProvidersService"
        ]
      },
      "put": {
        "operationId": "ServicesProvidersService_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/services_providersServicesProvider"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/services_providersServicesProvider"
            }
          }
        ],
        "tags": [
          "ServicesProvidersService"
        ]
      }
    },
    "/sp-ext": {
      "get": {
        "operationId": "ServicesProvidersService_ListExtentions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/services_providersListExtentionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "anonymously",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "ServicesProvidersService"
        ]
      }
    },
    "/sp-prep": {
      "post": {
        "operationId": "ServicesProvidersService_Prep",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/services_providersPrepSP"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/services_providersPrepSP"
            }
          }
        ],
        "tags": [
          "ServicesProvidersService"
        ]
      }
    },
    "/sp/{uuid}": {
      "get": {
        "operationId": "ServicesProvidersService_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/services_providersServicesProvider"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ServicesProvidersService"
        ]
      },
      "delete": {
        "operationId": "ServicesProvidersService_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/nocloudservices_providersDeleteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ServicesProvidersService"
        ]
      },
      "patch": {
        "operationId": "ServicesProvidersService_Update",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/services_providersServicesProvider"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "secrets": {
                  "type": "object",
                  "additionalProperties": {},
                  "title": "json"
                },
                "vars": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/services_providersVar"
                  }
                },
                "extentions": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "state": {
                  "$ref": "#/definitions/statesState"
                },
                "publicData": {
                  "type": "object",
                  "additionalProperties": {}
                },
                "public": {
                  "type": "boolean",
                  "title": "If set to true, the provider will be visible to all users"
                },
                "proxy": {
                  "$ref": "#/definitions/services_providersProxyConf"
                },
                "locations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/services_providersLocationConf"
                  }
                },
                "access": {
                  "$ref": "#/definitions/accessAccess"
                },
                "meta": {
                  "type": "object",
                  "additionalProperties": {}
                }
              }
            }
          }
        ],
        "tags": [
          "ServicesProvidersService"
        ]
      }
    },
    "/sp/{uuid}/bind_plan": {
      "post": {
        "operationId": "ServicesProvidersService_BindPlan",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/services_providersBindPlanResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "plans": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "tags": [
          "ServicesProvidersService"
        ]
      }
    },
    "/sp/{uuid}/invoke": {
      "post": {
        "operationId": "ServicesProvidersService_Invoke",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/nocloudservices_providersInvokeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "additionalProperties": {}
                }
              }
            }
          }
        ],
        "tags": [
          "ServicesProvidersService"
        ]
      }
    },
    "/sp/{uuid}/unbind_plan": {
      "post": {
        "operationId": "ServicesProvidersService_UnbindPlan",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/services_providersUnbindPlanResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "plans": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "tags": [
          "ServicesProvidersService"
        ]
      }
    },
    "/token": {
      "post": {
        "operationId": "AccountsService_Token",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/accountsTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/accountsTokenRequest"
            }
          }
        ],
        "tags": [
          "AccountsService"
        ]
      }
    }
  },
  "definitions": {
    "KeysResponseKey": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "public": {
          "type": "boolean"
        }
      }
    },
    "RecordA": {
      "type": "object",
      "properties": {
        "ip": {
          "type": "string"
        },
        "ttl": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "RecordAAAA": {
      "type": "object",
      "properties": {
        "ip": {
          "type": "string"
        },
        "ttl": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "RecordCNAME": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        },
        "ttl": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "RecordTXT": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string"
        },
        "ttl": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "accessAccess": {
      "type": "object",
      "properties": {
        "level": {
          "$ref": "#/definitions/accessLevel"
        },
        "role": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        }
      }
    },
    "accessLevel": {
      "type": "string",
      "enum": [
        "NONE",
        "READ",
        "MGMT",
        "ADMIN",
        "ROOT"
      ],
      "default": "NONE"
    },
    "accountsAccount": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "data": {
          "type": "object"
        },
        "balance": {
          "type": "number",
          "format": "double"
        },
        "access": {
          "$ref": "#/definitions/accessAccess"
        },
        "suspendConf": {
          "$ref": "#/definitions/accountsSuspendConf"
        },
        "suspended": {
          "type": "boolean"
        },
        "currency": {
          "$ref": "#/definitions/billingCurrency",
          "title": "Account Balance Currency"
        }
      }
    },
    "accountsCredentials": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "accountsSetCredentialsResponse": {
      "type": "object",
      "properties": {
        "result": {
          "type": "boolean"
        }
      }
    },
    "accountsSuspendConf": {
      "type": "object",
      "properties": {
        "immune": {
          "type": "boolean"
        },
        "limit": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "accountsTokenRequest": {
      "type": "object",
      "properties": {
        "auth": {
          "$ref": "#/definitions/accountsCredentials"
        },
        "exp": {
          "type": "integer",
          "format": "int32"
        },
        "rootClaim": {
          "type": "boolean"
        },
        "spClaim": {
          "type": "string"
        },
        "instanceClaim": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      }
    },
    "accountsTokenResponse": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        }
      }
    },
    "accountsUpdateResponse": {
      "type": "object",
      "properties": {
        "result": {
          "type": "boolean"
        }
      }
    },
    "ansibleCreatePlaybookRequest": {
      "type": "object",
      "properties": {
        "playbook": {
          "$ref": "#/definitions/ansiblePlaybook"
        }
      }
    },
    "ansibleCreatePlaybookResponse": {
      "type": "object",
      "properties": {
        "playbook": {
          "$ref": "#/definitions/ansiblePlaybook"
        }
      }
    },
    "ansibleCreateRunRequest": {
      "type": "object",
      "properties": {
        "run": {
          "$ref": "#/definitions/ansibleRun"
        },
        "namespace": {
          "type": "string"
        }
      }
    },
    "ansibleDeletePlaybookResponse": {
      "type": "object"
    },
    "ansibleDeleteRunResponse": {
      "type": "object"
    },
    "ansibleExecRunResponse": {
      "type": "object"
    },
    "ansibleGetPlaybookResponse": {
      "type": "object",
      "properties": {
        "playbook": {
          "$ref": "#/definitions/ansiblePlaybook"
        }
      }
    },
    "ansibleJob": {
      "type": "object",
      "properties": {
        "runUuid": {
          "type": "string"
        },
        "jobUuid": {
          "type": "string"
        },
        "job": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "rc": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "ansibleListPlaybooksResponse": {
      "type": "object",
      "properties": {
        "playbooks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ansiblePlaybook"
          }
        }
      }
    },
    "ansiblePlaybook": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "logo": {
          "type": "string"
        },
        "title": {
          "type": "string",
          "title": "Url to or Base64 encoded Image to be used as Playbook logo in the\nMarketplace"
        },
        "description": {
          "type": "string",
          "title": "Filename for playbook yaml"
        },
        "content": {
          "type": "string",
          "description": "Ansible Playbook written in YAML",
          "title": "(optionally Markdown) long description Marketplace like"
        },
        "supportedOs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "List of supported platforms(OS) by this Playbook"
        }
      }
    },
    "ansibleRun": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "title": "Run UUID generated by Ansible Runner"
        },
        "instances": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/nocloudansibleInstance"
          },
          "title": "Instances to run Playbook at"
        },
        "playbookUuid": {
          "type": "string",
          "title": "Playbook to run"
        },
        "jobs": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "status": {
          "type": "string"
        },
        "rc": {
          "type": "string",
          "format": "int64"
        },
        "sshKey": {
          "type": "string",
          "title": "Use custom Private Key for SSH (applied to all Instances, can be\noverriden only with login/pass)"
        },
        "access": {
          "$ref": "#/definitions/accessAccess"
        },
        "createTime": {
          "type": "string",
          "format": "int64"
        },
        "execTime": {
          "type": "string",
          "format": "int64"
        },
        "vars": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ansibleRuns": {
      "type": "object",
      "properties": {
        "pool": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ansibleRun"
          }
        }
      }
    },
    "ansibleSoftware": {
      "type": "object",
      "properties": {
        "playbook": {
          "type": "string",
          "title": "Playbook UUID"
        },
        "vars": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Playbook Vars"
        },
        "autorun": {
          "type": "boolean",
          "title": "Automatically run Playbooks once Instance is RUNNING"
        },
        "run": {
          "type": "string",
          "title": "Run UUID when created"
        },
        "done": {
          "type": "boolean",
          "title": "Is Playbook finished"
        }
      },
      "title": "Required for Billing Plans and Instances first run"
    },
    "ansibleUpdatePlaybookResponse": {
      "type": "object",
      "properties": {
        "playbook": {
          "$ref": "#/definitions/ansiblePlaybook"
        }
      }
    },
    "billingConversionRequest": {
      "type": "object",
      "properties": {
        "from": {
          "$ref": "#/definitions/billingCurrency"
        },
        "to": {
          "$ref": "#/definitions/billingCurrency"
        },
        "amount": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "billingConversionResponse": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "billingCostEstimation": {
      "type": "object",
      "properties": {
        "resources": {
          "type": "object",
          "additionalProperties": {
            "type": "number",
            "format": "double"
          }
        },
        "product": {
          "type": "number",
          "format": "double"
        },
        "total": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "billingCreateExchangeRateRequest": {
      "type": "object",
      "properties": {
        "from": {
          "$ref": "#/definitions/billingCurrency"
        },
        "to": {
          "$ref": "#/definitions/billingCurrency"
        },
        "rate": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "billingCreateExchangeRateResponse": {
      "type": "object"
    },
    "billingCurrency": {
      "type": "string",
      "enum": [
        "NCU",
        "USD",
        "EUR",
        "BYN",
        "PLN"
      ],
      "default": "NCU"
    },
    "billingDeleteExchangeRateResponse": {
      "type": "object"
    },
    "billingFee": {
      "type": "object",
      "properties": {
        "precision": {
          "type": "string",
          "format": "int64"
        },
        "round": {
          "$ref": "#/definitions/billingRound"
        },
        "default": {
          "type": "number",
          "format": "double"
        },
        "ranges": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/billingFeeRange"
          }
        }
      }
    },
    "billingFeeRange": {
      "type": "object",
      "properties": {
        "from": {
          "type": "number",
          "format": "double"
        },
        "to": {
          "type": "number",
          "format": "double"
        },
        "factor": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "billingGetCurrenciesResponse": {
      "type": "object",
      "properties": {
        "currencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/billingCurrency"
          }
        }
      }
    },
    "billingGetExchangeRateResponse": {
      "type": "object",
      "properties": {
        "from": {
          "$ref": "#/definitions/billingCurrency"
        },
        "to": {
          "$ref": "#/definitions/billingCurrency"
        },
        "rate": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "billingGetExchangeRatesResponse": {
      "type": "object",
      "properties": {
        "rates": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/billingGetExchangeRateResponse"
          }
        }
      }
    },
    "billingGetInstanceReportResponse": {
      "type": "object",
      "properties": {
        "total": {
          "type": "string",
          "format": "int64"
        },
        "currency": {
          "$ref": "#/definitions/billingCurrency"
        }
      }
    },
    "billingGetTransactionsCountResponse": {
      "type": "object",
      "properties": {
        "total": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "billingKind": {
      "type": "string",
      "enum": [
        "UNSPECIFIED",
        "POSTPAID",
        "PREPAID"
      ],
      "default": "UNSPECIFIED",
      "title": "- UNSPECIFIED: Shall never be used, requests will be rejected\n - POSTPAID: Transaction must be processed based on End time\n - PREPAID: Transaction must be processed based on Start time"
    },
    "billingListPlansInstancesResponse": {
      "type": "object",
      "properties": {
        "plans": {
          "type": "object",
          "additionalProperties": {}
        }
      }
    },
    "billingPlan": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "title": "Instance / InstanceGroup type supported by this plan"
        },
        "public": {
          "type": "boolean",
          "title": "if true, then this plan is available for all users"
        },
        "kind": {
          "$ref": "#/definitions/billingPlanKind",
          "title": "dynamic(based on resources) or static(based on products)"
        },
        "resources": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/billingResourceConf"
          },
          "title": "Resources confs to make plan dynamic"
        },
        "products": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/billingProduct"
          },
          "title": "Products to make plan pre defined(map key is product key like sm, lg"
        },
        "meta": {
          "type": "object",
          "additionalProperties": {},
          "title": "or whatever)"
        },
        "fee": {
          "$ref": "#/definitions/billingFee"
        },
        "software": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ansibleSoftware"
          }
        }
      }
    },
    "billingPlanKind": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "DYNAMIC",
        "STATIC"
      ],
      "default": "UNKNOWN",
      "title": "- UNKNOWN: Default value; should never be used but will be treated as DYNAMIC"
    },
    "billingPriority": {
      "type": "string",
      "enum": [
        "NORMAL",
        "URGENT",
        "ADDITIONAL"
      ],
      "default": "NORMAL"
    },
    "billingProduct": {
      "type": "object",
      "properties": {
        "kind": {
          "$ref": "#/definitions/billingKind"
        },
        "title": {
          "type": "string",
          "title": "Product title"
        },
        "price": {
          "type": "number",
          "format": "double",
          "title": "Product price in NCU per period"
        },
        "period": {
          "type": "string",
          "format": "int64"
        },
        "resources": {
          "type": "object",
          "additionalProperties": {},
          "title": "Map of resources keys to fixed units amount"
        },
        "meta": {
          "type": "object",
          "additionalProperties": {}
        },
        "sorter": {
          "type": "integer",
          "format": "int32",
          "title": "Sorting order, might be needed in UIs"
        }
      }
    },
    "billingRecords": {
      "type": "object",
      "properties": {
        "pool": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/nocloudbillingRecord"
          }
        }
      }
    },
    "billingResourceConf": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "kind": {
          "$ref": "#/definitions/billingKind"
        },
        "price": {
          "type": "number",
          "format": "double",
          "title": "Price in NCU per period"
        },
        "period": {
          "type": "string",
          "format": "int64",
          "title": "if set to 0, then it's a one-time payment"
        },
        "except": {
          "type": "boolean",
          "title": "If except set to true then transaction will be created if Instance is in\none of the states listed in on If except set to false then transaction will\nbe created if Instance is NOT in one of the states listed in on"
        },
        "on": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/statesNoCloudState"
          }
        },
        "fee": {
          "$ref": "#/definitions/billingFee"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "billingRound": {
      "type": "string",
      "enum": [
        "NONE",
        "FLOOR",
        "ROUND",
        "CEIL"
      ],
      "default": "NONE"
    },
    "billingTransaction": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "title": "transaction UUID"
        },
        "exec": {
          "type": "string",
          "format": "int64",
          "title": "Timestamp of Transaction planned execution time"
        },
        "proc": {
          "type": "string",
          "format": "int64",
          "title": "Timestamp of Transaction processing time"
        },
        "processed": {
          "type": "boolean",
          "title": "Wether Transaction has been processed(applied to"
        },
        "priority": {
          "$ref": "#/definitions/billingPriority"
        },
        "account": {
          "type": "string"
        },
        "service": {
          "type": "string"
        },
        "records": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "list of records UUIDs"
        },
        "total": {
          "type": "number",
          "format": "double",
          "title": "Transaction total value in NCU"
        },
        "meta": {
          "type": "object",
          "additionalProperties": {},
          "title": "Transaction meta data, like\nmeta: {\ntotal: \u003cnumber\u003e // resource \"quantity\", e.g. CPU cores, RAM Mb, Drive\nMb, IP quantity price_atm: \u003cnumber\u003e // hourly price per quant of resouce at\nthe moment, e.g. 1 NCU [other keys]: \u003cany\u003e // for example Drive\nType(SSD/HDD/NVMe/etc)\n}"
        },
        "currency": {
          "$ref": "#/definitions/billingCurrency"
        }
      }
    },
    "billingTransactions": {
      "type": "object",
      "properties": {
        "pool": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/billingTransaction"
          }
        }
      }
    },
    "billingUpdateExchangeRateRequest": {
      "type": "object",
      "properties": {
        "from": {
          "$ref": "#/definitions/billingCurrency"
        },
        "to": {
          "$ref": "#/definitions/billingCurrency"
        },
        "rate": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "billingUpdateExchangeRateResponse": {
      "type": "object"
    },
    "billingUpdateTransactionResponse": {
      "type": "object",
      "properties": {
        "result": {
          "type": "boolean"
        }
      }
    },
    "ccChat": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "ccChatMessage": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "from": {
          "type": "string"
        },
        "to": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "meta": {
          "type": "object",
          "additionalProperties": {}
        }
      }
    },
    "ccCreateChatRequest": {
      "type": "object",
      "properties": {
        "chat": {
          "$ref": "#/definitions/ccChat"
        }
      }
    },
    "ccInviteChatRequest": {
      "type": "object",
      "properties": {
        "chatUuid": {
          "type": "string"
        },
        "userUuid": {
          "type": "string"
        }
      }
    },
    "ccListChatMessagesResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ccChatMessage"
          }
        }
      }
    },
    "ccSendChatMessageRequest": {
      "type": "object",
      "properties": {
        "message": {
          "$ref": "#/definitions/ccChatMessage"
        },
        "entities": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "dnsResult": {
      "type": "object",
      "properties": {
        "result": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "dnsZone": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "locations": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/noclouddnsRecord"
          }
        }
      }
    },
    "drivervanillaDownResponse": {
      "type": "object",
      "properties": {
        "group": {
          "$ref": "#/definitions/instancesInstancesGroup"
        }
      }
    },
    "drivervanillaGetTypeResponse": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        }
      }
    },
    "drivervanillaUpResponse": {
      "type": "object",
      "properties": {
        "group": {
          "$ref": "#/definitions/instancesInstancesGroup"
        }
      }
    },
    "edgeEmpty": {
      "type": "object"
    },
    "eventsCancelRequest": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "events_loggingGetEventsCountRequest": {
      "type": "object",
      "properties": {
        "requestor": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "filters": {
          "type": "object",
          "additionalProperties": {}
        }
      }
    },
    "events_loggingGetEventsCountResponse": {
      "type": "object",
      "properties": {
        "total": {
          "type": "string",
          "format": "uint64"
        },
        "unique": {}
      }
    },
    "events_loggingGetEventsRequest": {
      "type": "object",
      "properties": {
        "requestor": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "page": {
          "type": "string",
          "format": "int64"
        },
        "limit": {
          "type": "string",
          "format": "int64"
        },
        "field": {
          "type": "string"
        },
        "sort": {
          "type": "string"
        },
        "filters": {
          "type": "object",
          "additionalProperties": {}
        }
      }
    },
    "events_loggingSnapshot": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "diff": {
          "type": "string"
        }
      }
    },
    "googlerpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "healthProbeRequest": {
      "type": "object",
      "properties": {
        "probeType": {
          "type": "string"
        },
        "payload": {
          "type": "string"
        }
      }
    },
    "healthProbeResponse": {
      "type": "object",
      "properties": {
        "response": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/nocloudhealthStatus"
        },
        "serving": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/healthServingStatus"
          }
        },
        "routines": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/healthRoutineStatus"
          }
        }
      }
    },
    "healthRoutineStatus": {
      "type": "object",
      "properties": {
        "routine": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/healthServingStatus"
        },
        "lastExecution": {
          "type": "string"
        }
      }
    },
    "healthRoutinesStatus": {
      "type": "object",
      "properties": {
        "routines": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/healthRoutineStatus"
          }
        }
      }
    },
    "healthServingStatus": {
      "type": "object",
      "properties": {
        "service": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/nocloudhealthStatus"
        },
        "error": {
          "type": "string"
        }
      }
    },
    "instancesInstanceCostEstimation": {
      "type": "object",
      "properties": {
        "downPayment": {
          "$ref": "#/definitions/billingCostEstimation"
        },
        "general": {
          "$ref": "#/definitions/billingCostEstimation"
        }
      }
    },
    "instancesInstancesGroup": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/statusesNoCloudStatus"
        },
        "config": {
          "type": "object",
          "additionalProperties": {}
        },
        "instances": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/nocloudinstancesInstance"
          }
        },
        "resources": {
          "type": "object",
          "additionalProperties": {}
        },
        "data": {
          "type": "object",
          "additionalProperties": {}
        },
        "hash": {
          "type": "string"
        },
        "sp": {
          "type": "string"
        },
        "access": {
          "$ref": "#/definitions/accessAccess"
        }
      }
    },
    "instancesTestInstancesGroupConfigError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "instance": {
          "type": "string"
        }
      }
    },
    "instancesTestInstancesGroupConfigResponse": {
      "type": "object",
      "properties": {
        "result": {
          "type": "boolean"
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/instancesTestInstancesGroupConfigError"
          }
        },
        "estimations": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/instancesInstanceCostEstimation"
          }
        }
      }
    },
    "instancesTransferIGResponse": {
      "type": "object",
      "properties": {
        "result": {
          "type": "boolean"
        },
        "meta": {
          "type": "object",
          "additionalProperties": {}
        }
      }
    },
    "instancesTransferInstanceResponse": {
      "type": "object",
      "properties": {
        "result": {
          "type": "boolean"
        },
        "meta": {
          "type": "object",
          "additionalProperties": {}
        }
      }
    },
    "namespacesJoinResponse": {
      "type": "object",
      "properties": {
        "result": {
          "type": "boolean"
        }
      }
    },
    "namespacesLinkResponse": {
      "type": "object",
      "properties": {
        "result": {
          "type": "boolean"
        }
      }
    },
    "namespacesNamespace": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "access": {
          "$ref": "#/definitions/accessAccess"
        },
        "meta": {
          "type": "object",
          "additionalProperties": {}
        }
      }
    },
    "namespacesPatchResponse": {
      "type": "object",
      "properties": {
        "result": {
          "type": "boolean"
        }
      }
    },
    "nocloudansibleInstance": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "title": "NoCloud Instance UUID"
        },
        "host": {
          "type": "string",
          "description": "SSH accessible hostname(hostname, IP addr, domain name)",
          "title": "SSH Setup"
        },
        "port": {
          "type": "string",
          "title": "SSH port"
        },
        "user": {
          "type": "string",
          "title": "SSH User"
        },
        "pass": {
          "type": "string",
          "title": "SSH Password"
        }
      }
    },
    "nocloudbillingListResponse": {
      "type": "object",
      "properties": {
        "pool": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/billingPlan"
          }
        }
      }
    },
    "nocloudbillingRecord": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "title": "Record UUID"
        },
        "start": {
          "type": "string",
          "format": "int64",
          "title": "Timestamp of Record coverage frame start"
        },
        "end": {
          "type": "string",
          "format": "int64",
          "title": "Timestamp of Record coverage frame end"
        },
        "exec": {
          "type": "string",
          "format": "int64",
          "title": "Time when Record must be processed"
        },
        "processed": {
          "type": "boolean",
          "title": "Wether Record has been processed(converted to Transaction)"
        },
        "priority": {
          "$ref": "#/definitions/billingPriority"
        },
        "instance": {
          "type": "string",
          "title": "Instance UUID"
        },
        "state": {
          "$ref": "#/definitions/statesNoCloudState",
          "title": "Instance state"
        },
        "resource": {
          "type": "string",
          "title": "Resource key"
        },
        "product": {
          "type": "string",
          "title": "Product key"
        },
        "total": {
          "type": "number",
          "format": "double",
          "title": "Record total value in NCU"
        },
        "meta": {
          "type": "object",
          "additionalProperties": {},
          "title": "Record meta data, like\nmeta: {\ntotal: \u003cnumber\u003e // resource \"quantity\", e.g. CPU cores, RAM Mb, Drive\nMb, IP quantity price_atm: \u003cnumber\u003e // hourly price per quant of resouce at\nthe moment, e.g. 1 NCU [other keys]: \u003cany\u003e // for example Drive\nType(SSD/HDD/NVMe/etc)\n}"
        },
        "currency": {
          "$ref": "#/definitions/billingCurrency"
        }
      }
    },
    "nocloudccResponse": {
      "type": "object"
    },
    "noclouddnsListResponse": {
      "type": "object",
      "properties": {
        "zones": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "noclouddnsRecord": {
      "type": "object",
      "properties": {
        "a": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/RecordA"
          }
        },
        "aaaa": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/RecordAAAA"
          }
        },
        "cname": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/RecordCNAME"
          }
        },
        "txt": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/RecordTXT"
          }
        }
      }
    },
    "nocloudedgeTestResponse": {
      "type": "object",
      "properties": {
        "result": {
          "type": "boolean"
        },
        "error": {
          "type": "string"
        }
      }
    },
    "nocloudeventsEvent": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "uuid": {
          "type": "string",
          "title": "Entity uuid e.g. Account, Instance"
        },
        "id": {
          "type": "string",
          "title": "Event id"
        },
        "key": {
          "type": "string"
        },
        "data": {
          "type": "object",
          "additionalProperties": {}
        },
        "ts": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "nocloudeventsEvents": {
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/nocloudeventsEvent"
          }
        }
      }
    },
    "nocloudeventsResponse": {
      "type": "object"
    },
    "nocloudevents_loggingEvent": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "entity": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "scope": {
          "type": "string"
        },
        "action": {
          "type": "string"
        },
        "rc": {
          "type": "integer",
          "format": "int32"
        },
        "requestor": {
          "type": "string"
        },
        "ts": {
          "type": "string",
          "format": "int64"
        },
        "snapshot": {
          "$ref": "#/definitions/events_loggingSnapshot"
        }
      }
    },
    "nocloudevents_loggingEvents": {
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/nocloudevents_loggingEvent"
          }
        },
        "count": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "nocloudhealthStatus": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "SERVING",
        "OFFLINE",
        "RUNNING",
        "STOPPED",
        "INTERNAL",
        "HASERRS",
        "NOEXIST"
      ],
      "default": "UNKNOWN",
      "title": "- SERVING: Service is up and running\n - OFFLINE: Service is offline(down)\n - RUNNING: Routine is running\n - STOPPED: Routine is stopped\n - INTERNAL: Internal error while making status\n - HASERRS: Check has errors\n - NOEXIST: Service has no Routines"
    },
    "nocloudinstancesDeleteResponse": {
      "type": "object",
      "properties": {
        "result": {
          "type": "boolean"
        },
        "meta": {
          "type": "object",
          "additionalProperties": {}
        }
      }
    },
    "nocloudinstancesInstance": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/statusesNoCloudStatus"
        },
        "config": {
          "type": "object",
          "additionalProperties": {}
        },
        "resources": {
          "type": "object",
          "additionalProperties": {}
        },
        "data": {
          "type": "object",
          "additionalProperties": {}
        },
        "state": {
          "$ref": "#/definitions/statesState"
        },
        "hash": {
          "type": "string"
        },
        "billingPlan": {
          "$ref": "#/definitions/billingPlan"
        },
        "product": {
          "type": "string"
        },
        "access": {
          "$ref": "#/definitions/accessAccess"
        },
        "created": {
          "type": "string",
          "format": "int64"
        },
        "software": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ansibleSoftware"
          },
          "title": "Must match contain all the software from the Billing Plan"
        }
      }
    },
    "nocloudinstancesInvokeResponse": {
      "type": "object",
      "properties": {
        "result": {
          "type": "boolean"
        },
        "meta": {
          "type": "object",
          "additionalProperties": {}
        }
      }
    },
    "nocloudservicesCreateRequest": {
      "type": "object",
      "properties": {
        "service": {
          "$ref": "#/definitions/servicesService"
        },
        "namespace": {
          "type": "string"
        }
      }
    },
    "nocloudservicesDeleteResponse": {
      "type": "object",
      "properties": {
        "result": {
          "type": "boolean"
        },
        "error": {
          "type": "string"
        }
      }
    },
    "nocloudservicesDownResponse": {
      "type": "object"
    },
    "nocloudservicesSuspendResponse": {
      "type": "object"
    },
    "nocloudservicesUnsuspendResponse": {
      "type": "object"
    },
    "nocloudservicesUpResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/servicesUpError"
          }
        }
      }
    },
    "nocloudservices_providersDeleteResponse": {
      "type": "object",
      "properties": {
        "result": {
          "type": "boolean"
        },
        "services": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "nocloudservices_providersGetTypeResponse": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        }
      }
    },
    "nocloudservices_providersInvokeResponse": {
      "type": "object",
      "properties": {
        "result": {
          "type": "boolean"
        },
        "meta": {
          "type": "object",
          "additionalProperties": {}
        }
      }
    },
    "nocloudservices_providersListResponse": {
      "type": "object",
      "properties": {
        "pool": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/services_providersServicesProvider"
          }
        }
      }
    },
    "nocloudservices_providersTestResponse": {
      "type": "object",
      "properties": {
        "result": {
          "type": "boolean"
        },
        "error": {
          "type": "string"
        }
      }
    },
    "nocloudsettingsDeleteResponse": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        }
      }
    },
    "nocloudsettingsGetRequest": {
      "type": "object",
      "properties": {
        "keys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "protobufNullValue": {
      "type": "string",
      "enum": [
        "NULL_VALUE"
      ],
      "default": "NULL_VALUE",
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\n The JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
    },
    "registryaccountsCreateRequest": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "title": "New Account title"
        },
        "auth": {
          "$ref": "#/definitions/accountsCredentials",
          "title": "Credentials for New Account"
        },
        "namespace": {
          "type": "string",
          "title": "Namespace to put Account under"
        },
        "access": {
          "type": "integer",
          "format": "int32",
          "title": "Account access level to parent namespace"
        },
        "currency": {
          "$ref": "#/definitions/billingCurrency",
          "title": "Account Balance Currency"
        }
      }
    },
    "registryaccountsCreateResponse": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        }
      }
    },
    "registryaccountsDeleteResponse": {
      "type": "object",
      "properties": {
        "result": {
          "type": "boolean"
        }
      }
    },
    "registryaccountsListResponse": {
      "type": "object",
      "properties": {
        "pool": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/accountsAccount"
          }
        }
      }
    },
    "registryaccountsSuspendResponse": {
      "type": "object",
      "properties": {
        "result": {
          "type": "boolean"
        }
      }
    },
    "registryaccountsUnsuspendResponse": {
      "type": "object",
      "properties": {
        "result": {
          "type": "boolean"
        }
      }
    },
    "registrynamespacesCreateRequest": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        }
      }
    },
    "registrynamespacesCreateResponse": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        }
      }
    },
    "registrynamespacesDeleteResponse": {
      "type": "object",
      "properties": {
        "result": {
          "type": "boolean"
        }
      }
    },
    "registrynamespacesListResponse": {
      "type": "object",
      "properties": {
        "pool": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/namespacesNamespace"
          }
        }
      }
    },
    "servicesService": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/statusesNoCloudStatus"
        },
        "context": {
          "type": "object",
          "additionalProperties": {}
        },
        "instancesGroups": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/instancesInstancesGroup"
          }
        },
        "hash": {
          "type": "string"
        },
        "access": {
          "$ref": "#/definitions/accessAccess"
        }
      }
    },
    "servicesServices": {
      "type": "object",
      "properties": {
        "pool": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/servicesService"
          }
        }
      }
    },
    "servicesTestConfigError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "instanceGroup": {
          "type": "string"
        },
        "instance": {
          "type": "string"
        }
      }
    },
    "servicesTestConfigResponse": {
      "type": "object",
      "properties": {
        "result": {
          "type": "boolean"
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/servicesTestConfigError"
          }
        }
      }
    },
    "servicesUpError": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "services_providersBindPlanResponse": {
      "type": "object"
    },
    "services_providersGenericResponse": {
      "type": "object",
      "properties": {
        "result": {
          "type": "boolean"
        },
        "error": {
          "type": "string"
        }
      }
    },
    "services_providersListExtentionsResponse": {
      "type": "object",
      "properties": {
        "types": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "services_providersLocationConf": {
      "type": "object",
      "properties": {
        "x": {
          "type": "number",
          "format": "float"
        },
        "y": {
          "type": "number",
          "format": "float"
        },
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "extra": {
          "type": "object",
          "additionalProperties": {}
        },
        "type": {
          "type": "string"
        }
      }
    },
    "services_providersPrepSP": {
      "type": "object",
      "properties": {
        "sp": {
          "$ref": "#/definitions/services_providersServicesProvider",
          "title": "SP Base config"
        },
        "extra": {
          "type": "object",
          "additionalProperties": {},
          "title": "Extra Params not related to SP or method or alike"
        }
      }
    },
    "services_providersProxyConf": {
      "type": "object",
      "properties": {
        "socket": {
          "type": "string"
        }
      }
    },
    "services_providersServicesProvider": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "secrets": {
          "type": "object",
          "additionalProperties": {},
          "title": "json"
        },
        "vars": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/services_providersVar"
          }
        },
        "extentions": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "state": {
          "$ref": "#/definitions/statesState"
        },
        "publicData": {
          "type": "object",
          "additionalProperties": {}
        },
        "public": {
          "type": "boolean",
          "title": "If set to true, the provider will be visible to all users"
        },
        "proxy": {
          "$ref": "#/definitions/services_providersProxyConf"
        },
        "locations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/services_providersLocationConf"
          }
        },
        "access": {
          "$ref": "#/definitions/accessAccess"
        },
        "meta": {
          "type": "object",
          "additionalProperties": {}
        }
      }
    },
    "services_providersShowcase": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "icon": {
          "type": "string"
        },
        "plans": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/billingPlan"
          }
        },
        "servicesProviders": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/services_providersServicesProvider"
          }
        },
        "locations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/services_providersLocationConf"
          }
        },
        "promo": {}
      }
    },
    "services_providersShowcases": {
      "type": "object",
      "properties": {
        "showcases": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/services_providersShowcase"
          }
        }
      }
    },
    "services_providersUnbindPlanResponse": {
      "type": "object"
    },
    "services_providersVar": {
      "type": "object",
      "properties": {
        "value": {
          "type": "object",
          "additionalProperties": {}
        }
      }
    },
    "settingsKeyEvent": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "event": {
          "type": "string"
        }
      }
    },
    "settingsKeysResponse": {
      "type": "object",
      "properties": {
        "pool": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/KeysResponseKey"
          }
        }
      }
    },
    "settingsPutResponse": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        }
      }
    },
    "statesInterface": {
      "type": "object",
      "properties": {
        "kind": {
          "$ref": "#/definitions/statesInterfaceKind"
        },
        "data": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "statesInterfaceKind": {
      "type": "string",
      "enum": [
        "UNSPECIFIED",
        "SSH"
      ],
      "default": "UNSPECIFIED",
      "title": "- SSH: Interface data must contain `host` and may contain `port` and `user`"
    },
    "statesNoCloudState": {
      "type": "string",
      "enum": [
        "INIT",
        "UNKNOWN",
        "STOPPED",
        "RUNNING",
        "FAILURE",
        "DELETED",
        "SUSPENDED",
        "OPERATION"
      ],
      "default": "INIT"
    },
    "statesObjectState": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "state": {
          "$ref": "#/definitions/statesState"
        }
      }
    },
    "statesState": {
      "type": "object",
      "properties": {
        "state": {
          "$ref": "#/definitions/statesNoCloudState",
          "title": "NoCloud Instance State"
        },
        "meta": {
          "type": "object",
          "additionalProperties": {},
          "title": "Driver(Provider/Hypervisor) State data"
        },
        "interfaces": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/statesInterface"
          }
        },
        "ts": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "statusesNoCloudStatus": {
      "type": "string",
      "enum": [
        "UNSPECIFIED",
        "INIT",
        "MODIFIED",
        "UP",
        "DOWN",
        "DEL",
        "PROC",
        "SUS"
      ],
      "default": "UNSPECIFIED"
    },
    "vanillaMonitoringResponse": {
      "type": "object"
    }
  }
}
