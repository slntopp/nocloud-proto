/*
Copyright Â© 2021-2023 Nikita Ivanovski info@slnt-opp.xyz

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
syntax = "proto3";
package nocloud.events;

import "google/protobuf/struct.proto";
import "google/api/annotations.proto";

message Event {
  string type = 1;
  string uuid = 2; // Entity uuid e.g. Account, Instance
  string id = 3;   // Event id
  string key = 4;
  map<string, google.protobuf.Value> data = 5;
  int64 ts = 6;
  int32 priority = 7; // 0 - unspecified priority(lowest one), 1 - highest priority
}

message Events {repeated Event events = 1;}

message ConsumeRequest {
  string type = 1;
  string uuid = 2;
}

message CancelRequest {
  string type = 1;
  string uuid = 2;
  string id = 3;
}

message Response {}

service EventsService {
  rpc Publish(Event) returns (Response) {
    option (google.api.http) = {
      post : "/bus/pub"
      body : "*"
    };
  };
  rpc Consume(ConsumeRequest) returns (stream Event) {
    option (google.api.http) = {
      get : "/bus/sub/{type}/{uuid}"
    };
  };

  rpc List(ConsumeRequest) returns (Events) {
    option (google.api.http) = {
      get : "/bus/list/{type}/{uuid}"
    };
  };

  rpc Cancel(CancelRequest) returns (Response) {
    option (google.api.http) = {
      post : "/bus/cancel"
      body : "*"
    };
  };
}
