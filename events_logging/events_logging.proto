/*
Copyright Â© 2021-2023 Nikita Ivanovski info@slnt-opp.xyz

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
syntax = "proto3";
package nocloud.events_logging;

import "google/protobuf/struct.proto";
import "google/api/annotations.proto";

message Snapshot {
  int32 id = 1;
  string diff = 2;
}

message Event {
  int32 id = 1;
  string entity = 2;
  string uuid = 3;
  string scope = 4;
  string action = 5;
  int32 rc = 6;
  string requestor = 7;
  int64 ts = 8;

  optional Snapshot snapshot = 9;
}

message Events {
  repeated Event events = 1;
  int64 count = 2;
}

message GetEventsRequest {
  string entity = 1;
  string uuid = 2;

  optional string scope = 3;
  optional int64 page = 4;
  optional int64 limit = 5;
}

message GetTraceRequest {
  string requestor = 1;

  optional int64 page = 2;
  optional int64 limit = 3;
}

service EventsLoggingService {
  rpc GetEvents(GetEventsRequest) returns (Events) {
    option (google.api.http) = {
      get : "/logging/{uuid}"
    };
  };

  rpc GetTrace(GetTraceRequest) returns (Events) {
    option (google.api.http) = {
      get : "/logging/trace/{requestor}"
    };
  };
}