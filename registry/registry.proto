/*
Copyright Â© 2021-2023 Nikita Ivanovski info@slnt-opp.xyz

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
syntax = "proto3";

package nocloud.registry;

import "google/api/annotations.proto";
import "notes/notes.proto";
import "registry/accounts/accounts.proto";
import "registry/namespaces/namespaces.proto";

service AccountsService {
  rpc Token (nocloud.registry.accounts.TokenRequest)
      returns (nocloud.registry.accounts.TokenResponse) {
    option (google.api.http) = {
      post: "/token"
      body: "*"
    };
  };
  rpc SetCredentials (nocloud.registry.accounts.SetCredentialsRequest)
      returns (nocloud.registry.accounts.SetCredentialsResponse) {
    option (google.api.http) = {
      post: "/accounts/{account}/credentials"
      body: "*"
    };
  };
  rpc AddNote (nocloud.notes.AddNoteRequest)
      returns (nocloud.notes.NoteResponse) {
    option (google.api.http) = {
      post: "/accounts/{uuid}/note"
      body: "*"
    };
  };
  rpc PatchNote (nocloud.notes.PatchNoteRequest)
      returns (nocloud.notes.NoteResponse) {
    option (google.api.http) = {
      patch: "/accounts/{uuid}/note"
      body: "*"
    };
  };
  rpc RemoveNote (nocloud.notes.RemoveNoteRequest)
      returns (nocloud.notes.NoteResponse) {
    option (google.api.http) = {
      delete: "/accounts/{uuid}/note"
    };
  };
  rpc Create (nocloud.registry.accounts.CreateRequest)
      returns (nocloud.registry.accounts.CreateResponse) {
    option (google.api.http) = {
      put: "/accounts"
      body: "*"
    };
  };
  rpc SignUp (nocloud.registry.accounts.CreateRequest)
      returns (nocloud.registry.accounts.CreateResponse) {
    option (google.api.http) = {
      post: "/accounts/signup"
      body: "*"
    };
  };
  rpc Update (nocloud.registry.accounts.Account)
      returns (nocloud.registry.accounts.UpdateResponse) {
    option (google.api.http) = {
      patch: "/accounts/{uuid}"
      body: "*"
    };
  };
  rpc Get (nocloud.registry.accounts.GetRequest)
      returns (nocloud.registry.accounts.Account) {
    option (google.api.http) = {
      get: "/accounts/{uuid}"
    };
  };
  rpc List (nocloud.registry.accounts.ListRequest)
      returns (nocloud.registry.accounts.ListResponse) {
    option (google.api.http) = {
      post: "/accounts"
      body: "*"
    };
  };
  rpc Delete (nocloud.registry.accounts.DeleteRequest)
      returns (nocloud.registry.accounts.DeleteResponse) {
    option (google.api.http) = {
      delete: "/accounts/{uuid}"
    };
  };
  rpc Suspend (nocloud.registry.accounts.SuspendRequest)
      returns (nocloud.registry.accounts.SuspendResponse) {
    option (google.api.http) = {
      post: "/accounts/{uuid}/suspend"
    };
  };
  rpc Unsuspend (nocloud.registry.accounts.UnsuspendRequest)
      returns (nocloud.registry.accounts.UnsuspendResponse) {
    option (google.api.http) = {
      post: "/accounts/{uuid}/unsuspend"
    };
  };
}

service NamespacesService {
  rpc Create (nocloud.registry.namespaces.CreateRequest)
      returns (nocloud.registry.namespaces.CreateResponse) {
    option (google.api.http) = {
      put: "/namespaces"
      body: "*"
    };
  };
  rpc List (nocloud.registry.namespaces.ListRequest)
      returns (nocloud.registry.namespaces.ListResponse) {
    option (google.api.http) = {
      get: "/namespaces"
    };
  };
  rpc Join (nocloud.registry.namespaces.JoinRequest)
      returns (nocloud.registry.namespaces.JoinResponse) {
    option (google.api.http) = {
      post: "/namespaces/{namespace}/join"
      body: "*"
    };
  };
  rpc Link (nocloud.registry.namespaces.LinkRequest)
      returns (nocloud.registry.namespaces.LinkResponse) {
    option (google.api.http) = {
      post: "/namespaces/{namespace}/link"
      body: "*"
    };
  };
  rpc Delete (nocloud.registry.namespaces.DeleteRequest)
      returns (nocloud.registry.namespaces.DeleteResponse) {
    option (google.api.http) = {
      delete: "/namespaces/{uuid}"
    };
  };
  rpc Patch (nocloud.registry.namespaces.PatchRequest)
      returns (nocloud.registry.namespaces.PatchResponse) {
    option (google.api.http) = {
      patch: "/namespaces/{uuid}"
      body: "*"
    };
  };
}