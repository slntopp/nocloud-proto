/*
Copyright Â© 2021-2023 Nikita Ivanovski info@slnt-opp.xyz

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
syntax = "proto3";
package nocloud.settings;

import "google/protobuf/struct.proto";
import "google/api/annotations.proto";

message GetRequest { repeated string keys = 1; }

message PutRequest {
  string key = 1;
  string value = 2;
  optional string description = 3;
  optional bool public = 4;
}

message PutResponse { string key = 1; }

// message SubRequest {
//     string key = 1;
//     string value = 2;
// }

message KeysRequest {}
message KeysResponse {
  message Key {
    string key = 1;
    string description = 2;
    bool public = 3;
  }
  repeated Key pool = 1;
}

message DeleteRequest { string key = 1; }

message DeleteResponse { string key = 1; }

message KeyEvent {
  string key = 1;
  string event = 2;
}

service SettingsService {
  rpc Get(nocloud.settings.GetRequest) returns (google.protobuf.Struct) {
    option (google.api.http) = {
      post : "/settings"
      body : "*"
    };
  };
  rpc Put(nocloud.settings.PutRequest) returns (nocloud.settings.PutResponse) {
    option (google.api.http) = {
      put : "/settings/{key}"
      body : "*"
    };
  };
  rpc Sub(nocloud.settings.GetRequest)
      returns (stream nocloud.settings.KeyEvent) {
    option (google.api.http) = {
      get : "/settings/watch"
    };
  };
  rpc Keys(nocloud.settings.KeysRequest)
      returns (nocloud.settings.KeysResponse) {
    option (google.api.http) = {
      get : "/settings"
    };
  };
  rpc Delete(nocloud.settings.DeleteRequest)
      returns (nocloud.settings.DeleteResponse) {
    option (google.api.http) = {
      delete : "/settings/{key}"
    };
  };
}
